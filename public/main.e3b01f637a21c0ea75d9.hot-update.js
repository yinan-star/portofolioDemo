/*! For license information please see main.e3b01f637a21c0ea75d9.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Transition.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>r});var i=t("./node_modules/gsap/index.js"),o=t("./node_modules/ogl/src/extras/Plane.js"),a=t("./node_modules/ogl/src/core/Program.js"),h=t("./node_modules/ogl/src/core/Mesh.js"),l=t("./app/shaders/plane-fragment.glsl"),n=t("./app/shaders/plane-vertex.glsl");const r=class{constructor({collections:e,gl:s,scene:t,sizes:i,url:a}){this.collections=e,this.gl=s,this.scene=t,this.sizes=i,this.url=a,this.geometry=new o.Plane(this.gl)}createProgram(e){this.program=new a.Program(this.gl,{fragment:l.default,vertex:n.default,uniforms:{uAlpha:{value:1},tMap:{value:e}}})}createMesh(e){this.mesh=new h.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.scale.x=this.media.mesh.scale.x,this.mesh.scale.y=this.media.mesh.scale.y,this.mesh.scale.z=this.media.mesh.scale.z,this.mesh.position.x=e.position.x,this.mesh.position.y=e.position.y,this.mesh.position.z=e.position.z+.01,this.mesh.setParent(this.scene)}setElement(e){if(console.log(e.id),"collections"===e.id){const{index:s,medias:t}=e,i=t[s];console.log(i,i.texture),this.createProgram(i.texture),this.createMesh(i.mesh)}else this.createProgram(e.texture),this.createMesh(e)}animate(e,s,t){"detail"===this.transition&&(i.default.to(this.mesh.scale,{duration:1.5,ease:"expo.inOut",x:e.mesh.scale.x,y:e.mesh.scale.y,z:e.mesh.scale.z}),i.default.to(this.mesh.position,{duration:1.5,ease:"expo.inOut",onComplete:s,x:e.mesh.position.x,y:e.mesh.position.y,z:e.mesh.position.z}))}}}},(function(e){e.h=()=>"f33fb0d23788336baa6c"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5lM2IwMWY2MzdhMjFjMGVhNzVkOS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7Z1lBT0EsY0FDRUEsV0FBQUEsRUFBWSxZQUFFQyxFQUFXLEdBQUVDLEVBQUUsTUFBRUMsRUFBSyxNQUFFQyxFQUFLLElBQUVDLElBQzNDQyxLQUFLTCxZQUFjQSxFQUNuQkssS0FBS0osR0FBS0EsRUFDVkksS0FBS0gsTUFBUUEsRUFDYkcsS0FBS0YsTUFBUUEsRUFDYkUsS0FBS0QsSUFBTUEsRUFFWEMsS0FBS0MsU0FBVyxJQUFJQyxFQUFBQSxNQUFNRixLQUFLSixHQUdqQyxDQUdBTyxhQUFBQSxDQUFjQyxHQUNaSixLQUFLSyxRQUFVLElBQUlDLEVBQUFBLFFBQVFOLEtBQUtKLEdBQUksQ0FDbENXLFNBQVEsVUFDUkMsT0FBTSxVQUNOQyxTQUFVLENBQ1JDLE9BQVEsQ0FBRUMsTUFBTyxHQUNqQkMsS0FBTSxDQUFFRCxNQUFPUCxLQUdyQixDQUVBUyxVQUFBQSxDQUFXQyxHQUNUZCxLQUFLYyxLQUFPLElBQUlDLEVBQUFBLEtBQUtmLEtBQUtKLEdBQUksQ0FDNUJLLFNBQVVELEtBQUtDLFNBQ2ZJLFFBQVNMLEtBQUtLLFVBR2hCTCxLQUFLYyxLQUFLRSxNQUFNQyxFQUFJakIsS0FBS2tCLE1BQU1KLEtBQUtFLE1BQU1DLEVBQzFDakIsS0FBS2MsS0FBS0UsTUFBTUcsRUFBSW5CLEtBQUtrQixNQUFNSixLQUFLRSxNQUFNRyxFQUMxQ25CLEtBQUtjLEtBQUtFLE1BQU1JLEVBQUlwQixLQUFLa0IsTUFBTUosS0FBS0UsTUFBTUksRUFFMUNwQixLQUFLYyxLQUFLTyxTQUFTSixFQUFJSCxFQUFLTyxTQUFTSixFQUNyQ2pCLEtBQUtjLEtBQUtPLFNBQVNGLEVBQUlMLEVBQUtPLFNBQVNGLEVBQ3JDbkIsS0FBS2MsS0FBS08sU0FBU0QsRUFBSU4sRUFBS08sU0FBU0QsRUFBSSxJQUd6Q3BCLEtBQUtjLEtBQUtRLFVBQVV0QixLQUFLSCxNQUczQixDQUdBMEIsVUFBQUEsQ0FBV0MsR0FHVCxHQUZBQyxRQUFRQyxJQUFJRixFQUFRRyxJQUVELGdCQUFmSCxFQUFRRyxHQUFzQixDQUNoQyxNQUFNLE1BQUVDLEVBQUssT0FBRUMsR0FBV0wsRUFDcEJOLEVBQVFXLEVBQU9ELEdBRXJCSCxRQUFRQyxJQUFJUixFQUFPQSxFQUFNZCxTQUV6QkosS0FBS0csY0FBY2UsRUFBTWQsU0FDekJKLEtBQUthLFdBQVdLLEVBQU1KLEtBQ3hCLE1BQ0VkLEtBQUtHLGNBQWNxQixFQUFRcEIsU0FDM0JKLEtBQUthLFdBQVdXLEVBSXBCLENBRUFNLE9BQUFBLENBQVFOLEVBQVNPLEVBQVlDLEdBRUgsV0FBcEJoQyxLQUFLaUMsYUFDUEMsRUFBQUEsUUFBS0MsR0FBR25DLEtBQUtjLEtBQUtFLE1BQU8sQ0FDdkJvQixTQUFVLElBQ1ZDLEtBQU0sYUFDTnBCLEVBQUdPLEVBQVFWLEtBQUtFLE1BQU1DLEVBQ3RCRSxFQUFHSyxFQUFRVixLQUFLRSxNQUFNRyxFQUN0QkMsRUFBR0ksRUFBUVYsS0FBS0UsTUFBTUksSUFHeEJjLEVBQUFBLFFBQUtDLEdBQUduQyxLQUFLYyxLQUFLTyxTQUFVLENBQzFCZSxTQUFVLElBQ1ZDLEtBQU0sYUFDTk4sYUFDQWQsRUFBR08sRUFBUVYsS0FBS08sU0FBU0osRUFDekJFLEVBQUdLLEVBQVFWLEtBQUtPLFNBQVNGLEVBQ3pCQyxFQUFHSSxFQUFRVixLQUFLTyxTQUFTRCxJQUkvQixrQkM3RkZrQixFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvZW1hLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL1RyYW5zaXRpb24uanMiLCJ3ZWJwYWNrOi8vZmxvZW1hL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvL+WkhOeQhueFp+eJh1xuaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCdcbmltcG9ydCB7IE1lc2gsIFBsYW5lLCBQcm9ncmFtLCBUZXh0dXJlIH0gZnJvbSAnb2dsJztcblxuaW1wb3J0IGZyYWdtZW50IGZyb20gJ3NoYWRlcnMvcGxhbmUtZnJhZ21lbnQuZ2xzbCc7XG5pbXBvcnQgdmVydGV4IGZyb20gJ3NoYWRlcnMvcGxhbmUtdmVydGV4Lmdsc2wnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKHsgY29sbGVjdGlvbnMsIGdsLCBzY2VuZSwgc2l6ZXMsIHVybCB9KSB7XG4gICAgdGhpcy5jb2xsZWN0aW9ucyA9IGNvbGxlY3Rpb25zO1xuICAgIHRoaXMuZ2wgPSBnbDtcbiAgICB0aGlzLnNjZW5lID0gc2NlbmU7XG4gICAgdGhpcy5zaXplcyA9IHNpemVzO1xuICAgIHRoaXMudXJsID0gdXJsO1xuXG4gICAgdGhpcy5nZW9tZXRyeSA9IG5ldyBQbGFuZSh0aGlzLmdsKVxuICAgIC8vIOS4iumdoueahGVsbWVudOmDveaYr+mcgOimgeWkjeeUqOeahOaJgOS7peWcqOi/memHjOWIneWni+WMllxuXG4gIH1cblxuICAvLyDnhLblkI7lsIbpgInlpb3nmoTnhafniYfkvKDnu5lwcm9ncmFt5aSE55CG6LS05Zu+XG4gIGNyZWF0ZVByb2dyYW0odGV4dHVyZSkge1xuICAgIHRoaXMucHJvZ3JhbSA9IG5ldyBQcm9ncmFtKHRoaXMuZ2wsIHtcbiAgICAgIGZyYWdtZW50LFxuICAgICAgdmVydGV4LFxuICAgICAgdW5pZm9ybXM6IHtcbiAgICAgICAgdUFscGhhOiB7IHZhbHVlOiAxIH0sXG4gICAgICAgIHRNYXA6IHsgdmFsdWU6IHRleHR1cmUgfVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBjcmVhdGVNZXNoKG1lc2gpIHtcbiAgICB0aGlzLm1lc2ggPSBuZXcgTWVzaCh0aGlzLmdsLCB7XG4gICAgICBnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcbiAgICAgIHByb2dyYW06IHRoaXMucHJvZ3JhbSxcbiAgICB9KTtcblxuICAgIHRoaXMubWVzaC5zY2FsZS54ID0gdGhpcy5tZWRpYS5tZXNoLnNjYWxlLng7XG4gICAgdGhpcy5tZXNoLnNjYWxlLnkgPSB0aGlzLm1lZGlhLm1lc2guc2NhbGUueTtcbiAgICB0aGlzLm1lc2guc2NhbGUueiA9IHRoaXMubWVkaWEubWVzaC5zY2FsZS56O1xuXG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnggPSBtZXNoLnBvc2l0aW9uLng7XG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnkgPSBtZXNoLnBvc2l0aW9uLnk7XG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnogPSBtZXNoLnBvc2l0aW9uLnogKyAwLjAxO1xuXG5cbiAgICB0aGlzLm1lc2guc2V0UGFyZW50KHRoaXMuc2NlbmUpO1xuICAgIC8vIG1lc2jmmK9zY2VuZeeahOWtkOWFg+e0oOOAglxuXG4gIH1cblxuICAvLyBFbGVtZW50XG4gIHNldEVsZW1lbnQoZWxlbWVudCkge1xuICAgIGNvbnNvbGUubG9nKGVsZW1lbnQuaWQpXG5cbiAgICBpZiAoZWxlbWVudC5pZCA9PT0gJ2NvbGxlY3Rpb25zJykge1xuICAgICAgY29uc3QgeyBpbmRleCwgbWVkaWFzIH0gPSBlbGVtZW50XG4gICAgICBjb25zdCBtZWRpYSA9IG1lZGlhc1tpbmRleF1cblxuICAgICAgY29uc29sZS5sb2cobWVkaWEsIG1lZGlhLnRleHR1cmUpXG5cbiAgICAgIHRoaXMuY3JlYXRlUHJvZ3JhbShtZWRpYS50ZXh0dXJlKVxuICAgICAgdGhpcy5jcmVhdGVNZXNoKG1lZGlhLm1lc2gpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuY3JlYXRlUHJvZ3JhbShlbGVtZW50LnRleHR1cmUpXG4gICAgICB0aGlzLmNyZWF0ZU1lc2goZWxlbWVudClcbiAgICB9XG5cblxuICB9XG4gIC8vIEFuaW1hdGlvbnMuXG4gIGFuaW1hdGUoZWxlbWVudCwgb25Db21wbGV0ZSwgZmxhZykge1xuICAgIC8vIOiuqWZha2luZyBpbWFnZeWKqOi1t+adpW1hdGNo5Y6f5pyJ55qEaW1hZ2Us5L2G5piv6L+Z5Liq6L+H56iL6ZyA6KaB562J5Yeg56eSLOWboOS4uuWcqGNvbGxlY3Rpb25z55qEaW5kZXjph4zorr7nva7kuoZib3VuZHPpnIDopoHnrYnlh6Dnp5Iu6L+Z5Liq562J5Yeg56eS5ZyoQ2FudmFz55qEaW5kZXjmlofku7bph4zorr7nva5HU0FQLmRlbGF5ZWRDYWxsXG4gICAgaWYgKHRoaXMudHJhbnNpdGlvbiA9PT0gJ2RldGFpbCcpIHtcbiAgICAgIEdTQVAudG8odGhpcy5tZXNoLnNjYWxlLCB7XG4gICAgICAgIGR1cmF0aW9uOiAxLjUsXG4gICAgICAgIGVhc2U6ICdleHBvLmluT3V0JyxcbiAgICAgICAgeDogZWxlbWVudC5tZXNoLnNjYWxlLngsXG4gICAgICAgIHk6IGVsZW1lbnQubWVzaC5zY2FsZS55LFxuICAgICAgICB6OiBlbGVtZW50Lm1lc2guc2NhbGUueixcblxuICAgICAgfSlcbiAgICAgIEdTQVAudG8odGhpcy5tZXNoLnBvc2l0aW9uLCB7XG4gICAgICAgIGR1cmF0aW9uOiAxLjUsXG4gICAgICAgIGVhc2U6ICdleHBvLmluT3V0JyxcbiAgICAgICAgb25Db21wbGV0ZSxcbiAgICAgICAgeDogZWxlbWVudC5tZXNoLnBvc2l0aW9uLngsXG4gICAgICAgIHk6IGVsZW1lbnQubWVzaC5wb3NpdGlvbi55LFxuICAgICAgICB6OiBlbGVtZW50Lm1lc2gucG9zaXRpb24ueixcbiAgICAgIH0pXG4gICAgfVxuXG4gIH1cblxuXG5cblxuXG59IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiZjMzZmIwZDIzNzg4MzM2YmFhNmNcIikiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJjb2xsZWN0aW9ucyIsImdsIiwic2NlbmUiLCJzaXplcyIsInVybCIsInRoaXMiLCJnZW9tZXRyeSIsIlBsYW5lIiwiY3JlYXRlUHJvZ3JhbSIsInRleHR1cmUiLCJwcm9ncmFtIiwiUHJvZ3JhbSIsImZyYWdtZW50IiwidmVydGV4IiwidW5pZm9ybXMiLCJ1QWxwaGEiLCJ2YWx1ZSIsInRNYXAiLCJjcmVhdGVNZXNoIiwibWVzaCIsIk1lc2giLCJzY2FsZSIsIngiLCJtZWRpYSIsInkiLCJ6IiwicG9zaXRpb24iLCJzZXRQYXJlbnQiLCJzZXRFbGVtZW50IiwiZWxlbWVudCIsImNvbnNvbGUiLCJsb2ciLCJpZCIsImluZGV4IiwibWVkaWFzIiwiYW5pbWF0ZSIsIm9uQ29tcGxldGUiLCJmbGFnIiwidHJhbnNpdGlvbiIsIkdTQVAiLCJ0byIsImR1cmF0aW9uIiwiZWFzZSIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==