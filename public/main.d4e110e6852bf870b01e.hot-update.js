/*! For license information please see main.d4e110e6852bf870b01e.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>d});var o=s("./node_modules/ogl/src/core/Renderer.js"),i=s("./node_modules/ogl/src/core/Camera.js"),h=s("./node_modules/ogl/src/core/Transform.js"),n=s("./app/components/Canvas/home/index.js"),c=s("./app/components/Canvas/about/index.js"),a=s("./app/components/Canvas/collections/index.js"),l=s("./app/components/Canvas/Transition.js"),r=s.n(l);class d{constructor({template:e}){this.template=e,this.x={start:0,distance:0,end:0},this.y={start:0,distance:0,end:0},this.createRenderer(),this.createCamera(),this.createScene(),this.onResize()}createRenderer(){this.renderer=new o.Renderer({alpha:!0,antialias:!0}),this.gl=this.renderer.gl,document.body.appendChild(this.gl.canvas)}createCamera(){this.camera=new i.Camera(this.gl),this.camera.position.z=5}createScene(){this.scene=new h.Transform}createHome(){this.home=new n.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyHome(){this.home&&(this.home.destroy(),this.home=null)}createAbout(){this.about=new c.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyAbout(){this.about&&(this.about.destroy(),this.about=null)}createCollections(){this.collections=new a.default({gl:this.gl,scene:this.scene,sizes:this.sizes})}destroyCollections(){this.collections&&(this.collections.destroy(),this.collections=null)}onPreloaded(){this.onChangeEnd(this.template)}onChangeStart(e,t){this.about&&this.about.hide(),this.collections&&this.collections.hide(),this.home&&this.home.hide(),this.isFromCollectionsToDetail="collections"===this.template&&t.indexOf("detail")>-1,this.isFromDetailToCollections="detail"===this.template&&t.indexOf("collections")>-1,(this.isFromCollectionsToDetail||this.isFromDetailToCollections)&&(this.transition=new(r())({collections:this.collections,gl:this.gl,scene:this.scene,sizes:this.sizes,url:t}))}onChangeEnd(e){"about"===e?this.createAbout():this.about&&this.destroyAbout(),"collections"===e?this.createCollections():this.collections&&this.destroyCollections(),"home"===e?this.createHome():this.destroyHome()}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.perspective({aspect:window.innerWidth/window.innerHeight});const e=this.camera.fov*(Math.PI/180),t=2*Math.tan(e/2)*this.camera.position.z,s=t*this.camera.aspect;this.sizes={height:t,width:s};const o={sizes:this.sizes};this.about&&this.about.onResize(o),this.collections&&this.collections.onResize(o),this.home&&this.home.onResize(o)}onTouchDown(e){this.isDown=!0,this.x.start=e.touches?e.touches[0].clientX:e.clientX,this.y.start=e.touches?e.touches[0].clientY:e.clientY;const t={x:this.x,y:this.y};this.about&&this.about.onTouchDown(t),this.collections&&this.collections.onTouchDown(t),this.home&&this.home.onTouchDown(t)}onTouchMove(e){if(!this.isDown)return;const t=e.touches?e.touches[0].clientX:e.clientX,s=e.touches?e.touches[0].clientY:e.clientY;this.x.end=t,this.y.end=s;const o={x:this.x,y:this.y};this.about&&this.about.onTouchMove(o),this.collections&&this.collections.onTouchMove(o),this.home&&this.home.onTouchMove(o)}onTouchUp(e){this.isDown=!1;const t=e.changedTouches?e.changedTouches[0].clientX:e.clientX,s=e.changedTouches?e.changedTouches[0].clientY:e.clientY;this.x.end=t,this.y.end=s;const o={x:this.x,y:this.y};this.about&&this.about.onTouchUp(o),this.collections&&this.collections.onTouchUp(o),this.home&&this.home.onTouchUp(o)}onWheel(e){this.home&&this.home.onWheel(e),this.collections&&this.collections.onWheel(e)}update(e){this.about&&this.about.update(e),this.collections&&this.collections.update(),this.home&&this.home.update(),this.renderer.render({camera:this.camera,scene:this.scene})}}}},(function(e){e.h=()=>"5cbb7464a253bb5a3b01"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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S0FBS1UsU0FBU2dFLE9BQU8sQ0FDbkJ2RCxPQUFRbkIsS0FBS21CLE9BQ2JJLE1BQU92QixLQUFLdUIsT0FFaEIsa0JDdlVGb0QsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb2VtYS8uL2FwcC9jb21wb25lbnRzL0NhbnZhcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9mbG9lbWEvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIOi/meS4quaWh+S7tueahOS4iuS4gOe6p+S6pOaOpeaYr2NvbXBvbmVudHPnmoRpbmRleC5qc+aWh+S7tlxuaW1wb3J0IHsgQ2FtZXJhLCBSZW5kZXJlciwgVHJhbnNmb3JtIH0gZnJvbSAnb2dsJztcblxuaW1wb3J0IEhvbWUgZnJvbSAnLi9ob21lJztcbmltcG9ydCBBYm91dCBmcm9tICcuL2Fib3V0JztcbmltcG9ydCBDb2xsZWN0aW9ucyBmcm9tICcuL2NvbGxlY3Rpb25zJ1xuXG5pbXBvcnQgVHJhbnNpdGlvbiBmcm9tICcuL1RyYW5zaXRpb24nXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhbnZhcyB7XG4gIGNvbnN0cnVjdG9yKHt0ZW1wbGF0ZX0pIHtcbiAgICB0aGlzLnRlbXBsYXRlID0gdGVtcGxhdGVcbiAgICAvLyB0ZW1wbGF0ZeaYr+aVsOaNruaooeeJiFxuICAgIHRoaXMueCA9IHtcbiAgICAgIHN0YXJ0OiAwLFxuICAgICAgZGlzdGFuY2U6IDAsXG4gICAgICBlbmQ6IDBcbiAgICB9XG4gICAgdGhpcy55ID0ge1xuICAgICAgc3RhcnQ6IDAsXG4gICAgICBkaXN0YW5jZTogMCxcbiAgICAgIGVuZDogMFxuICAgIH1cblxuXG4gICAgdGhpcy5jcmVhdGVSZW5kZXJlcigpXG4gICAgdGhpcy5jcmVhdGVDYW1lcmEoKVxuICAgIHRoaXMuY3JlYXRlU2NlbmUoKVxuXG4gICAgdGhpcy5vblJlc2l6ZSgpXG5cbiAgICAvLyB0aGlzLmNyZWF0ZUN1YmUoKVxuICAgIC8vIOS7gOS5iOS7gOS5iOW/mOiusGRlZmluZeS6hu+8jOWwseeci+i/memHjOacieayoeacieiiq+WIneWni+WMllxuICB9XG5cbiAgY3JlYXRlUmVuZGVyZXIoKSB7XG4gICAgdGhpcy5yZW5kZXJlciA9IG5ldyBSZW5kZXJlcigge1xuICAgICAgYWxwaGE6IHRydWUsXG4gICAgICAvLyDorql3ZWJnbOeahOiDjOaZr+iJsumAj+aYju+8jOS7juiAjOaYvuekumNzc+iuvue9rueahOminOiJslxuICAgICAgYW50aWFsaWFzOnRydWVcbiAgICAgIC8vIOaKl+mUr+m9v1xuICAgIH0pO1xuXG4gICAgdGhpcy5nbCA9IHRoaXMucmVuZGVyZXIuZ2w7IC8vVElQIHdvcmtzIGxpa2UgYSBjYW52YXMgY29udGV4dFxuXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmdsLmNhbnZhcyk7XG4gIH1cblxuICBjcmVhdGVDYW1lcmEoKSB7XG4gICAgdGhpcy5jYW1lcmEgPSBuZXcgQ2FtZXJhKHRoaXMuZ2wpXG4gICAgdGhpcy5jYW1lcmEucG9zaXRpb24ueiA9IDVcblxuICB9XG5cbiAgY3JlYXRlU2NlbmUoKSB7XG4gICAgdGhpcy5zY2VuZSA9IG5ldyBUcmFuc2Zvcm0oKVxuICB9XG5cbiAgLyoqXG4gICAqIEhvbWUuXG4gICAqL1xuICBjcmVhdGVIb21lKCkge1xuICAgIHRoaXMuaG9tZSA9IG5ldyBIb21lKHtcbiAgICAgIGdsOiB0aGlzLmdsLFxuICAgICAgc2NlbmU6IHRoaXMuc2NlbmUsXG4gICAgICBzaXplczogdGhpcy5zaXplc1xuICAgIH0pO1xuXG4gIH1cblxuICBkZXN0cm95SG9tZSgpe1xuICAgIGlmKCF0aGlzLmhvbWUpIHJldHVyblxuICAgIC8vIOWmguaenOS4jeWtmOWcqGhvbWXvvIzlsLHplIDmr4Fob21l77yM77yB5piv5LiN5oiQ56uL55qE5oSP5oCd77yM5p2h5Lu25Li65YGHXG4gICAgdGhpcy5ob21lLmRlc3Ryb3koKVxuICAgIHRoaXMuaG9tZSA9IG51bGxcbiAgfVxuXG5cbiAgLyoqXG4gICAqIEFib3V0LlxuICAgKi9cbiAgY3JlYXRlQWJvdXQoKXtcbiAgICB0aGlzLmFib3V0ID0gbmV3IEFib3V0KHtcbiAgICAgIGdsOiB0aGlzLmdsLFxuICAgICAgc2NlbmU6IHRoaXMuc2NlbmUsXG4gICAgICBzaXplczogdGhpcy5zaXplc1xuICAgIH0pO1xuICB9XG5cbiAgZGVzdHJveUFib3V0KCl7XG4gICAgaWYoIXRoaXMuYWJvdXQpIHJldHVyblxuICAgIC8vIOWmguaenOS4jeWtmOWcqGFib3V077yM5bCx6ZSA5q+BYWJvdXTvvIzvvIHmmK/kuI3miJDnq4vnmoTmhI/mgJ3vvIzmnaHku7bkuLrlgYdcbiAgICB0aGlzLmFib3V0LmRlc3Ryb3koKVxuICAgIHRoaXMuYWJvdXQgPSBudWxsXG4gIH1cblxuICAvKipcbiAgICogQ29sbGVjdGlvbnMuXG4gICAqL1xuICBjcmVhdGVDb2xsZWN0aW9ucygpe1xuICAgIHRoaXMuY29sbGVjdGlvbnMgPSBuZXcgQ29sbGVjdGlvbnMoe1xuICAgICAgZ2w6IHRoaXMuZ2wsXG4gICAgICBzY2VuZTogdGhpcy5zY2VuZSxcbiAgICAgIHNpemVzOiB0aGlzLnNpemVzXG4gICAgfSk7XG4gIH1cblxuICBkZXN0cm95Q29sbGVjdGlvbnMoKXtcbiAgICBpZighdGhpcy5jb2xsZWN0aW9ucykgcmV0dXJuXG4gICAgLy8g5aaC5p6c5LiN5a2Y5ZyoQ29sbGVjdGlvbnPvvIzlsLHplIDmr4FDb2xsZWN0aW9uc++8jO+8geaYr+S4jeaIkOeri+eahOaEj+aAne+8jOadoeS7tuS4uuWBh1xuICAgIHRoaXMuY29sbGVjdGlvbnMuZGVzdHJveSgpXG4gICAgdGhpcy5jb2xsZWN0aW9ucyA9IG51bGxcbiAgfVxuXG4gIC8vIGNyZWF0ZUN1YmUoKSB7XG4gIC8vICAgdGhpcy5nZW9tZXRyeSA9IG5ldyBCb3godGhpcy5nbClcbiAgLy8gICB0aGlzLnByb2dyYW0gPSBuZXcgUHJvZ3JhbSh0aGlzLmdsLCB7XG4gIC8vICAgICB2ZXJ0ZXgsXG4gIC8vICAgICBmcmFnbWVudFxuICAvLyAgIH0pXG4gIC8vICAgLy8g5bCGZ2zkvZzkuLrnrKzkuIDkuKrlhYPntKDkvKDnu5lNZXNoXG4gIC8vICAgdGhpcy5tZXNoID0gbmV3IE1lc2godGhpcy5nbCwge1xuICAvLyAgICAgZ2VvbWV0cnk6dGhpcy5nZW9tZXRyeSwgXG4gIC8vICAgICBwcm9ncmFtOnRoaXMucHJvZ3JhbVxuICAvLyAgIH0pXG4gIC8vICAgLy8g5bCG55uS5a2Q6K6+572u5Li655u45py655qE5a2Q5YWD57SgXG4gIC8vICAgdGhpcy5tZXNoLnNldFBhcmVudCh0aGlzLnNjZW5lKVxuXG4gIC8vIH1cblxuICAvLyBFdmVudHNcbiAgXG5cbiAgLyoqXG4gICAqIEVWRU5UU1xuICAgKi9cbiAgb25QcmVsb2FkZWQoKXtcbiAgICB0aGlzLm9uQ2hhbmdlRW5kKHRoaXMudGVtcGxhdGUpXG4gIH1cbiAgb25DaGFuZ2VTdGFydCh0ZW1wbGF0ZSwgdXJsKXtcbiAgICBpZih0aGlzLmFib3V0KXtcbiAgICAgIHRoaXMuYWJvdXQuaGlkZSgpXG4gICAgfVxuXG4gICAgaWYodGhpcy5jb2xsZWN0aW9ucyl7XG4gICAgICB0aGlzLmNvbGxlY3Rpb25zLmhpZGUoKVxuICAgIH1cblxuICAgIGlmKHRoaXMuaG9tZSl7XG4gICAgICB0aGlzLmhvbWUuaGlkZSgpXG4gICAgfVxuXG4gICAgdGhpcy5pc0Zyb21Db2xsZWN0aW9uc1RvRGV0YWlsID0gdGhpcy50ZW1wbGF0ZSA9PT0nY29sbGVjdGlvbnMnICYmIHVybC5pbmRleE9mKCdkZXRhaWwnKSA+IC0xXG4gICAgdGhpcy5pc0Zyb21EZXRhaWxUb0NvbGxlY3Rpb25zID0gdGhpcy50ZW1wbGF0ZSA9PT0nZGV0YWlsJyAmJiB1cmwuaW5kZXhPZignY29sbGVjdGlvbnMnKSA+IC0xXG4gICAgLy8g5aaC5p6c5pivZGV0YWls5bm25LiULGNvbGxlY3Rpb25zIGFyZSB0aGUgcGFydCBvZiB0aGUgdXJs5LuW55qE5YC85bCx5pivPi0x55qEXG5cbiAgICBpZih0aGlzLmlzRnJvbUNvbGxlY3Rpb25zVG9EZXRhaWwgfHwgdGhpcy5pc0Zyb21EZXRhaWxUb0NvbGxlY3Rpb25zKXtcbiAgICAgICB0aGlzLnRyYW5zaXRpb24gPSBuZXcgVHJhbnNpdGlvbih7XG4gICAgICAgIGNvbGxlY3Rpb25zIDp0aGlzLmNvbGxlY3Rpb25zLFxuICAgICAgICBnbDogdGhpcy5nbCxcbiAgICAgICAgc2NlbmU6IHRoaXMuc2NlbmUsXG4gICAgICAgIHNpemVzOiB0aGlzLnNpemVzLFxuICAgICAgICB1cmxcbiAgICAgICB9KVxuICAgIH1cbiAgfVxuICBvbkNoYW5nZUVuZCh0ZW1wbGF0ZSl7XG4gICAgLy8g5bCx5piv5b2T55So5oi3Y2hhbmdlIHRoZSByb3V0ZVxuICAgIGlmKHRlbXBsYXRlID09PSAnYWJvdXQnKXtcbiAgICAgIHRoaXMuY3JlYXRlQWJvdXQoKVxuICAgIH1lbHNlIGlmICh0aGlzLmFib3V0KXtcbiAgICAgIHRoaXMuZGVzdHJveUFib3V0KClcbiAgICB9XG5cbiAgICBpZih0ZW1wbGF0ZSA9PT0gJ2NvbGxlY3Rpb25zJyl7XG4gICAgICB0aGlzLmNyZWF0ZUNvbGxlY3Rpb25zKClcbiAgICB9ZWxzZSBpZiAodGhpcy5jb2xsZWN0aW9ucyl7XG4gICAgICB0aGlzLmRlc3Ryb3lDb2xsZWN0aW9ucygpXG4gICAgfVxuXG4gICAgaWYodGVtcGxhdGUgPT09ICdob21lJyl7XG4gICAgICB0aGlzLmNyZWF0ZUhvbWUoKVxuICAgIH1lbHNlIHtcbiAgICAgIHRoaXMuZGVzdHJveUhvbWUoKVxuICAgIH1cblxuICB9XG5cbiAgb25SZXNpemUoKSB7XG4gICAgLy8g5bCG5riy5p+T55qE55S75biD5bC65a+45aGr5ruh6KeG56qX5Y+jXG4gICAgdGhpcy5yZW5kZXJlci5zZXRTaXplKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpO1xuICAgIC8vIOWIm+W7uuS6hmNhbWVyYeS5i+WQjuaJjeiDveWIm+W7uumAj+inhuWbvlxuICAgIHRoaXMuY2FtZXJhLnBlcnNwZWN0aXZlKHsgYXNwZWN0OiB3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5pbm5lckhlaWdodCB9KTtcblxuICAgIGNvbnN0IGZvdiA9IHRoaXMuY2FtZXJhLmZvdiAqIChNYXRoLlBJIC8gMTgwKTtcbiAgICBjb25zdCBoZWlnaHQgPSAyICogTWF0aC50YW4oZm92IC8gMikgKiB0aGlzLmNhbWVyYS5wb3NpdGlvbi56O1xuICAgIGNvbnN0IHdpZHRoID0gaGVpZ2h0ICogdGhpcy5jYW1lcmEuYXNwZWN0O1xuXG4gICAgdGhpcy5zaXplcyA9IHtcbiAgICAgIGhlaWdodCxcbiAgICAgIHdpZHRoLFxuICAgIH07XG5cbiAgICBjb25zdCB2YWx1ZXMgPSB7c2l6ZXM6IHRoaXMuc2l6ZXN9XG5cbiAgICBpZiAodGhpcy5hYm91dCkge1xuICAgICAgdGhpcy5hYm91dC5vblJlc2l6ZSh2YWx1ZXMpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmNvbGxlY3Rpb25zKSB7XG4gICAgICB0aGlzLmNvbGxlY3Rpb25zLm9uUmVzaXplKHZhbHVlcyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaG9tZSkge1xuICAgICAgdGhpcy5ob21lLm9uUmVzaXplKHZhbHVlcyk7XG4gICAgfVxuICB9XG5cbiAgb25Ub3VjaERvd24oZXZlbnQpIHtcbiAgICB0aGlzLmlzRG93biA9IHRydWVcbiAgICB0aGlzLnguc3RhcnQgPSBldmVudC50b3VjaGVzID8gZXZlbnQudG91Y2hlc1swXS5jbGllbnRYIDogZXZlbnQuY2xpZW50WFxuICAgIHRoaXMueS5zdGFydCA9IGV2ZW50LnRvdWNoZXMgPyBldmVudC50b3VjaGVzWzBdLmNsaWVudFkgOiBldmVudC5jbGllbnRZXG5cbiAgICBjb25zdCB2YWx1ZXMgPSB7XG4gICAgICB4OiB0aGlzLngsXG4gICAgICB5OiB0aGlzLnlcbiAgICB9XG5cbiAgICBpZiAodGhpcy5hYm91dCkge1xuICAgICAgdGhpcy5hYm91dC5vblRvdWNoRG93bih2YWx1ZXMpXG4gICAgfVxuXG4gICAgaWYgKHRoaXMuY29sbGVjdGlvbnMpIHtcbiAgICAgIHRoaXMuY29sbGVjdGlvbnMub25Ub3VjaERvd24odmFsdWVzKVxuICAgIH1cblxuICAgIGlmICh0aGlzLmhvbWUpIHtcbiAgICAgIHRoaXMuaG9tZS5vblRvdWNoRG93bih2YWx1ZXMpXG4gICAgfVxuICB9XG5cbiAgb25Ub3VjaE1vdmUoZXZlbnQpIHtcbiAgICBpZiAoIXRoaXMuaXNEb3duKSByZXR1cm5cblxuICAgIGNvbnN0IHggPSBldmVudC50b3VjaGVzID8gZXZlbnQudG91Y2hlc1swXS5jbGllbnRYIDogZXZlbnQuY2xpZW50WFxuICAgIGNvbnN0IHkgPSBldmVudC50b3VjaGVzID8gZXZlbnQudG91Y2hlc1swXS5jbGllbnRZIDogZXZlbnQuY2xpZW50WVxuXG4gICAgdGhpcy54LmVuZCA9eFxuICAgIHRoaXMueS5lbmQgPXlcblxuXG4gICAgY29uc3QgdmFsdWVzID0ge1xuICAgICAgeDogdGhpcy54LFxuICAgICAgeTogdGhpcy55XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuYWJvdXQpIHtcbiAgICAgIHRoaXMuYWJvdXQub25Ub3VjaE1vdmUodmFsdWVzKVxuICAgIH1cblxuICAgIGlmICh0aGlzLmNvbGxlY3Rpb25zKSB7XG4gICAgICB0aGlzLmNvbGxlY3Rpb25zLm9uVG91Y2hNb3ZlKHZhbHVlcylcbiAgICB9XG5cbiAgICBpZiAodGhpcy5ob21lKSB7XG4gICAgICB0aGlzLmhvbWUub25Ub3VjaE1vdmUodmFsdWVzKVxuICAgIH1cbiAgfVxuXG4gIG9uVG91Y2hVcChldmVudCkge1xuICAgIHRoaXMuaXNEb3duID0gZmFsc2VcbiAgICBjb25zdCB4ID0gZXZlbnQuY2hhbmdlZFRvdWNoZXMgPyBldmVudC5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYIDogZXZlbnQuY2xpZW50WFxuICAgIGNvbnN0IHkgPSBldmVudC5jaGFuZ2VkVG91Y2hlcyA/IGV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFkgOiBldmVudC5jbGllbnRZXG5cbiAgICB0aGlzLnguZW5kID14XG4gICAgdGhpcy55LmVuZCA9eVxuXG4gICAgY29uc3QgdmFsdWVzID0ge1xuICAgICAgeDogdGhpcy54LFxuICAgICAgeTogdGhpcy55XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuYWJvdXQpIHtcbiAgICAgIHRoaXMuYWJvdXQub25Ub3VjaFVwKHZhbHVlcylcbiAgICB9XG5cbiAgICBpZiAodGhpcy5jb2xsZWN0aW9ucykge1xuICAgICAgdGhpcy5jb2xsZWN0aW9ucy5vblRvdWNoVXAodmFsdWVzKVxuICAgIH1cblxuICAgIGlmICh0aGlzLmhvbWUpIHtcbiAgICAgIHRoaXMuaG9tZS5vblRvdWNoVXAodmFsdWVzKVxuICAgIH1cbiAgfVxuXG4gIG9uV2hlZWwoZXZlbnQpe1xuICAgIGlmKHRoaXMuaG9tZSl7XG4gICAgICB0aGlzLmhvbWUub25XaGVlbChldmVudClcbiAgICB9XG5cbiAgICBpZih0aGlzLmNvbGxlY3Rpb25zKXtcbiAgICAgIHRoaXMuY29sbGVjdGlvbnMub25XaGVlbChldmVudClcbiAgICB9XG4gIH1cblxuICAvLyBMb29wXG4gIHVwZGF0ZShzY3JvbGwpIHtcbiAgICAvLyDlrp7ml7bmuLLmn5NcbiAgICAvLyB0aGlzLm1lc2gucm90YXRpb24ueCArPSAwLjAxXG4gICAgLy8gdGhpcy5tZXNoLnJvdGF0aW9uLnkgKz0gMC4wMVxuICAgIGlmKHRoaXMuYWJvdXQpe1xuICAgICAgdGhpcy5hYm91dC51cGRhdGUoc2Nyb2xsKVxuICAgIH1cbiAgICAvLyDlm6DkuLrlj6rmnIlhYm91dCBwYWdl5pyJ5LiL5ruRXG5cbiAgICBpZih0aGlzLmNvbGxlY3Rpb25zKXtcbiAgICAgIHRoaXMuY29sbGVjdGlvbnMudXBkYXRlKClcbiAgICB9XG5cbiAgICBpZih0aGlzLmhvbWUpe1xuICAgICAgdGhpcy5ob21lLnVwZGF0ZSgpXG4gICAgfVxuXG4gICAgdGhpcy5yZW5kZXJlci5yZW5kZXIoe1xuICAgICAgY2FtZXJhOiB0aGlzLmNhbWVyYSxcbiAgICAgIHNjZW5lOiB0aGlzLnNjZW5lXG4gICAgfSlcbiAgfVxufSIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjVjYmI3NDY0YTI1M2JiNWEzYjAxXCIpIl0sIm5hbWVzIjpbIkNhbnZhcyIsImNvbnN0cnVjdG9yIiwidGVtcGxhdGUiLCJ0aGlzIiwieCIsInN0YXJ0IiwiZGlzdGFuY2UiLCJlbmQiLCJ5IiwiY3JlYXRlUmVuZGVyZXIiLCJjcmVhdGVDYW1lcmEiLCJjcmVhdGVTY2VuZSIsIm9uUmVzaXplIiwicmVuZGVyZXIiLCJSZW5kZXJlciIsImFscGhhIiwiYW50aWFsaWFzIiwiZ2wiLCJkb2N1bWVudCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImNhbnZhcyIsImNhbWVyYSIsIkNhbWVyYSIsInBvc2l0aW9uIiwieiIsInNjZW5lIiwiVHJhbnNmb3JtIiwiY3JlYXRlSG9tZSIsImhvbWUiLCJIb21lIiwic2l6ZXMiLCJkZXN0cm95SG9tZSIsImRlc3Ryb3kiLCJjcmVhdGVBYm91dCIsImFib3V0IiwiQWJvdXQiLCJkZXN0cm95QWJvdXQiLCJjcmVhdGVDb2xsZWN0aW9ucyIsImNvbGxlY3Rpb25zIiwiQ29sbGVjdGlvbnMiLCJkZXN0cm95Q29sbGVjdGlvbnMiLCJvblByZWxvYWRlZCIsIm9uQ2hhbmdlRW5kIiwib25DaGFuZ2VTdGFydCIsInVybCIsImhpZGUiLCJpc0Zyb21Db2xsZWN0aW9uc1RvRGV0YWlsIiwiaW5kZXhPZiIsImlzRnJvbURldGFpbFRvQ29sbGVjdGlvbnMiLCJ0cmFuc2l0aW9uIiwiVHJhbnNpdGlvbiIsInNldFNpemUiLCJ3aW5kb3ciLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJwZXJzcGVjdGl2ZSIsImFzcGVjdCIsImZvdiIsIk1hdGgiLCJQSSIsImhlaWdodCIsInRhbiIsIndpZHRoIiwidmFsdWVzIiwib25Ub3VjaERvd24iLCJldmVudCIsImlzRG93biIsInRvdWNoZXMiLCJjbGllbnRYIiwiY2xpZW50WSIsIm9uVG91Y2hNb3ZlIiwib25Ub3VjaFVwIiwiY2hhbmdlZFRvdWNoZXMiLCJvbldoZWVsIiwidXBkYXRlIiwic2Nyb2xsIiwicmVuZGVyIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9