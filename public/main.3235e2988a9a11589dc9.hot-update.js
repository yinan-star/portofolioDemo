/*! For license information please see main.3235e2988a9a11589dc9.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Transition.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>r});var i=t("./node_modules/gsap/index.js"),o=t("./node_modules/ogl/src/extras/Plane.js"),a=t("./node_modules/ogl/src/core/Program.js"),l=t("./node_modules/ogl/src/core/Mesh.js"),n=t("./app/shaders/plane-fragment.glsl"),h=t("./app/shaders/plane-vertex.glsl");const r=class{constructor({collections:e,gl:s,scene:t,sizes:i,url:a}){this.collections=e,this.gl=s,this.scene=t,this.sizes=i,this.url=a,this.geometry=new o.Plane(this.gl)}createProgram(e){this.program=new a.Program(this.gl,{fragment:n.default,vertex:h.default,uniforms:{uAlpha:{value:1},tMap:{value:e}}})}createMesh(e){this.mesh=new l.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.scale.x=e.scale.x,this.mesh.scale.y=e.scale.y,this.mesh.scale.z=e.scale.z,this.mesh.position.x=e.position.x,this.mesh.position.y=e.position.y,this.mesh.position.z=e.position.z+.01,this.mesh.setParent(this.scene)}setElement(e){if(console.log(e.id),"collections"===e.id){const{index:s,medias:t}=e,i=t[s];this.createProgram(i.texture),this.createMesh(i.mesh),this.transition="detail"}else this.createProgram(e.texture),this.createMesh(e.mesh),this.transition="collections"}animate(e,s){const t=i.default.timeline({onComplete:s});t.to(this.mesh.scale,{duration:1.5,ease:"expo.inOut",x:e.scale.x,y:e.scale.y,z:e.scale.z},0),t.to(this.mesh.position,{duration:1.5,ease:"expo.inOut",x:e.position.x,y:e.position.y,z:e.position.z},0),t.call((e=>{this.scene.removeChild(this.mesh)}))}}}},(function(e){e.h=()=>"e14b1f50de9007269843"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4zMjM1ZTI5ODhhOWExMTU4OWRjOS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7Z1lBT0EsY0FDRUEsV0FBQUEsRUFBWSxZQUFFQyxFQUFXLEdBQUVDLEVBQUUsTUFBRUMsRUFBSyxNQUFFQyxFQUFLLElBQUVDLElBQzNDQyxLQUFLTCxZQUFjQSxFQUNuQkssS0FBS0osR0FBS0EsRUFDVkksS0FBS0gsTUFBUUEsRUFDYkcsS0FBS0YsTUFBUUEsRUFDYkUsS0FBS0QsSUFBTUEsRUFFWEMsS0FBS0MsU0FBVyxJQUFJQyxFQUFBQSxNQUFNRixLQUFLSixHQUdqQyxDQUdBTyxhQUFBQSxDQUFjQyxHQUNaSixLQUFLSyxRQUFVLElBQUlDLEVBQUFBLFFBQVFOLEtBQUtKLEdBQUksQ0FDbENXLFNBQVEsVUFDUkMsT0FBTSxVQUNOQyxTQUFVLENBQ1JDLE9BQVEsQ0FBRUMsTUFBTyxHQUNqQkMsS0FBTSxDQUFFRCxNQUFPUCxLQUdyQixDQUVBUyxVQUFBQSxDQUFXQyxHQUNUZCxLQUFLYyxLQUFPLElBQUlDLEVBQUFBLEtBQUtmLEtBQUtKLEdBQUksQ0FDNUJLLFNBQVVELEtBQUtDLFNBQ2ZJLFFBQVNMLEtBQUtLLFVBR2hCTCxLQUFLYyxLQUFLRSxNQUFNQyxFQUFJSCxFQUFLRSxNQUFNQyxFQUMvQmpCLEtBQUtjLEtBQUtFLE1BQU1FLEVBQUlKLEVBQUtFLE1BQU1FLEVBQy9CbEIsS0FBS2MsS0FBS0UsTUFBTUcsRUFBSUwsRUFBS0UsTUFBTUcsRUFFL0JuQixLQUFLYyxLQUFLTSxTQUFTSCxFQUFJSCxFQUFLTSxTQUFTSCxFQUNyQ2pCLEtBQUtjLEtBQUtNLFNBQVNGLEVBQUlKLEVBQUtNLFNBQVNGLEVBQ3JDbEIsS0FBS2MsS0FBS00sU0FBU0QsRUFBSUwsRUFBS00sU0FBU0QsRUFBSSxJQUd6Q25CLEtBQUtjLEtBQUtPLFVBQVVyQixLQUFLSCxNQUczQixDQUdBeUIsVUFBQUEsQ0FBV0MsR0FHVCxHQUZBQyxRQUFRQyxJQUFJRixFQUFRRyxJQUVELGdCQUFmSCxFQUFRRyxHQUFzQixDQUNoQyxNQUFNLE1BQUVDLEVBQUssT0FBRUMsR0FBV0wsRUFDcEJNLEVBQVFELEVBQU9ELEdBRXJCM0IsS0FBS0csY0FBYzBCLEVBQU16QixTQUN6QkosS0FBS2EsV0FBV2dCLEVBQU1mLE1BRXRCZCxLQUFLOEIsV0FBYSxRQUNwQixNQUNFOUIsS0FBS0csY0FBY29CLEVBQVFuQixTQUMzQkosS0FBS2EsV0FBV1UsRUFBUVQsTUFFeEJkLEtBQUs4QixXQUFhLGFBSXRCLENBRUFDLE9BQUFBLENBQVFSLEVBQVNTLEdBRWYsTUFBTUMsRUFBV0MsRUFBQUEsUUFBS0QsU0FBUyxDQUM3QkQsZUFFRkMsRUFBU0UsR0FBR25DLEtBQUtjLEtBQUtFLE1BQU8sQ0FDM0JvQixTQUFVLElBQ1ZDLEtBQU0sYUFDTnBCLEVBQUdNLEVBQVFQLE1BQU1DLEVBQ2pCQyxFQUFHSyxFQUFRUCxNQUFNRSxFQUNqQkMsRUFBR0ksRUFBUVAsTUFBTUcsR0FFaEIsR0FDSGMsRUFBU0UsR0FBR25DLEtBQUtjLEtBQUtNLFNBQVUsQ0FDOUJnQixTQUFVLElBQ1ZDLEtBQU0sYUFDTnBCLEVBQUdNLEVBQVFILFNBQVNILEVBQ3BCQyxFQUFHSyxFQUFRSCxTQUFTRixFQUNwQkMsRUFBR0ksRUFBUUgsU0FBU0QsR0FDbkIsR0FFSGMsRUFBU0ssTUFBS0MsSUFDWnZDLEtBQUtILE1BQU0yQyxZQUFZeEMsS0FBS2MsS0FBSyxHQUdyQyxrQkNuR0YyQixFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvZW1hLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL1RyYW5zaXRpb24uanMiLCJ3ZWJwYWNrOi8vZmxvZW1hL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvL+WkhOeQhueFp+eJh1xuaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCdcbmltcG9ydCB7IE1lc2gsIFBsYW5lLCBQcm9ncmFtLCBUZXh0dXJlIH0gZnJvbSAnb2dsJztcblxuaW1wb3J0IGZyYWdtZW50IGZyb20gJ3NoYWRlcnMvcGxhbmUtZnJhZ21lbnQuZ2xzbCc7XG5pbXBvcnQgdmVydGV4IGZyb20gJ3NoYWRlcnMvcGxhbmUtdmVydGV4Lmdsc2wnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKHsgY29sbGVjdGlvbnMsIGdsLCBzY2VuZSwgc2l6ZXMsIHVybCB9KSB7XG4gICAgdGhpcy5jb2xsZWN0aW9ucyA9IGNvbGxlY3Rpb25zO1xuICAgIHRoaXMuZ2wgPSBnbDtcbiAgICB0aGlzLnNjZW5lID0gc2NlbmU7XG4gICAgdGhpcy5zaXplcyA9IHNpemVzO1xuICAgIHRoaXMudXJsID0gdXJsO1xuXG4gICAgdGhpcy5nZW9tZXRyeSA9IG5ldyBQbGFuZSh0aGlzLmdsKVxuICAgIC8vIOS4iumdoueahGVsbWVudOmDveaYr+mcgOimgeWkjeeUqOeahOaJgOS7peWcqOi/memHjOWIneWni+WMllxuXG4gIH1cblxuICAvLyDnhLblkI7lsIbpgInlpb3nmoTnhafniYfkvKDnu5lwcm9ncmFt5aSE55CG6LS05Zu+XG4gIGNyZWF0ZVByb2dyYW0odGV4dHVyZSkge1xuICAgIHRoaXMucHJvZ3JhbSA9IG5ldyBQcm9ncmFtKHRoaXMuZ2wsIHtcbiAgICAgIGZyYWdtZW50LFxuICAgICAgdmVydGV4LFxuICAgICAgdW5pZm9ybXM6IHtcbiAgICAgICAgdUFscGhhOiB7IHZhbHVlOiAxIH0sXG4gICAgICAgIHRNYXA6IHsgdmFsdWU6IHRleHR1cmUgfVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBjcmVhdGVNZXNoKG1lc2gpIHtcbiAgICB0aGlzLm1lc2ggPSBuZXcgTWVzaCh0aGlzLmdsLCB7XG4gICAgICBnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcbiAgICAgIHByb2dyYW06IHRoaXMucHJvZ3JhbSxcbiAgICB9KTtcblxuICAgIHRoaXMubWVzaC5zY2FsZS54ID0gbWVzaC5zY2FsZS54O1xuICAgIHRoaXMubWVzaC5zY2FsZS55ID0gbWVzaC5zY2FsZS55O1xuICAgIHRoaXMubWVzaC5zY2FsZS56ID0gbWVzaC5zY2FsZS56O1xuXG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnggPSBtZXNoLnBvc2l0aW9uLng7XG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnkgPSBtZXNoLnBvc2l0aW9uLnk7XG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnogPSBtZXNoLnBvc2l0aW9uLnogKyAwLjAxO1xuXG5cbiAgICB0aGlzLm1lc2guc2V0UGFyZW50KHRoaXMuc2NlbmUpO1xuICAgIC8vIG1lc2jmmK9zY2VuZeeahOWtkOWFg+e0oOOAglxuXG4gIH1cblxuICAvLyBFbGVtZW50XG4gIHNldEVsZW1lbnQoZWxlbWVudCkge1xuICAgIGNvbnNvbGUubG9nKGVsZW1lbnQuaWQpXG5cbiAgICBpZiAoZWxlbWVudC5pZCA9PT0gJ2NvbGxlY3Rpb25zJykge1xuICAgICAgY29uc3QgeyBpbmRleCwgbWVkaWFzIH0gPSBlbGVtZW50XG4gICAgICBjb25zdCBtZWRpYSA9IG1lZGlhc1tpbmRleF1cblxuICAgICAgdGhpcy5jcmVhdGVQcm9ncmFtKG1lZGlhLnRleHR1cmUpXG4gICAgICB0aGlzLmNyZWF0ZU1lc2gobWVkaWEubWVzaClcblxuICAgICAgdGhpcy50cmFuc2l0aW9uID0gJ2RldGFpbCdcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jcmVhdGVQcm9ncmFtKGVsZW1lbnQudGV4dHVyZSlcbiAgICAgIHRoaXMuY3JlYXRlTWVzaChlbGVtZW50Lm1lc2gpXG5cbiAgICAgIHRoaXMudHJhbnNpdGlvbiA9ICdjb2xsZWN0aW9ucydcbiAgICB9XG5cblxuICB9XG4gIC8vIEFuaW1hdGlvbnMuXG4gIGFuaW1hdGUoZWxlbWVudCwgb25Db21wbGV0ZSkge1xuICAgIC8vIOiuqWZha2luZyBpbWFnZeWKqOi1t+adpW1hdGNo5Y6f5pyJ55qEaW1hZ2Us5L2G5piv6L+Z5Liq6L+H56iL6ZyA6KaB562J5Yeg56eSLOWboOS4uuWcqGNvbGxlY3Rpb25z55qEaW5kZXjph4zorr7nva7kuoZib3VuZHPpnIDopoHnrYnlh6Dnp5Iu6L+Z5Liq562J5Yeg56eS5ZyoQ2FudmFz55qEaW5kZXjmlofku7bph4zorr7nva5HU0FQLmRlbGF5ZWRDYWxsXG4gICAgY29uc3QgdGltZWxpbmUgPSBHU0FQLnRpbWVsaW5lKHtcbiAgICAgIG9uQ29tcGxldGVcbiAgICB9KVxuICAgIHRpbWVsaW5lLnRvKHRoaXMubWVzaC5zY2FsZSwge1xuICAgICAgZHVyYXRpb246IDEuNSxcbiAgICAgIGVhc2U6ICdleHBvLmluT3V0JyxcbiAgICAgIHg6IGVsZW1lbnQuc2NhbGUueCxcbiAgICAgIHk6IGVsZW1lbnQuc2NhbGUueSxcbiAgICAgIHo6IGVsZW1lbnQuc2NhbGUueixcblxuICAgIH0sIDApXG4gICAgdGltZWxpbmUudG8odGhpcy5tZXNoLnBvc2l0aW9uLCB7XG4gICAgICBkdXJhdGlvbjogMS41LFxuICAgICAgZWFzZTogJ2V4cG8uaW5PdXQnLFxuICAgICAgeDogZWxlbWVudC5wb3NpdGlvbi54LFxuICAgICAgeTogZWxlbWVudC5wb3NpdGlvbi55LFxuICAgICAgejogZWxlbWVudC5wb3NpdGlvbi56LFxuICAgIH0sIDApXG5cbiAgICB0aW1lbGluZS5jYWxsKF8gPT57XG4gICAgICB0aGlzLnNjZW5lLnJlbW92ZUNoaWxkKHRoaXMubWVzaClcbiAgICB9KVxuXG4gIH1cblxufVxuXG5cblxuXG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcImUxNGIxZjUwZGU5MDA3MjY5ODQzXCIpIl0sIm5hbWVzIjpbImNvbnN0cnVjdG9yIiwiY29sbGVjdGlvbnMiLCJnbCIsInNjZW5lIiwic2l6ZXMiLCJ1cmwiLCJ0aGlzIiwiZ2VvbWV0cnkiLCJQbGFuZSIsImNyZWF0ZVByb2dyYW0iLCJ0ZXh0dXJlIiwicHJvZ3JhbSIsIlByb2dyYW0iLCJmcmFnbWVudCIsInZlcnRleCIsInVuaWZvcm1zIiwidUFscGhhIiwidmFsdWUiLCJ0TWFwIiwiY3JlYXRlTWVzaCIsIm1lc2giLCJNZXNoIiwic2NhbGUiLCJ4IiwieSIsInoiLCJwb3NpdGlvbiIsInNldFBhcmVudCIsInNldEVsZW1lbnQiLCJlbGVtZW50IiwiY29uc29sZSIsImxvZyIsImlkIiwiaW5kZXgiLCJtZWRpYXMiLCJtZWRpYSIsInRyYW5zaXRpb24iLCJhbmltYXRlIiwib25Db21wbGV0ZSIsInRpbWVsaW5lIiwiR1NBUCIsInRvIiwiZHVyYXRpb24iLCJlYXNlIiwiY2FsbCIsIl8iLCJyZW1vdmVDaGlsZCIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==