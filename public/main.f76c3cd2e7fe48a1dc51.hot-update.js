/*! For license information please see main.f76c3cd2e7fe48a1dc51.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/index.js":(e,s,r)=>{r.r(s),r.d(s,{default:()=>i});var n=r("./node_modules/ogl/src/core/Renderer.js"),t=r("./node_modules/ogl/src/core/Camera.js"),a=r("./node_modules/ogl/src/core/Transform.js");r("./app/shaders/plane-fragment.glsl"),r("./app/shaders/plane-vertex.glsl");class i{constructor(){this.createRenderer(),this.createCamera(),this.createScene()}createRenderer(){this.renderer=new n.Renderer,this.gl=this.renderer.gl,document.body.appendChild(this.gl.canvas)}createCamera(){this.camera=new t.Camera(this.gl),this.camera.position.z=5}createScene(){this.scene=new a.Transform}createHome(){this.home=new Home({gl:this.gl,scene:this.scene,sizes:this.sizes})}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.perspective({aspect:window.innerWidth/window.innerHeight})}update(){this.mesh.rotation.x+=.01,this.mesh.rotation.y+=.01,this.renderer.render({camera:this.camera,scene:this.scene})}}}},(function(e){e.h=()=>"9661a2e50cd9cd5b7feb"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5mNzZjM2NkMmU3ZmU0OGExZGM1MS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7d1ZBT2UsTUFBTUEsRUFDbkJDLFdBQUFBLEdBQ0VDLEtBQUtDLGlCQUNMRCxLQUFLRSxlQUNMRixLQUFLRyxhQUtQLENBRUFGLGNBQUFBLEdBQ0VELEtBQUtJLFNBQVcsSUFBSUMsRUFBQUEsU0FFcEJMLEtBQUtNLEdBQUtOLEtBQUtJLFNBQVNFLEdBRXhCQyxTQUFTQyxLQUFLQyxZQUFZVCxLQUFLTSxHQUFHSSxPQUNwQyxDQUVBUixZQUFBQSxHQUNFRixLQUFLVyxPQUFTLElBQUlDLEVBQUFBLE9BQU9aLEtBQUtNLElBQzlCTixLQUFLVyxPQUFPRSxTQUFTQyxFQUFJLENBRTNCLENBRUFYLFdBQUFBLEdBQ0VILEtBQUtlLE1BQVEsSUFBSUMsRUFBQUEsU0FDbkIsQ0FFQUMsVUFBQUEsR0FDRWpCLEtBQUtrQixLQUFPLElBQUlDLEtBQUssQ0FDbkJiLEdBQUlOLEtBQUtNLEdBQ1RTLE1BQU9mLEtBQUtlLE1BQ1pLLE1BQU9wQixLQUFLb0IsT0FHaEIsQ0FtQkFDLFFBQUFBLEdBRUVyQixLQUFLSSxTQUFTa0IsUUFBUUMsT0FBT0MsV0FBWUQsT0FBT0UsYUFFaER6QixLQUFLVyxPQUFPZSxZQUFZLENBQUVDLE9BQVFKLE9BQU9DLFdBQWFELE9BQU9FLGFBZ0IvRCxDQUVBRyxNQUFBQSxHQUVFNUIsS0FBSzZCLEtBQUtDLFNBQVNDLEdBQUssSUFDeEIvQixLQUFLNkIsS0FBS0MsU0FBU0UsR0FBSyxJQUN4QmhDLEtBQUtJLFNBQVM2QixPQUFPLENBQ25CdEIsT0FBUVgsS0FBS1csT0FDYkksTUFBT2YsS0FBS2UsT0FFaEIsa0JDNUZGbUIsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb2VtYS8uL2FwcC9jb21wb25lbnRzL0NhbnZhcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9mbG9lbWEvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENhbWVyYSwgUmVuZGVyZXIsIFRyYW5zZm9ybSwgTWVzaCwgQm94LCBQcm9ncmFtIH0gZnJvbSAnb2dsJztcblxuLy8gaW1wb3J0IEhvbWUgZnJvbSAnLi9Ib21lJ1xuaW1wb3J0IGZyYWdtZW50IGZyb20gJ3NoYWRlcnMvcGxhbmUtZnJhZ21lbnQuZ2xzbCdcbmltcG9ydCB2ZXJ0ZXggZnJvbSAnc2hhZGVycy9wbGFuZS12ZXJ0ZXguZ2xzbCdcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYW52YXMge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmNyZWF0ZVJlbmRlcmVyKClcbiAgICB0aGlzLmNyZWF0ZUNhbWVyYSgpXG4gICAgdGhpcy5jcmVhdGVTY2VuZSgpXG4gICAgLy8gICAgIHRoaXMub25SZXNpemUoKVxuICAgIC8vICAgICB0aGlzLmNyZWF0ZUhvbWUoKVxuICAgIC8vIHRoaXMuY3JlYXRlQ3ViZSgpXG4gICAgLy8g5LuA5LmI5LuA5LmI5b+Y6K6wZGVmaW5l5LqG77yM5bCx55yL6L+Z6YeM5pyJ5rKh5pyJ6KKr5Yid5aeL5YyWXG4gIH1cblxuICBjcmVhdGVSZW5kZXJlcigpIHtcbiAgICB0aGlzLnJlbmRlcmVyID0gbmV3IFJlbmRlcmVyKCk7XG5cbiAgICB0aGlzLmdsID0gdGhpcy5yZW5kZXJlci5nbDsgLy9USVAgd29ya3MgbGlrZSBhIGNhbnZhcyBjb250ZXh0XG5cbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuZ2wuY2FudmFzKTtcbiAgfVxuXG4gIGNyZWF0ZUNhbWVyYSgpIHtcbiAgICB0aGlzLmNhbWVyYSA9IG5ldyBDYW1lcmEodGhpcy5nbClcbiAgICB0aGlzLmNhbWVyYS5wb3NpdGlvbi56ID0gNVxuXG4gIH1cblxuICBjcmVhdGVTY2VuZSgpIHtcbiAgICB0aGlzLnNjZW5lID0gbmV3IFRyYW5zZm9ybSgpXG4gIH1cblxuICBjcmVhdGVIb21lKCkge1xuICAgIHRoaXMuaG9tZSA9IG5ldyBIb21lKHtcbiAgICAgIGdsOiB0aGlzLmdsLFxuICAgICAgc2NlbmU6IHRoaXMuc2NlbmUsXG4gICAgICBzaXplczogdGhpcy5zaXplc1xuICAgIH0pO1xuXG4gIH1cblxuICAvLyBjcmVhdGVDdWJlKCkge1xuICAvLyAgIHRoaXMuZ2VvbWV0cnkgPSBuZXcgQm94KHRoaXMuZ2wpXG4gIC8vICAgdGhpcy5wcm9ncmFtID0gbmV3IFByb2dyYW0odGhpcy5nbCwge1xuICAvLyAgICAgdmVydGV4LFxuICAvLyAgICAgZnJhZ21lbnRcbiAgLy8gICB9KVxuICAvLyAgIC8vIOWwhmds5L2c5Li656ys5LiA5Liq5YWD57Sg5Lyg57uZTWVzaFxuICAvLyAgIHRoaXMubWVzaCA9IG5ldyBNZXNoKHRoaXMuZ2wsIHtcbiAgLy8gICAgIGdlb21ldHJ5OnRoaXMuZ2VvbWV0cnksIFxuICAvLyAgICAgcHJvZ3JhbTp0aGlzLnByb2dyYW1cbiAgLy8gICB9KVxuICAvLyAgIC8vIOWwhuebkuWtkOiuvue9ruS4uuebuOacuueahOWtkOWFg+e0oFxuICAvLyAgIHRoaXMubWVzaC5zZXRQYXJlbnQodGhpcy5zY2VuZSlcblxuICAvLyB9XG5cblxuICBvblJlc2l6ZSgpIHtcbiAgICAvLyDlsIbmuLLmn5PnmoTnlLvluIPlsLrlr7jloavmu6Hop4bnqpflj6NcbiAgICB0aGlzLnJlbmRlcmVyLnNldFNpemUod2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCk7XG4gICAgLy8g5Yib5bu65LqGY2FtZXJh5LmL5ZCO5omN6IO95Yib5bu66YCP6KeG5Zu+XG4gICAgdGhpcy5jYW1lcmEucGVyc3BlY3RpdmUoeyBhc3BlY3Q6IHdpbmRvdy5pbm5lcldpZHRoIC8gd2luZG93LmlubmVySGVpZ2h0IH0pO1xuXG4gICAgLy8gICAgIGNvbnN0IGZvdiA9IHRoaXMuY2FtZXJhLmZvdiAqIChNYXRoLlBJIC8gMTgwKTtcbiAgICAvLyAgICAgY29uc3QgaGVpZ2h0ID0gMiAqIE1hdGgudGFuKGZvdiAvIDIpICogdGhpcy5jYW1lcmEucG9zaXRpb24uejtcbiAgICAvLyAgICAgY29uc3Qgd2lkdGggPSBoZWlnaHQgKiB0aGlzLmNhbWVyYS5hc3BlY3Q7XG5cbiAgICAvLyAgICAgdGhpcy5zaXplcyA9IHtcbiAgICAvLyAgICAgICBoZWlnaHQsXG4gICAgLy8gICAgICAgd2lkdGgsXG4gICAgLy8gICAgIH07XG5cbiAgICAvLyAgICAgaWYgKHRoaXMuaG9tZSkge1xuICAgIC8vICAgICAgIHRoaXMuaG9tZS5vblJlc2l6ZSh7XG4gICAgLy8gICAgICAgICBzaXplczogdGhpcy5zaXplc1xuICAgIC8vICAgICAgIH0pXG4gICAgLy8gICAgIH1cbiAgfVxuXG4gIHVwZGF0ZSgpIHtcbiAgICAvLyDlrp7ml7bmuLLmn5NcbiAgICB0aGlzLm1lc2gucm90YXRpb24ueCArPSAwLjAxXG4gICAgdGhpcy5tZXNoLnJvdGF0aW9uLnkgKz0gMC4wMVxuICAgIHRoaXMucmVuZGVyZXIucmVuZGVyKHtcbiAgICAgIGNhbWVyYTogdGhpcy5jYW1lcmEsXG4gICAgICBzY2VuZTogdGhpcy5zY2VuZVxuICAgIH0pXG4gIH1cbn0iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCI5NjYxYTJlNTBjZDljZDViN2ZlYlwiKSJdLCJuYW1lcyI6WyJDYW52YXMiLCJjb25zdHJ1Y3RvciIsInRoaXMiLCJjcmVhdGVSZW5kZXJlciIsImNyZWF0ZUNhbWVyYSIsImNyZWF0ZVNjZW5lIiwicmVuZGVyZXIiLCJSZW5kZXJlciIsImdsIiwiZG9jdW1lbnQiLCJib2R5IiwiYXBwZW5kQ2hpbGQiLCJjYW52YXMiLCJjYW1lcmEiLCJDYW1lcmEiLCJwb3NpdGlvbiIsInoiLCJzY2VuZSIsIlRyYW5zZm9ybSIsImNyZWF0ZUhvbWUiLCJob21lIiwiSG9tZSIsInNpemVzIiwib25SZXNpemUiLCJzZXRTaXplIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0IiwicGVyc3BlY3RpdmUiLCJhc3BlY3QiLCJ1cGRhdGUiLCJtZXNoIiwicm90YXRpb24iLCJ4IiwieSIsInJlbmRlciIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==