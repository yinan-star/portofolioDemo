/*! For license information please see main.e1c56e937103aa6f72c5.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/collections/index.js":(s,t,e)=>{e.r(t),e.d(t,{default:()=>h});var l=e("./node_modules/ogl/src/core/Transform.js"),i=e("./node_modules/ogl/src/extras/Plane.js"),o=e("./node_modules/gsap/index.js"),r=e("./node_modules/lodash/map.js"),c=e.n(r),n=e("./app/components/Canvas/collections/Media.js");const h=class{constructor({gl:s,scene:t,sizes:e}){this.gl=s,this.scene=t,this.sizes=e,this.group=new l.Transform,this.galleryElement=document.querySelector(".collections__gallery__wrapper"),this.collectionsElements=document.querySelectorAll(".collections__article"),this.collectionsElementsActive="collections__article--active",this.mediasElements=document.querySelectorAll(".collections__gallery__media"),this.scroll={current:0,target:0,lerp:.1},this.scroll={current:0,target:0,last:0,lerp:.1,velocity:1},this.createGeometry(),this.createGallery(),this.group.setParent(this.scene),this.show()}createGeometry(){this.geometry=new i.Plane(this.gl)}createGallery(){this.medias=c()(this.mediasElements,((s,t)=>new n.default({element:s,geometry:this.geometry,gl:this.gl,index:t,scene:this.group,sizes:this.sizes})))}show(){c()(this.medias,(s=>s.show()))}hide(){c()(this.medias,(s=>s.hide()))}onResize(s){this.sizes=s.sizes,this.bounds=this.galleryElement.getBoundingClientRect(),this.scroll.last=this.scroll.target=0,c()(this.medias,(t=>t.onResize(s,this.scroll))),this.scroll.limit=this.bounds.width-this.medias[0].element.clientWidth}onTouchDown({x:s,y:t}){this.scroll.last=this.scroll.current}onTouchMove({x:s,y:t}){const e=s.start-s.end;this.scroll.target=this.scroll.last-e}onTouchUp({x:s,y:t}){}onWheel({pixelY:s}){this.scroll.target+=s}onChange(s){this.index=s;const t=this.mediasElements[this.index].getAttribute("data-index");c()(this.collectionsElements,((s,e)=>{e===t?s.classList.add(this.collectionsElementsActive):s.classList.remove(this.collectionsElementsActive)}))}update(){if(!this.bounds)return;this.scroll.target=o.default.utils.clamp(-this.scroll.limit,0,this.scroll.target),this.scroll.current=o.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),this.scroll.last<this.scroll.current?this.scroll.direction="right":this.scroll.last>this.scroll.current&&(this.scroll.direction="left"),this.scroll.last=this.scroll.current,c()(this.medias,((s,t)=>{s.update(this.scroll.current)}));const s=Math.floor(Math.abs(this.scroll.current/this.scroll.limit)*this.medias.length);this.index!==s&&(console.log(s),this.onChange(s))}destroy(){this.scene.removeChild(this.group)}}}},(function(s){s.h=()=>"ea9ce57014a15a533221"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,