/*! For license information please see main.2429b99a052d9540239f.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Transition.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>o});var a=t("./node_modules/ogl/src/extras/Plane.js"),r=t("./node_modules/ogl/src/core/Program.js"),i=t("./node_modules/ogl/src/core/Mesh.js"),h=t("./app/shaders/plane-fragment.glsl"),l=t("./app/shaders/plane-vertex.glsl");const o=class{constructor({collections:e,gl:s,scene:t,sizes:r,url:i}){this.collections=e,this.gl=s,this.scene=t,this.sizes=r,this.url=i,this.geometry=new a.Plane(this.gl),this.createTexture(),this.createProgram(),this.createMesh(),this.extra={x:0,y:0}}createTexture(){const{index:e,medias:s}=this.collections;this.media=s[e]}createProgram(){this.program=new r.Program(this.gl,{fragment:h.default,vertex:l.default,uniforms:{uAlpha:{value:1},tMap:{value:this.media.texture}}})}createMesh(){this.mesh=new i.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.scale.x=this.media.mesh.scale.x,this.mesh.scale.y=this.media.mesh.scale.y,this.mesh.scale.z=this.media.mesh.scale.z,this.mesh.setParent(this.scene)}transition(){}}}},(function(e){e.h=()=>"a102746e84eb960f6aa6"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4yNDI5Yjk5YTA1MmQ5NTQwMjM5Zi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7NFZBT0EsY0FDRUEsV0FBQUEsRUFBWSxZQUFFQyxFQUFXLEdBQUVDLEVBQUUsTUFBRUMsRUFBSyxNQUFFQyxFQUFLLElBQUVDLElBQzNDQyxLQUFLTCxZQUFjQSxFQUNuQkssS0FBS0osR0FBS0EsRUFDVkksS0FBS0gsTUFBUUEsRUFDYkcsS0FBS0YsTUFBUUEsRUFDYkUsS0FBS0QsSUFBS0EsRUFFVkMsS0FBS0MsU0FBVyxJQUFJQyxFQUFBQSxNQUFNRixLQUFLSixJQUcvQkksS0FBS0csZ0JBQ0xILEtBQUtJLGdCQUNMSixLQUFLSyxhQUVMTCxLQUFLTSxNQUFRLENBQ1hDLEVBQUcsRUFDSEMsRUFBRyxFQUVQLENBQ0FMLGFBQUFBLEdBQ0UsTUFBTSxNQUFDTSxFQUFLLE9BQUVDLEdBQVVWLEtBQUtMLFlBSTdCSyxLQUFLVyxNQUFRRCxFQUFPRCxFQUN0QixDQUdBTCxhQUFBQSxHQUNFSixLQUFLWSxRQUFVLElBQUlDLEVBQUFBLFFBQVFiLEtBQUtKLEdBQUksQ0FDbENrQixTQUFRLFVBQ1JDLE9BQU0sVUFDTkMsU0FBVSxDQUNSQyxPQUFRLENBQUVDLE1BQU8sR0FDakJDLEtBQU0sQ0FBRUQsTUFBT2xCLEtBQUtXLE1BQU1TLFdBR2hDLENBRUFmLFVBQUFBLEdBQ0VMLEtBQUtxQixLQUFPLElBQUlDLEVBQUFBLEtBQUt0QixLQUFLSixHQUFJLENBQzVCSyxTQUFVRCxLQUFLQyxTQUNmVyxRQUFTWixLQUFLWSxVQUdoQlosS0FBS3FCLEtBQUtFLE1BQU1oQixFQUFHUCxLQUFLVyxNQUFNVSxLQUFLRSxNQUFNaEIsRUFDekNQLEtBQUtxQixLQUFLRSxNQUFNZixFQUFHUixLQUFLVyxNQUFNVSxLQUFLRSxNQUFNZixFQUN6Q1IsS0FBS3FCLEtBQUtFLE1BQU1DLEVBQUd4QixLQUFLVyxNQUFNVSxLQUFLRSxNQUFNQyxFQUV6Q3hCLEtBQUtxQixLQUFLSSxVQUFVekIsS0FBS0gsTUFHM0IsQ0FJQTZCLFVBQUFBLEdBRUEsa0JDbEVGQyxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvZW1hLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL1RyYW5zaXRpb24uanMiLCJ3ZWJwYWNrOi8vZmxvZW1hL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvL+WkhOeQhueFp+eJh1xuaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCdcbmltcG9ydCB7IE1lc2gsUGxhbmUsIFByb2dyYW19IGZyb20gJ29nbCc7XG5cbmltcG9ydCBmcmFnbWVudCBmcm9tICdzaGFkZXJzL3BsYW5lLWZyYWdtZW50Lmdsc2wnO1xuaW1wb3J0IHZlcnRleCBmcm9tICdzaGFkZXJzL3BsYW5lLXZlcnRleC5nbHNsJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3Mge1xuICBjb25zdHJ1Y3Rvcih7IGNvbGxlY3Rpb25zLCBnbCwgc2NlbmUsIHNpemVzLCB1cmx9KSB7XG4gICAgdGhpcy5jb2xsZWN0aW9ucyA9IGNvbGxlY3Rpb25zO1xuICAgIHRoaXMuZ2wgPSBnbDtcbiAgICB0aGlzLnNjZW5lID0gc2NlbmU7XG4gICAgdGhpcy5zaXplcyA9IHNpemVzO1xuICAgIHRoaXMudXJsID11cmw7XG5cbiAgICB0aGlzLmdlb21ldHJ5ID0gbmV3IFBsYW5lKHRoaXMuZ2wpXG4gICAgLy8g5LiK6Z2i55qEZWxtZW506YO95piv6ZyA6KaB5aSN55So55qE5omA5Lul5Zyo6L+Z6YeM5Yid5aeL5YyWXG5cbiAgICB0aGlzLmNyZWF0ZVRleHR1cmUoKTtcbiAgICB0aGlzLmNyZWF0ZVByb2dyYW0oKTtcbiAgICB0aGlzLmNyZWF0ZU1lc2goKTtcblxuICAgIHRoaXMuZXh0cmEgPSB7XG4gICAgICB4OiAwLFxuICAgICAgeTogMFxuICAgIH1cbiAgfVxuICBjcmVhdGVUZXh0dXJlKCkge1xuICAgIGNvbnN0IHtpbmRleCwgbWVkaWFzfSA9IHRoaXMuY29sbGVjdGlvbnNcblxuICAgIC8vIGNvbnN0IGltYWdlID10aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignLmNvbGxlY3Rpb25zX19nYWxsZXJ5X19tZWRpYV9faW1hZ2UnKVxuICAgIC8vIHRoaXMudGV4dHVyZSA9IHdpbmRvdy5URVhUVVJFU1tpbWFnZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3JjJyldXG4gICAgdGhpcy5tZWRpYSA9IG1lZGlhc1tpbmRleF1cbiAgfVxuXG4gIC8vIOeEtuWQjuWwhumAieWlveeahOeFp+eJh+S8oOe7mXByb2dyYW3lpITnkIbotLTlm75cbiAgY3JlYXRlUHJvZ3JhbSgpIHtcbiAgICB0aGlzLnByb2dyYW0gPSBuZXcgUHJvZ3JhbSh0aGlzLmdsLCB7XG4gICAgICBmcmFnbWVudCxcbiAgICAgIHZlcnRleCxcbiAgICAgIHVuaWZvcm1zOiB7XG4gICAgICAgIHVBbHBoYTogeyB2YWx1ZTogMSB9LFxuICAgICAgICB0TWFwOiB7IHZhbHVlOiB0aGlzLm1lZGlhLnRleHR1cmUgfVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBjcmVhdGVNZXNoKCkge1xuICAgIHRoaXMubWVzaCA9IG5ldyBNZXNoKHRoaXMuZ2wsIHtcbiAgICAgIGdlb21ldHJ5OiB0aGlzLmdlb21ldHJ5LFxuICAgICAgcHJvZ3JhbTogdGhpcy5wcm9ncmFtLFxuICAgIH0pO1xuXG4gICAgdGhpcy5tZXNoLnNjYWxlLnggPXRoaXMubWVkaWEubWVzaC5zY2FsZS54XG4gICAgdGhpcy5tZXNoLnNjYWxlLnkgPXRoaXMubWVkaWEubWVzaC5zY2FsZS55XG4gICAgdGhpcy5tZXNoLnNjYWxlLnogPXRoaXMubWVkaWEubWVzaC5zY2FsZS56XG5cbiAgICB0aGlzLm1lc2guc2V0UGFyZW50KHRoaXMuc2NlbmUpO1xuICAgIC8vIG1lc2jmmK9zY2VuZeeahOWtkOWFg+e0oOOAglxuXG4gIH1cblxuXG4gIC8vIEFuaW1hdGlvbnMuXG4gIHRyYW5zaXRpb24oKXtcblxuICB9XG5cbiBcblxuXG5cbn0iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCJhMTAyNzQ2ZTg0ZWI5NjBmNmFhNlwiKSJdLCJuYW1lcyI6WyJjb25zdHJ1Y3RvciIsImNvbGxlY3Rpb25zIiwiZ2wiLCJzY2VuZSIsInNpemVzIiwidXJsIiwidGhpcyIsImdlb21ldHJ5IiwiUGxhbmUiLCJjcmVhdGVUZXh0dXJlIiwiY3JlYXRlUHJvZ3JhbSIsImNyZWF0ZU1lc2giLCJleHRyYSIsIngiLCJ5IiwiaW5kZXgiLCJtZWRpYXMiLCJtZWRpYSIsInByb2dyYW0iLCJQcm9ncmFtIiwiZnJhZ21lbnQiLCJ2ZXJ0ZXgiLCJ1bmlmb3JtcyIsInVBbHBoYSIsInZhbHVlIiwidE1hcCIsInRleHR1cmUiLCJtZXNoIiwiTWVzaCIsInNjYWxlIiwieiIsInNldFBhcmVudCIsInRyYW5zaXRpb24iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=