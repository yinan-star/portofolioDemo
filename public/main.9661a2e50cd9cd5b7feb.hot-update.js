/*! For license information please see main.9661a2e50cd9cd5b7feb.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/index.js":(e,r,s)=>{s.r(r),s.d(r,{default:()=>i});var n=s("./node_modules/ogl/src/core/Renderer.js"),a=s("./node_modules/ogl/src/core/Camera.js"),t=s("./node_modules/ogl/src/core/Transform.js");s("./app/shaders/plane-fragment.glsl"),s("./app/shaders/plane-vertex.glsl");class i{constructor(){this.createRenderer(),this.createCamera(),this.createScene()}createRenderer(){this.renderer=new n.Renderer,this.gl=this.renderer.gl,document.body.appendChild(this.gl.canvas)}createCamera(){this.camera=new a.Camera(this.gl),this.camera.position.z=5}createScene(){this.scene=new t.Transform}createHome(){this.home=new Home({gl:this.gl,scene:this.scene,sizes:this.sizes})}onResize(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.perspective({aspect:window.innerWidth/window.innerHeight})}update(){this.renderer.render({camera:this.camera,scene:this.scene})}}}},(function(e){e.h=()=>"9b26a9d823195ce7b800"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi45NjYxYTJlNTBjZDljZDViN2ZlYi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7d1ZBT2UsTUFBTUEsRUFDbkJDLFdBQUFBLEdBQ0VDLEtBQUtDLGlCQUNMRCxLQUFLRSxlQUNMRixLQUFLRyxhQUtQLENBRUFGLGNBQUFBLEdBQ0VELEtBQUtJLFNBQVcsSUFBSUMsRUFBQUEsU0FFcEJMLEtBQUtNLEdBQUtOLEtBQUtJLFNBQVNFLEdBRXhCQyxTQUFTQyxLQUFLQyxZQUFZVCxLQUFLTSxHQUFHSSxPQUNwQyxDQUVBUixZQUFBQSxHQUNFRixLQUFLVyxPQUFTLElBQUlDLEVBQUFBLE9BQU9aLEtBQUtNLElBQzlCTixLQUFLVyxPQUFPRSxTQUFTQyxFQUFJLENBRTNCLENBRUFYLFdBQUFBLEdBQ0VILEtBQUtlLE1BQVEsSUFBSUMsRUFBQUEsU0FDbkIsQ0FFQUMsVUFBQUEsR0FDRWpCLEtBQUtrQixLQUFPLElBQUlDLEtBQUssQ0FDbkJiLEdBQUlOLEtBQUtNLEdBQ1RTLE1BQU9mLEtBQUtlLE1BQ1pLLE1BQU9wQixLQUFLb0IsT0FHaEIsQ0FtQkFDLFFBQUFBLEdBRUVyQixLQUFLSSxTQUFTa0IsUUFBUUMsT0FBT0MsV0FBWUQsT0FBT0UsYUFFaER6QixLQUFLVyxPQUFPZSxZQUFZLENBQUVDLE9BQVFKLE9BQU9DLFdBQWFELE9BQU9FLGFBZ0IvRCxDQUVBRyxNQUFBQSxHQUlFNUIsS0FBS0ksU0FBU3lCLE9BQU8sQ0FDbkJsQixPQUFRWCxLQUFLVyxPQUNiSSxNQUFPZixLQUFLZSxPQUVoQixrQkM1RkZlLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG9lbWEvLi9hcHAvY29tcG9uZW50cy9DYW52YXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZmxvZW1hL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDYW1lcmEsIFJlbmRlcmVyLCBUcmFuc2Zvcm0sIE1lc2gsIEJveCwgUHJvZ3JhbSB9IGZyb20gJ29nbCc7XG5cbi8vIGltcG9ydCBIb21lIGZyb20gJy4vSG9tZSdcbmltcG9ydCBmcmFnbWVudCBmcm9tICdzaGFkZXJzL3BsYW5lLWZyYWdtZW50Lmdsc2wnXG5pbXBvcnQgdmVydGV4IGZyb20gJ3NoYWRlcnMvcGxhbmUtdmVydGV4Lmdsc2wnXG5cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FudmFzIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5jcmVhdGVSZW5kZXJlcigpXG4gICAgdGhpcy5jcmVhdGVDYW1lcmEoKVxuICAgIHRoaXMuY3JlYXRlU2NlbmUoKVxuICAgIC8vICAgICB0aGlzLm9uUmVzaXplKClcbiAgICAvLyAgICAgdGhpcy5jcmVhdGVIb21lKClcbiAgICAvLyB0aGlzLmNyZWF0ZUN1YmUoKVxuICAgIC8vIOS7gOS5iOS7gOS5iOW/mOiusGRlZmluZeS6hu+8jOWwseeci+i/memHjOacieayoeacieiiq+WIneWni+WMllxuICB9XG5cbiAgY3JlYXRlUmVuZGVyZXIoKSB7XG4gICAgdGhpcy5yZW5kZXJlciA9IG5ldyBSZW5kZXJlcigpO1xuXG4gICAgdGhpcy5nbCA9IHRoaXMucmVuZGVyZXIuZ2w7IC8vVElQIHdvcmtzIGxpa2UgYSBjYW52YXMgY29udGV4dFxuXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmdsLmNhbnZhcyk7XG4gIH1cblxuICBjcmVhdGVDYW1lcmEoKSB7XG4gICAgdGhpcy5jYW1lcmEgPSBuZXcgQ2FtZXJhKHRoaXMuZ2wpXG4gICAgdGhpcy5jYW1lcmEucG9zaXRpb24ueiA9IDVcblxuICB9XG5cbiAgY3JlYXRlU2NlbmUoKSB7XG4gICAgdGhpcy5zY2VuZSA9IG5ldyBUcmFuc2Zvcm0oKVxuICB9XG5cbiAgY3JlYXRlSG9tZSgpIHtcbiAgICB0aGlzLmhvbWUgPSBuZXcgSG9tZSh7XG4gICAgICBnbDogdGhpcy5nbCxcbiAgICAgIHNjZW5lOiB0aGlzLnNjZW5lLFxuICAgICAgc2l6ZXM6IHRoaXMuc2l6ZXNcbiAgICB9KTtcblxuICB9XG5cbiAgLy8gY3JlYXRlQ3ViZSgpIHtcbiAgLy8gICB0aGlzLmdlb21ldHJ5ID0gbmV3IEJveCh0aGlzLmdsKVxuICAvLyAgIHRoaXMucHJvZ3JhbSA9IG5ldyBQcm9ncmFtKHRoaXMuZ2wsIHtcbiAgLy8gICAgIHZlcnRleCxcbiAgLy8gICAgIGZyYWdtZW50XG4gIC8vICAgfSlcbiAgLy8gICAvLyDlsIZnbOS9nOS4uuesrOS4gOS4quWFg+e0oOS8oOe7mU1lc2hcbiAgLy8gICB0aGlzLm1lc2ggPSBuZXcgTWVzaCh0aGlzLmdsLCB7XG4gIC8vICAgICBnZW9tZXRyeTp0aGlzLmdlb21ldHJ5LCBcbiAgLy8gICAgIHByb2dyYW06dGhpcy5wcm9ncmFtXG4gIC8vICAgfSlcbiAgLy8gICAvLyDlsIbnm5LlrZDorr7nva7kuLrnm7jmnLrnmoTlrZDlhYPntKBcbiAgLy8gICB0aGlzLm1lc2guc2V0UGFyZW50KHRoaXMuc2NlbmUpXG5cbiAgLy8gfVxuXG5cbiAgb25SZXNpemUoKSB7XG4gICAgLy8g5bCG5riy5p+T55qE55S75biD5bC65a+45aGr5ruh6KeG56qX5Y+jXG4gICAgdGhpcy5yZW5kZXJlci5zZXRTaXplKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpO1xuICAgIC8vIOWIm+W7uuS6hmNhbWVyYeS5i+WQjuaJjeiDveWIm+W7uumAj+inhuWbvlxuICAgIHRoaXMuY2FtZXJhLnBlcnNwZWN0aXZlKHsgYXNwZWN0OiB3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5pbm5lckhlaWdodCB9KTtcblxuICAgIC8vICAgICBjb25zdCBmb3YgPSB0aGlzLmNhbWVyYS5mb3YgKiAoTWF0aC5QSSAvIDE4MCk7XG4gICAgLy8gICAgIGNvbnN0IGhlaWdodCA9IDIgKiBNYXRoLnRhbihmb3YgLyAyKSAqIHRoaXMuY2FtZXJhLnBvc2l0aW9uLno7XG4gICAgLy8gICAgIGNvbnN0IHdpZHRoID0gaGVpZ2h0ICogdGhpcy5jYW1lcmEuYXNwZWN0O1xuXG4gICAgLy8gICAgIHRoaXMuc2l6ZXMgPSB7XG4gICAgLy8gICAgICAgaGVpZ2h0LFxuICAgIC8vICAgICAgIHdpZHRoLFxuICAgIC8vICAgICB9O1xuXG4gICAgLy8gICAgIGlmICh0aGlzLmhvbWUpIHtcbiAgICAvLyAgICAgICB0aGlzLmhvbWUub25SZXNpemUoe1xuICAgIC8vICAgICAgICAgc2l6ZXM6IHRoaXMuc2l6ZXNcbiAgICAvLyAgICAgICB9KVxuICAgIC8vICAgICB9XG4gIH1cblxuICB1cGRhdGUoKSB7XG4gICAgLy8g5a6e5pe25riy5p+TXG4gICAgLy8gdGhpcy5tZXNoLnJvdGF0aW9uLnggKz0gMC4wMVxuICAgIC8vIHRoaXMubWVzaC5yb3RhdGlvbi55ICs9IDAuMDFcbiAgICB0aGlzLnJlbmRlcmVyLnJlbmRlcih7XG4gICAgICBjYW1lcmE6IHRoaXMuY2FtZXJhLFxuICAgICAgc2NlbmU6IHRoaXMuc2NlbmVcbiAgICB9KVxuICB9XG59IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiOWIyNmE5ZDgyMzE5NWNlN2I4MDBcIikiXSwibmFtZXMiOlsiQ2FudmFzIiwiY29uc3RydWN0b3IiLCJ0aGlzIiwiY3JlYXRlUmVuZGVyZXIiLCJjcmVhdGVDYW1lcmEiLCJjcmVhdGVTY2VuZSIsInJlbmRlcmVyIiwiUmVuZGVyZXIiLCJnbCIsImRvY3VtZW50IiwiYm9keSIsImFwcGVuZENoaWxkIiwiY2FudmFzIiwiY2FtZXJhIiwiQ2FtZXJhIiwicG9zaXRpb24iLCJ6Iiwic2NlbmUiLCJUcmFuc2Zvcm0iLCJjcmVhdGVIb21lIiwiaG9tZSIsIkhvbWUiLCJzaXplcyIsIm9uUmVzaXplIiwic2V0U2l6ZSIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJpbm5lckhlaWdodCIsInBlcnNwZWN0aXZlIiwiYXNwZWN0IiwidXBkYXRlIiwicmVuZGVyIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9