/*! For license information please see main.62034e4f1a2ed363b6bd.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/about/Gallery.js":(s,t,e)=>{e.r(t),e.d(t,{default:()=>n});var i=e("./node_modules/ogl/src/core/Transform.js"),r=e("./node_modules/gsap/index.js"),o=e("./node_modules/lodash/map.js"),l=e.n(o),h=e("./app/components/Canvas/about/Media.js");class n{constructor({element:s,geometry:t,gl:e,index:r,scene:o,sizes:l}){this.element=s,this.elementWrapper=s.querySelector(".about__gallery__wrapper"),this.geometry=t,this.gl=e,this.index=r,this.scene=o,this.sizes=l,this.group=new i.Transform,this.scroll={current:0,target:0,last:0,lerp:.1,velocity:1},this.createMedias(),this.group.setParent(this.scene)}createMedias(){this.mediaElements=this.element.querySelectorAll(".about__gallery__media"),this.medias=l()(this.mediaElements,((s,t)=>new h.default({element:s,geometry:this.geometry,gl:this.gl,index:t,scene:this.group,sizes:this.sizes})))}show(){l()(this.medias,(s=>s.show()))}hide(){l()(this.medias,(s=>s.hide()))}onResize(s){this.bounds=this.elementWrapper.getBoundingClientRect(),this.sizes=s.sizes,this.width=this.bounds.width/window.innerWidth*this.sizes.width,this.scroll.current=this.scroll.target=0,l()(this.medias,(t=>t.onResize(s,this.scroll.current)))}onTouchDown({x:s,y:t}){this.scroll.start=this.scroll.current}onTouchMove({x:s,y:t}){const e=s.start-s.end;this.scroll.target=this.scroll.start-e}onTouchUp({x:s,y:t}){}update(s){this.bounds&&(this.scroll.current<this.scroll.target?(this.direction="right",this.scroll.velocity=-1):this.scroll.current>this.scroll.target&&(this.direction="left",this.scroll.velocity=1),this.scroll.target-=this.scroll.velocity,this.scroll.current=r.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),l()(this.medias,((s,t)=>{const e=s.mesh.scale.x/2+.25;if("left"===this.direction){s.mesh.position.x+e<-this.sizes.width/2&&(s.extra+=this.width)}else if("right"===this.direction){s.mesh.position.x-e>this.sizes.width/2&&(s.extra-=this.width)}s.update(this.scroll.current)})),this.group.position.y=s*this.sizes.height)}destroy(){this.scene.removeChild(this.group)}}}},(function(s){s.h=()=>"ce2b69a3917235fdb2e1"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBTTBCLE9BQVM3QyxLQUFLeUIsTUFHeEIsTUFBTyxHQUF1QixVQUFuQnpCLEtBQUtxQyxVQUF1QixDQUMzQmxCLEVBQU11QixLQUFLRSxTQUFTZixFQUFJWSxFQUUxQnpDLEtBQUtELE1BQU0wQixNQUFRLElBQ3pCTixFQUFNMEIsT0FBUzdDLEtBQUt5QixNQUd4QixDQUdBTixFQUFNaUIsT0FBT3BDLEtBQUtLLE9BQU9DLFFBQVEsSUFTbkNOLEtBQUtHLE1BQU15QyxTQUFTZCxFQUFJQSxFQUFJOUIsS0FBS0QsTUFBTStDLE9BR3pDLENBSUFDLE9BQUFBLEdBQ0UvQyxLQUFLRixNQUFNa0QsWUFBWWhELEtBQUtHLE1BQzlCLGtCQzVKRjhDLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG9lbWEvLi9hcHAvY29tcG9uZW50cy9DYW52YXMvYWJvdXQvR2FsbGVyeS5qcyIsIndlYnBhY2s6Ly9mbG9lbWEvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRyYW5zZm9ybSB9IGZyb20gJ29nbCdcbmltcG9ydCBHU0FQIGZyb20gJ2dzYXAnXG5cbmltcG9ydCBtYXAgZnJvbSAnbG9kYXNoL21hcCc7XG5cbmltcG9ydCBNZWRpYSBmcm9tICcuL01lZGlhJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FsbGVyeSB7XG4gIGNvbnN0cnVjdG9yKHsgZWxlbWVudCwgZ2VvbWV0cnksIGdsLCBpbmRleCwgc2NlbmUsIHNpemVzIH0pIHtcbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50XG4gICAgdGhpcy5lbGVtZW50V3JhcHBlciA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignLmFib3V0X19nYWxsZXJ5X193cmFwcGVyJylcbiAgICB0aGlzLmdlb21ldHJ5ID0gZ2VvbWV0cnlcbiAgICB0aGlzLmdsID0gZ2xcbiAgICB0aGlzLmluZGV4ID0gaW5kZXhcbiAgICB0aGlzLnNjZW5lID0gc2NlbmVcbiAgICB0aGlzLnNpemVzID0gc2l6ZXNcblxuICAgIHRoaXMuZ3JvdXAgPSBuZXcgVHJhbnNmb3JtKClcblxuICAgIHRoaXMuc2Nyb2xsID0ge1xuICAgICAgY3VycmVudDogMCxcbiAgICAgIHRhcmdldDogMCxcbiAgICAgIGxhc3Q6IDAsXG4gICAgICBsZXJwOiAwLjEsXG4gICAgICB2ZWxvY2l0eTogMVxuICAgIH1cblxuICAgIHRoaXMuY3JlYXRlTWVkaWFzKClcbiAgICB0aGlzLmdyb3VwLnNldFBhcmVudCh0aGlzLnNjZW5lKVxuICB9XG5cbiAgY3JlYXRlTWVkaWFzKCkge1xuICAgIHRoaXMubWVkaWFFbGVtZW50cyA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYWJvdXRfX2dhbGxlcnlfX21lZGlhJylcbiAgICAvLyDms6jmhI/vvIzlm77niYfpgInmi6nmmK/pgInmi6nkuIDkuKrnsbvlkI3vvIguKSDmiJbogIVJROWQje+8iCPvvInmiYDku6XvvIzopoHms6jmhI/kuI3mmK/pgInmi6nlrZfnrKbkuLJcblxuICAgIHRoaXMubWVkaWFzID0gbWFwKHRoaXMubWVkaWFFbGVtZW50cywgKGVsZW1lbnQsIGluZGV4KSA9PiB7XG5cbiAgICAgIHJldHVybiBuZXcgTWVkaWEoe1xuICAgICAgICBlbGVtZW50LFxuICAgICAgICBnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcbiAgICAgICAgZ2w6IHRoaXMuZ2wsXG4gICAgICAgIGluZGV4LFxuICAgICAgICBzY2VuZTogdGhpcy5ncm91cCxcbiAgICAgICAgc2l6ZXM6IHRoaXMuc2l6ZXNcbiAgICAgIH0pO1xuXG4gICAgfSlcbiAgfVxuXG4gIC8vIEFuaW1hdGlvbnNcbiAgc2hvdygpIHtcbiAgICBtYXAodGhpcy5tZWRpYXMsIG1lZGlhID0+IG1lZGlhLnNob3coKSlcbiAgfVxuICBoaWRlKCkge1xuICAgIG1hcCh0aGlzLm1lZGlhcywgbWVkaWEgPT4gbWVkaWEuaGlkZSgpKVxuICB9XG5cbiAgLyoqXG4gICAqIEV2ZW50cy5cbiAgICovXG4gIG9uUmVzaXplKGV2ZW50KSB7XG4gICAgdGhpcy5ib3VuZHMgPSB0aGlzLmVsZW1lbnRXcmFwcGVyLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG4gICAgLy8g6I635Y+W5YWD57Sg55qE5L2N572u5ZKM5bC65a+4XG5cbiAgICB0aGlzLnNpemVzID0gZXZlbnQuc2l6ZXNcbiAgICAvLyDlsY/luZXnmoTlsLrlr7jvvIznu5l1cGRhdGXogIzkuI3mmK/nlLvluIPnmoRcblxuICAgIHRoaXMud2lkdGggPSB0aGlzLmJvdW5kcy53aWR0aCAvIHdpbmRvdy5pbm5lcldpZHRoICogdGhpcy5zaXplcy53aWR0aFxuICAgIC8vIOiuoeeul+W9k+WJjeeUu+W7iueahOWuveW6puWNoOinhueql+WPo+eahOWuveW6pueahOWkmuWwkeeEtuWQjuS5mOS7peWFt+S9k+eahOWuveW6pi0tPuWwhuWFg+e0oOWcqOinhuWPo+S4reeahOavlOS+i+i9rOaNouS4uuWFt+S9k+eahOWunumZheWuveW6puOAguWTjeW6lOW8j+W4g+WxgFxuXG4gICAgdGhpcy5zY3JvbGwuY3VycmVudCA9IHRoaXMuc2Nyb2xsLnRhcmdldCA9IDBcblxuICAgIG1hcCh0aGlzLm1lZGlhcywgbWVkaWEgPT4gbWVkaWEub25SZXNpemUoZXZlbnQsIHRoaXMuc2Nyb2xsLmN1cnJlbnQpKVxuXG4gIH1cblxuICBvblRvdWNoRG93bih7IHgsIHkgfSkge1xuICAgIHRoaXMuc2Nyb2xsLnN0YXJ0ID0gdGhpcy5zY3JvbGwuY3VycmVudFxuICB9XG5cbiAgb25Ub3VjaE1vdmUoeyB4LCB5IH0pIHtcbiAgICBjb25zdCBkaXN0YW5jZSA9IHguc3RhcnQgLSB4LmVuZFxuXG4gICAgdGhpcy5zY3JvbGwudGFyZ2V0ID0gdGhpcy5zY3JvbGwuc3RhcnQgLSBkaXN0YW5jZVxuXG4gICAgLy8g5aaC5p6c6byg5qCH5ZKM5Zu+54mH55qE56e75Yqo55u45Y+N5pa55ZCR77yM6KaB55So5YeP5Y+3XG5cblxuICB9XG5cbiAgb25Ub3VjaFVwKHsgeCwgeSB9KSB7XG5cbiAgfVxuXG5cblxuICAvLyBVcGRhdGVcbiAgdXBkYXRlKHkpIHtcbiAgICBpZiAoIXRoaXMuYm91bmRzKSByZXR1cm5cblxuICAgIGlmICh0aGlzLnNjcm9sbC5jdXJyZW50IDwgdGhpcy5zY3JvbGwudGFyZ2V0KSB7XG4gICAgICB0aGlzLmRpcmVjdGlvbiA9ICdyaWdodCdcbiAgICAgIHRoaXMuc2Nyb2xsLnZlbG9jaXR5ID0gLTFcbiAgICB9IGVsc2UgaWYgKHRoaXMuc2Nyb2xsLmN1cnJlbnQgPiB0aGlzLnNjcm9sbC50YXJnZXQpIHtcbiAgICAgIHRoaXMuZGlyZWN0aW9uID0gJ2xlZnQnXG4gICAgICB0aGlzLnNjcm9sbC52ZWxvY2l0eSA9IDFcbiAgICB9XG4gICAgLy8g5qOA5rWL6byg5qCH5rua5Yqo5pa55ZCR77yM5b2T5YmN5L2N572u5ZKM5YWI5YmN5L2N572u5YGa5q+U6L6D44CCXG5cbiAgICAvLyDoh6rliqjmu5rliqjlm77niYfvvIzml6DpnIDmiYvliqjmu5rvvIzlnKjmiYvliqjmu5rliqjkuYvliY0u5rua5Yqo55qE5pa55ZCR5Zyo5LiK6Z2i6K6+572u5LqG5qC55o2uZGlyZWN0aW9u5rua5YqoXG4gICAgdGhpcy5zY3JvbGwudGFyZ2V0IC09IHRoaXMuc2Nyb2xsLnZlbG9jaXR5IFxuXG4gICAgLy8g5omL5Yqo5ruaXG4gICAgdGhpcy5zY3JvbGwuY3VycmVudCA9IEdTQVAudXRpbHMuaW50ZXJwb2xhdGUodGhpcy5zY3JvbGwuY3VycmVudCwgdGhpcy5zY3JvbGwudGFyZ2V0LCB0aGlzLnNjcm9sbC5sZXJwKVxuXG5cbiAgICBtYXAodGhpcy5tZWRpYXMsIChtZWRpYSwgaW5kZXgpID0+IHtcbiAgICAgIC8vIEZvciBYIGF4aXNcbiAgICAgIGNvbnN0IHNjYWxlWCA9IG1lZGlhLm1lc2guc2NhbGUueCAvIDIgKyAwLjI1XG4gICAgICAvLyDmr4/lvKDlm77niYfkuYvpl7TnmoTpl7TpmpTvvJ9cblxuICAgICAgaWYgKHRoaXMuZGlyZWN0aW9uID09PSAnbGVmdCcpIHtcbiAgICAgICAgY29uc3QgeCA9IG1lZGlhLm1lc2gucG9zaXRpb24ueCArIHNjYWxlWFxuXG4gICAgICAgIGlmICh4IDwgLXRoaXMuc2l6ZXMud2lkdGggLyAyKSB7XG4gICAgICAgICAgbWVkaWEuZXh0cmEgKz0gdGhpcy53aWR0aFxuXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodGhpcy5kaXJlY3Rpb24gPT09ICdyaWdodCcpIHtcbiAgICAgICAgY29uc3QgeCA9IG1lZGlhLm1lc2gucG9zaXRpb24ueCAtIHNjYWxlWFxuXG4gICAgICAgIGlmICh4ID4gdGhpcy5zaXplcy53aWR0aCAvIDIpIHtcbiAgICAgICAgICBtZWRpYS5leHRyYSAtPSB0aGlzLndpZHRoXG4gICAgICAgIH1cbiAgICAgICAgLy8g6L+Z5Liq5YWD57Sg55qE5bem6L656L6555WM5aSn5LqO5bGP5bmV5pyA5Y+z6L65LOWwseenu+WIsOWJjemdouadpVxuICAgICAgfVxuXG5cbiAgICAgIG1lZGlhLnVwZGF0ZSh0aGlzLnNjcm9sbC5jdXJyZW50KVxuICAgICAgLy8g5qC55o2u5rua5Yqo55qE5L2N572u5p2l5pu05paw5aqS5L2T5YWD57Sg55qE54q25oCB44CCXG4gICAgICAvLyDlpoLmnpzlm77niYfliqDovb3kuobvvIzkvYbmmK/msqHmnInmjInnhafljp/mnaXnmoTkvY3nva7mlL7vvIzorrDlvpfmm7TmlrDov5nkuKpcbiAgICAgIC8vIG1lZGlhLm1lc2gucG9zaXRpb24ueSA9IE1hdGguY29zKChtZWRpYS5tZXNoLnBvc2l0aW9uLnggLyB0aGlzLndpZHRoKSAqIE1hdGguUEkpICogMSAtIDFcbiAgICAgIC8vIC8vIGdhbGxlcnnnmoTmu5rliqjliqjnlLtcblxuXG4gICAgfSlcbiAgICAvLyDkvKDnu5ltZWRpYeaWh+S7tlxuICAgIHRoaXMuZ3JvdXAucG9zaXRpb24ueSA9IHkgKiB0aGlzLnNpemVzLmhlaWdodFxuICAgIC8vIOWboOS4unnov5jlj6rmmK/kuKrmr5Tkvovlm6DlrZDvvIzmiYDku6Xov5jkuI3mmK/nnJ/lrp7nmoTlgLxcblxuICB9XG4gIC8qKlxuICAqIERlc3Ryb3lcbiAgKi9cbiAgZGVzdHJveSgpIHtcbiAgICB0aGlzLnNjZW5lLnJlbW92ZUNoaWxkKHRoaXMuZ3JvdXApXG4gIH1cblxufSIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcImNlMmI2OWEzOTE3MjM1ZmRiMmUxXCIpIl0sIm5hbWVzIjpbIkdhbGxlcnkiLCJjb25zdHJ1Y3RvciIsImVsZW1lbnQiLCJnZW9tZXRyeSIsImdsIiwiaW5kZXgiLCJzY2VuZSIsInNpemVzIiwidGhpcyIsImVsZW1lbnRXcmFwcGVyIiwicXVlcnlTZWxlY3RvciIsImdyb3VwIiwiVHJhbnNmb3JtIiwic2Nyb2xsIiwiY3VycmVudCIsInRhcmdldCIsImxhc3QiLCJsZXJwIiwidmVsb2NpdHkiLCJjcmVhdGVNZWRpYXMiLCJzZXRQYXJlbnQiLCJtZWRpYUVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsIm1lZGlhcyIsIm1hcCIsIk1lZGlhIiwic2hvdyIsIm1lZGlhIiwiaGlkZSIsIm9uUmVzaXplIiwiZXZlbnQiLCJib3VuZHMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ3aWR0aCIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJvblRvdWNoRG93biIsIngiLCJ5Iiwic3RhcnQiLCJvblRvdWNoTW92ZSIsImRpc3RhbmNlIiwiZW5kIiwib25Ub3VjaFVwIiwidXBkYXRlIiwiZGlyZWN0aW9uIiwiR1NBUCIsInV0aWxzIiwiaW50ZXJwb2xhdGUiLCJzY2FsZVgiLCJtZXNoIiwic2NhbGUiLCJwb3NpdGlvbiIsImV4dHJhIiwiaGVpZ2h0IiwiZGVzdHJveSIsInJlbW92ZUNoaWxkIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9