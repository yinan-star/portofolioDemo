/*! For license information please see main.3bfaa7e6974b117ded33.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Preloader.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>i});var n=s("./app/classes/Component.js"),a=(s("./node_modules/lodash/each.js"),s("./node_modules/gsap/index.js")),l=s("./app/utils/text.js");class i extends n.default{constructor(){super({element:".preloader",elements:{title:".preloader__text",number:".preloader__number",numberText:".preloader__number__text"}}),(0,l.split)({element:this.elements.title,expression:"<br>"}),(0,l.split)({element:this.elements.title,expression:"<br>"}),this.elements.titleSpans=this.elements.title.querySelectorAll("span span"),this.length=0,this.createLoader()}createLoader(){window.ASSETS.forEach((e=>{console.log(e)}))}onAssetLoaded(e){this.length+=1;const t=this.length/this.elements.images.length;this.elements.numberText.innerHTML=`${Math.round(100*t)}%`,1===t&&this.onloaded()}onloaded(){return new Promise((e=>{this.animateOut=a.default.timeline({delay:2}),this.animateOut.to(this.elements.titleSpans,{duration:1.5,ease:"expo.out",stagger:.1,y:"100%"}),this.animateOut.to(this.elements.numberText,{duration:1.5,ease:"expo.out",stagger:.1,y:"100%"},"-=1.4"),this.animateOut.to(this.element,{duration:1.5,ease:"expo.out",scaleY:0,transformOrigin:"100% 100%"},"-=1"),this.animateOut.call((e=>{this.emit("completed")}))}))}destroy(){this.element.parentNode.removeChild(this.element)}}}},(function(e){e.h=()=>"35822ccb2c2ca8ef3b15"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4zYmZhYTdlNjk3NGIxMTdkZWQzMy5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7bVFBTWUsTUFBTUEsVUFBa0JDLEVBQUFBLFFBQ25DQyxXQUFBQSxHQUNJQyxNQUFNLENBQ0ZDLFFBQVEsYUFDUkMsU0FBUyxDQUNMQyxNQUFNLG1CQUNOQyxPQUFPLHFCQUNQQyxXQUFXLCtCQUluQkMsRUFBQUEsRUFBQUEsT0FBTSxDQUNGTCxRQUFRTSxLQUFLTCxTQUFTQyxNQUN0QkssV0FBVyxVQUdmRixFQUFBQSxFQUFBQSxPQUFNLENBQ0ZMLFFBQVFNLEtBQUtMLFNBQVNDLE1BQ3RCSyxXQUFXLFNBR2ZELEtBQUtMLFNBQVNPLFdBQWFGLEtBQUtMLFNBQVNDLE1BQU1PLGlCQUFpQixhQUVoRUgsS0FBS0ksT0FBUSxFQUViSixLQUFLSyxjQUNULENBRUFBLFlBQUFBLEdBS0lDLE9BQU9DLE9BQU9DLFNBQVFDLElBQ2xCQyxRQUFRQyxJQUFJRixFQUFNLEdBRzFCLENBRUFHLGFBQUFBLENBQWNILEdBQ1ZULEtBQUtJLFFBQVMsRUFFZCxNQUFNUyxFQUFRYixLQUFLSSxPQUFPSixLQUFLTCxTQUFTbUIsT0FBT1YsT0FDL0NKLEtBQUtMLFNBQVNHLFdBQVdpQixVQUFXLEdBQUVDLEtBQUtDLE1BQWMsSUFBUkosTUFHbkMsSUFBWEEsR0FFQ2IsS0FBS2tCLFVBRWIsQ0FFQUEsUUFBQUEsR0FDSSxPQUFPLElBQUlDLFNBQVFDLElBQ2ZwQixLQUFLcUIsV0FBYUMsRUFBQUEsUUFBS0MsU0FBUyxDQUM1QkMsTUFBTSxJQUlWeEIsS0FBS3FCLFdBQVdJLEdBQUd6QixLQUFLTCxTQUFTTyxXQUFXLENBRXhDd0IsU0FBVSxJQUNWQyxLQUFNLFdBQ05DLFFBQVEsR0FDUkMsRUFBRyxTQUdQN0IsS0FBS3FCLFdBQVdJLEdBQUd6QixLQUFLTCxTQUFTRyxXQUFXLENBRXhDNEIsU0FBVSxJQUNWQyxLQUFNLFdBQ05DLFFBQVEsR0FDUkMsRUFBRyxRQUNMLFNBRUY3QixLQUFLcUIsV0FBV0ksR0FBR3pCLEtBQUtOLFFBQVEsQ0FFNUJnQyxTQUFVLElBQ1ZDLEtBQU0sV0FDTkcsT0FBTyxFQUNQQyxnQkFBZ0IsYUFFbEIsT0FDRi9CLEtBQUtxQixXQUFXVyxNQUFLQyxJQUVqQmpDLEtBQUtrQyxLQUFLLFlBQVksR0FDeEIsR0FFVixDQUVBQyxPQUFBQSxHQUNJbkMsS0FBS04sUUFBUTBDLFdBQVdDLFlBQVlyQyxLQUFLTixRQUM3QyxrQkNsR0o0QyxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvZW1hLy4vYXBwL2NvbXBvbmVudHMvUHJlbG9hZGVyLmpzIiwid2VicGFjazovL2Zsb2VtYS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbXBvbmVudCBmcm9tICcuLi9jbGFzc2VzL0NvbXBvbmVudCc7XG5pbXBvcnQgZWFjaCBmcm9tICdsb2Rhc2gvZWFjaCdcbmltcG9ydCBHU0FQIGZyb20gJ2dzYXAnXG5cbmltcG9ydHtzcGxpdH0gZnJvbSd1dGlscy90ZXh0J1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcmVsb2FkZXIgZXh0ZW5kcyBDb21wb25lbnR7XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgZWxlbWVudDonLnByZWxvYWRlcicsXG4gICAgICAgICAgICBlbGVtZW50czp7XG4gICAgICAgICAgICAgICAgdGl0bGU6Jy5wcmVsb2FkZXJfX3RleHQnLFxuICAgICAgICAgICAgICAgIG51bWJlcjonLnByZWxvYWRlcl9fbnVtYmVyJyxcbiAgICAgICAgICAgICAgICBudW1iZXJUZXh0OicucHJlbG9hZGVyX19udW1iZXJfX3RleHQnLFxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuXG4gICAgICAgIHNwbGl0KHtcbiAgICAgICAgICAgIGVsZW1lbnQ6dGhpcy5lbGVtZW50cy50aXRsZSxcbiAgICAgICAgICAgIGV4cHJlc3Npb246Jzxicj4nXG4gICAgICAgIH0pXG4gICAgICAgIC8vIOWlveWDj+aYr+WcqHNwYW7ph4zpnaLlgZrpga7nvalcbiAgICAgICAgc3BsaXQoe1xuICAgICAgICAgICAgZWxlbWVudDp0aGlzLmVsZW1lbnRzLnRpdGxlLFxuICAgICAgICAgICAgZXhwcmVzc2lvbjonPGJyPidcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLmVsZW1lbnRzLnRpdGxlU3BhbnMgPSB0aGlzLmVsZW1lbnRzLnRpdGxlLnF1ZXJ5U2VsZWN0b3JBbGwoJ3NwYW4gc3BhbicpXG5cbiAgICAgICAgdGhpcy5sZW5ndGggPTBcblxuICAgICAgICB0aGlzLmNyZWF0ZUxvYWRlcigpXG4gICAgfVxuXG4gICAgY3JlYXRlTG9hZGVyKCl7IC8vIOWIm+W7uuWKoOi9vemhteWQjuebtOaOpeWllOedgGFib3V0IHBhZ2XlubbkuJTlsIZhYm91dOWbvueJh+mDveaYvuekuuWHuuadpVxuICAgICAgICAvLyBlYWNoKHRoaXMuZWxlbWVudHMuaW1hZ2VzLGVsZW1lbnQgPT57XG4gICAgICAgIC8vICAgICBlbGVtZW50Lm9ubG9hZD1fID0+IHRoaXMub25Bc3NldExvYWRlZChlbGVtZW50KVxuICAgICAgICAvLyAgICAgZWxlbWVudC5zcmM9ZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3JjJykgICAgICAgICAgIFxuICAgICAgICAvLyB9KSBcbiAgICAgICAgd2luZG93LkFTU0VUUy5mb3JFYWNoKGltYWdlID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGltYWdlKVxuICAgICAgICB9KVxuICAgICAgIFxuICAgIH1cblxuICAgIG9uQXNzZXRMb2FkZWQoaW1hZ2Upey8vIOWKoOi9vemhteeahOiuoeeul+WTjeW6lOWFrOW8jyAgICAgXG4gICAgICAgIHRoaXMubGVuZ3RoICs9MVxuICAgICAgICAvLyDmr49sb2Fk5LiA5qyh77yM6L+Z5Liq5b2T5YmN5Yqg6L2955qE6L+b5bqm5Lya5Yqg5LiAXG4gICAgICAgIGNvbnN0IHBlcmNlbnQ9dGhpcy5sZW5ndGgvdGhpcy5lbGVtZW50cy5pbWFnZXMubGVuZ3RoXG4gICAgICAgIHRoaXMuZWxlbWVudHMubnVtYmVyVGV4dC5pbm5lckhUTUw9YCR7TWF0aC5yb3VuZChwZXJjZW50KjEwMCl9JWBcbiAgICAgICAgLy8g6L+Z5Liq5piv5Yqg6L295a6M5omA5pyJ5Zu+5YOP5ZCO55qE5Yqg6L296aG155qEbnVtYmVy55qE6K6h566X5YWs5byPXG5cbiAgICAgICAgaWYocGVyY2VudCA9PT0xIClcbiAgICAgICAge1xuICAgICAgICAgICAgdGhpcy5vbmxvYWRlZCgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBvbmxvYWRlZCgpey8vIOaOp+WItuWKoOi9vemhteetieW+heWkmuS5hei/m+WFpeS4u+mhteWPiuWKqOeUu1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PntcbiAgICAgICAgICAgIHRoaXMuYW5pbWF0ZU91dCA9IEdTQVAudGltZWxpbmUoe1xuICAgICAgICAgICAgICAgIGRlbGF5OjJcbiAgICAgICAgICAgICAgICAvLyDmjqfliLbliqDovb3pobXnrYnlvoXlpJrkuYXov5vlhaXkuLvpobVcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHRoaXMuYW5pbWF0ZU91dC50byh0aGlzLmVsZW1lbnRzLnRpdGxlU3BhbnMse1xuICAgICAgICAgICAgICAgIC8vIOWtl+S9k+iuvuiuoemAkOa4kOWQkeS4i+a2iOWksVxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxLjUsXG4gICAgICAgICAgICAgICAgZWFzZTogJ2V4cG8ub3V0JyxcbiAgICAgICAgICAgICAgICBzdGFnZ2VyOjAuMSxcbiAgICAgICAgICAgICAgICB5OiAnMTAwJScsXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICB0aGlzLmFuaW1hdGVPdXQudG8odGhpcy5lbGVtZW50cy5udW1iZXJUZXh0LHtcbiAgICAgICAgICAgICAgICAvLyDmlbDlrZforr7orqHpgJDmuJDlkJHkuIvmtojlpLFcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMS41LFxuICAgICAgICAgICAgICAgIGVhc2U6ICdleHBvLm91dCcsXG4gICAgICAgICAgICAgICAgc3RhZ2dlcjowLjEsXG4gICAgICAgICAgICAgICAgeTogJzEwMCUnLFxuICAgICAgICAgICAgfSwnLT0xLjQnKVxuXG4gICAgICAgICAgICB0aGlzLmFuaW1hdGVPdXQudG8odGhpcy5lbGVtZW50LHtcbiAgICAgICAgICAgICAgICAvLyDorqlwcmVsb2FkZXLmsr9Z6L205ZCR5LiK5raI5aSxXG4gICAgICAgICAgICAgICAgZHVyYXRpb246IDEuNSxcbiAgICAgICAgICAgICAgICBlYXNlOiAnZXhwby5vdXQnLFxuICAgICAgICAgICAgICAgIHNjYWxlWTowLFxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybU9yaWdpbjonMTAwJSAxMDAlJ1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfSwnLT0xJylcbiAgICAgICAgICAgIHRoaXMuYW5pbWF0ZU91dC5jYWxsKF8gPT4ge1xuICAgICAgICAgICAgICAgIC8vIOi/m+WFpeS4u+mhtVxuICAgICAgICAgICAgICAgIHRoaXMuZW1pdCgnY29tcGxldGVkJylcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pICAgXG4gICAgfVxuXG4gICAgZGVzdHJveSgpe1xuICAgICAgICB0aGlzLmVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzLmVsZW1lbnQpXG4gICAgfVxufSIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcIjM1ODIyY2NiMmMyY2E4ZWYzYjE1XCIpIl0sIm5hbWVzIjpbIlByZWxvYWRlciIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwic3VwZXIiLCJlbGVtZW50IiwiZWxlbWVudHMiLCJ0aXRsZSIsIm51bWJlciIsIm51bWJlclRleHQiLCJzcGxpdCIsInRoaXMiLCJleHByZXNzaW9uIiwidGl0bGVTcGFucyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsZW5ndGgiLCJjcmVhdGVMb2FkZXIiLCJ3aW5kb3ciLCJBU1NFVFMiLCJmb3JFYWNoIiwiaW1hZ2UiLCJjb25zb2xlIiwibG9nIiwib25Bc3NldExvYWRlZCIsInBlcmNlbnQiLCJpbWFnZXMiLCJpbm5lckhUTUwiLCJNYXRoIiwicm91bmQiLCJvbmxvYWRlZCIsIlByb21pc2UiLCJyZXNvbHZlIiwiYW5pbWF0ZU91dCIsIkdTQVAiLCJ0aW1lbGluZSIsImRlbGF5IiwidG8iLCJkdXJhdGlvbiIsImVhc2UiLCJzdGFnZ2VyIiwieSIsInNjYWxlWSIsInRyYW5zZm9ybU9yaWdpbiIsImNhbGwiLCJfIiwiZW1pdCIsImRlc3Ryb3kiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=