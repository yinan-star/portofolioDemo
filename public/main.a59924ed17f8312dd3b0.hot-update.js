/*! For license information please see main.a59924ed17f8312dd3b0.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Detail/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>r});var i=s("./node_modules/ogl/src/extras/Plane.js"),h=s("./node_modules/ogl/src/core/Program.js"),a=s("./node_modules/ogl/src/core/Mesh.js"),n=s("./app/shaders/plane-fragment.glsl"),o=s("./app/shaders/plane-vertex.glsl");const r=class{constructor({gl:e,scene:t,sizes:s}){this.element=document.querySelector(".detail__media__image"),this.gl=e,this.scene=t,this.sizes=s,this.geometry=new i.Plane(this.gl),this.createTexture(),this.createProgram(),this.createMesh()}createTexture(){const e=this.element.getAttribute("data-src");this.texture=window.TEXTURES[e]}createProgram(){this.program=new h.Program(this.gl,{fragment:n.default,vertex:o.default,uniforms:{uAlpha:{value:1},tMap:{value:this.texture}}})}createMesh(){this.mesh=new a.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene)}createBounds({sizes:e}){this.sizes=e,this.bounds=this.element.getBoundingClientRect(),this.upadteScale(),this.upadteX(),this.upadteY()}show(){}hide(){}onResize(e){this.createBounds(e),this.upadteX(),this.upadteY()}onTouchDown(){}onTouchMove(){}onTouchUp(){}upadteScale(){this.height=this.bounds.height/window.innerHeight,this.width=this.bounds.width/window.innerWidth,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}upadteX(){this.x=this.bounds.left/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width}upadteY(){this.y=this.bounds.top/window.innerHeight,this.mesh.position.y=this.sizes.height/2-this.mesh.scale.y/2-this.y*this.sizes.height}update(){this.bounds&&(this.upadteX(),this.upadteY())}}}},(function(e){e.h=()=>"08089b6e662a02b30a2b"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5hNTk5MjRlZDE3ZjgzMTJkZDNiMC5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7OFZBT0EsY0FDRUEsV0FBQUEsRUFBWSxHQUFFQyxFQUFFLE1BQUVDLEVBQUssTUFBRUMsSUFDdkJDLEtBQUtDLFFBQVVDLFNBQVNDLGNBQWMseUJBQ3RDSCxLQUFLSCxHQUFLQSxFQUNWRyxLQUFLRixNQUFRQSxFQUNiRSxLQUFLRCxNQUFRQSxFQUViQyxLQUFLSSxTQUFXLElBQUlDLEVBQUFBLE1BQU1MLEtBQUtILElBRy9CRyxLQUFLTSxnQkFDTE4sS0FBS08sZ0JBQ0xQLEtBQUtRLFlBQ1AsQ0FDQUYsYUFBQUEsR0FFRSxNQUFNRyxFQUFRVCxLQUFLQyxRQUFRUyxhQUFhLFlBQ3hDVixLQUFLVyxRQUFVQyxPQUFPQyxTQUFTSixFQVlqQyxDQUdBRixhQUFBQSxHQUNFUCxLQUFLYyxRQUFVLElBQUlDLEVBQUFBLFFBQVFmLEtBQUtILEdBQUksQ0FDbENtQixTQUFRLFVBQ1JDLE9BQU0sVUFDTkMsU0FBVSxDQUNSQyxPQUFRLENBQUVDLE1BQU8sR0FDakJDLEtBQU0sQ0FBRUQsTUFBT3BCLEtBQUtXLFdBRzFCLENBRUFILFVBQUFBLEdBQ0VSLEtBQUtzQixLQUFPLElBQUlDLEVBQUFBLEtBQUt2QixLQUFLSCxHQUFJLENBQzVCTyxTQUFVSixLQUFLSSxTQUNmVSxRQUFTZCxLQUFLYyxVQUdoQmQsS0FBS3NCLEtBQUtFLFVBQVV4QixLQUFLRixNQUczQixDQUVBMkIsWUFBQUEsRUFBYSxNQUFFMUIsSUFFYkMsS0FBS0QsTUFBUUEsRUFFYkMsS0FBSzBCLE9BQVMxQixLQUFLQyxRQUFRMEIsd0JBRTNCM0IsS0FBSzRCLGNBQ0w1QixLQUFLNkIsVUFDTDdCLEtBQUs4QixTQUNQLENBR0FDLElBQUFBLEdBRUEsQ0FFQUMsSUFBQUEsR0FFQSxDQUdBQyxRQUFBQSxDQUFTbEMsR0FDUEMsS0FBS3lCLGFBQWExQixHQUNsQkMsS0FBSzZCLFVBQ0w3QixLQUFLOEIsU0FFUCxDQUVBSSxXQUFBQSxHQUVBLENBRUFDLFdBQUFBLEdBRUEsQ0FFQUMsU0FBQUEsR0FFQSxDQUdBUixXQUFBQSxHQUNFNUIsS0FBS3FDLE9BQVNyQyxLQUFLMEIsT0FBT1csT0FBU3pCLE9BQU8wQixZQUMxQ3RDLEtBQUt1QyxNQUFRdkMsS0FBSzBCLE9BQU9hLE1BQVEzQixPQUFPNEIsV0FFeEN4QyxLQUFLc0IsS0FBS21CLE1BQU1DLEVBQUkxQyxLQUFLRCxNQUFNd0MsTUFBUXZDLEtBQUt1QyxNQUM1Q3ZDLEtBQUtzQixLQUFLbUIsTUFBTUUsRUFBSTNDLEtBQUtELE1BQU1zQyxPQUFTckMsS0FBS3FDLE1BSS9DLENBRUFSLE9BQUFBLEdBQ0U3QixLQUFLMEMsRUFBSzFDLEtBQUswQixPQUFPa0IsS0FBUWhDLE9BQU80QixXQUNyQ3hDLEtBQUtzQixLQUFLdUIsU0FBU0gsR0FBTTFDLEtBQUtELE1BQU13QyxNQUFRLEVBQU12QyxLQUFLc0IsS0FBS21CLE1BQU1DLEVBQUksRUFBTTFDLEtBQUswQyxFQUFJMUMsS0FBS0QsTUFBTXdDLEtBR2xHLENBRUFULE9BQUFBLEdBQ0U5QixLQUFLMkMsRUFBSzNDLEtBQUswQixPQUFPb0IsSUFBT2xDLE9BQU8wQixZQUNwQ3RDLEtBQUtzQixLQUFLdUIsU0FBU0YsRUFBSzNDLEtBQUtELE1BQU1zQyxPQUFTLEVBQU1yQyxLQUFLc0IsS0FBS21CLE1BQU1FLEVBQUksRUFBTTNDLEtBQUsyQyxFQUFJM0MsS0FBS0QsTUFBTXNDLE1BRWxHLENBRUFVLE1BQUFBLEdBQ08vQyxLQUFLMEIsU0FDVjFCLEtBQUs2QixVQUNMN0IsS0FBSzhCLFVBR1Asa0JDcElGa0IsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb2VtYS8uL2FwcC9jb21wb25lbnRzL0NhbnZhcy9EZXRhaWwvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZmxvZW1hL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAvL+WkhOeQhueFp+eJh1xuaW1wb3J0IEdTQVAgZnJvbSAnZ3NhcCdcbmltcG9ydCB7IE1lc2gsIFBsYW5lLCBQcm9ncmFtIH0gZnJvbSAnb2dsJztcblxuaW1wb3J0IGZyYWdtZW50IGZyb20gJ3NoYWRlcnMvcGxhbmUtZnJhZ21lbnQuZ2xzbCc7XG5pbXBvcnQgdmVydGV4IGZyb20gJ3NoYWRlcnMvcGxhbmUtdmVydGV4Lmdsc2wnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKHsgZ2wsIHNjZW5lLCBzaXplcyB9KSB7XG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmRldGFpbF9fbWVkaWFfX2ltYWdlJylcbiAgICB0aGlzLmdsID0gZ2w7XG4gICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xuICAgIHRoaXMuc2l6ZXMgPSBzaXplcztcblxuICAgIHRoaXMuZ2VvbWV0cnkgPSBuZXcgUGxhbmUodGhpcy5nbClcbiAgICAvLyDkuIrpnaLnmoRlbG1lbnTpg73mmK/pnIDopoHlpI3nlKjnmoTmiYDku6XlnKjov5nph4zliJ3lp4vljJZcblxuICAgIHRoaXMuY3JlYXRlVGV4dHVyZSgpO1xuICAgIHRoaXMuY3JlYXRlUHJvZ3JhbSgpO1xuICAgIHRoaXMuY3JlYXRlTWVzaCgpO1xuICB9XG4gIGNyZWF0ZVRleHR1cmUoKSB7XG4gICAgLy8g5Zyoc2hhZGVy6YeM6Z2i5YGa55qE5riQ5Y+YXG4gICAgY29uc3QgaW1hZ2UgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXNyYycpXG4gICAgdGhpcy50ZXh0dXJlID0gd2luZG93LlRFWFRVUkVTW2ltYWdlXVxuICAgIC8vIHRoaXMudGV4dHVyZSA9IG5ldyBUZXh0dXJlKHRoaXMuZ2wpXG5cbiAgICAvLyBjb25zdCBpbWFnZSA9dGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb2xsZWN0aW9uc19fZ2FsbGVyeV9fbWVkaWFfX2ltYWdlJylcblxuICAgIC8vIHRoaXMuaW1hZ2UgPSBuZXcgd2luZG93LkltYWdlKClcbiAgICAvLyB0aGlzLmltYWdlLmNyb3NzT3JpZ2luID0gJ2Fub255bW91cydcbiAgICAvLyAvLyDlm6DkuLrlm77niYfmmK/ku45wcmVzbWlj5p2l55qE77yM5omA5Lul6KaB5Yy/5ZCNXG4gICAgLy8gdGhpcy5pbWFnZS5zcmMgPSBpbWFnZS5nZXRBdHRyaWJ1dGUoJ2RhdGEtc3JjJylcbiAgICAvLyB0aGlzLmltYWdlLm9ubG9hZCA9IF8gPT4gKHRoaXMudGV4dHVyZS5pbWFnZSA9IHRoaXMuaW1hZ2UpXG4gICAgLy8gLy8g5aaC5p6c5Zu+54mH5piv6buR6Imy55qE5p2Q6LSo77yM55yL6L+Z6YeM77yMZ2V0QXR0cmlidXRl5piv55u05o6laW1hZ2Uu6ICM5LiN5pivdGhpcy5pbWFnZVxuICAgIC8vIC8vIHRoaXMuaW1hZ2Ug5b2T5YmN57G755qE5a6e5L6L5a+56LGh5LiK55qE5LiA5Liq5bGe5oCn77yMaW1hZ2Ug5Y+q5piv5LiA5Liq5Zyo5pa55rOV5Lit5Li05pe25a2Y5YKo5Zu+54mH5YWD57Sg55qE5Y+Y6YePXG4gIH1cblxuICAvLyDnhLblkI7lsIbpgInlpb3nmoTnhafniYfkvKDnu5lwcm9ncmFt5aSE55CG6LS05Zu+XG4gIGNyZWF0ZVByb2dyYW0oKSB7XG4gICAgdGhpcy5wcm9ncmFtID0gbmV3IFByb2dyYW0odGhpcy5nbCwge1xuICAgICAgZnJhZ21lbnQsXG4gICAgICB2ZXJ0ZXgsXG4gICAgICB1bmlmb3Jtczoge1xuICAgICAgICB1QWxwaGE6IHsgdmFsdWU6IDEgfSxcbiAgICAgICAgdE1hcDogeyB2YWx1ZTogdGhpcy50ZXh0dXJlIH1cbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgY3JlYXRlTWVzaCgpIHtcbiAgICB0aGlzLm1lc2ggPSBuZXcgTWVzaCh0aGlzLmdsLCB7XG4gICAgICBnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcbiAgICAgIHByb2dyYW06IHRoaXMucHJvZ3JhbSxcbiAgICB9KTtcblxuICAgIHRoaXMubWVzaC5zZXRQYXJlbnQodGhpcy5zY2VuZSk7XG4gICAgLy8gbWVzaOaYr3NjZW5l55qE5a2Q5YWD57Sg44CCXG5cbiAgfVxuXG4gIGNyZWF0ZUJvdW5kcyh7IHNpemVzIH0pIHtcbiAgICAvLyDlsIZtZXNo5ZKMZ2FsbGVyeeaJgOiuvuWumueahOWwuuWvuOe7keWumlxuICAgIHRoaXMuc2l6ZXMgPSBzaXplc1xuICAgIC8vIOWIneWni+WMlnNpemVz77yM6K6p5LuW5Y+Y5oiQ5LiL6Z2i5Y+v5Lul6YeN5aSN5Yip55So55qE5bGe5oCnXG4gICAgdGhpcy5ib3VuZHMgPSB0aGlzLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcblxuICAgIHRoaXMudXBhZHRlU2NhbGUoKVxuICAgIHRoaXMudXBhZHRlWCgpXG4gICAgdGhpcy51cGFkdGVZKClcbiAgfVxuXG4gIC8vIEFuaW1hdGlvbnMuXG4gIHNob3coKSB7XG5cbiAgfVxuXG4gIGhpZGUoKSB7XG5cbiAgfVxuXG4gIC8vIEV2ZW50c1xuICBvblJlc2l6ZShzaXplcykge1xuICAgIHRoaXMuY3JlYXRlQm91bmRzKHNpemVzKVxuICAgIHRoaXMudXBhZHRlWCgpXG4gICAgdGhpcy51cGFkdGVZKClcblxuICB9XG5cbiAgb25Ub3VjaERvd24oKXtcblxuICB9XG5cbiAgb25Ub3VjaE1vdmUoKXtcblxuICB9XG5cbiAgb25Ub3VjaFVwKCl7XG4gICAgXG4gIH1cblxuICAvLyBMb29wXG4gIHVwYWR0ZVNjYWxlKCkge1xuICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy5ib3VuZHMuaGVpZ2h0IC8gd2luZG93LmlubmVySGVpZ2h0XG4gICAgdGhpcy53aWR0aCA9IHRoaXMuYm91bmRzLndpZHRoIC8gd2luZG93LmlubmVyV2lkdGhcblxuICAgIHRoaXMubWVzaC5zY2FsZS54ID0gdGhpcy5zaXplcy53aWR0aCAqIHRoaXMud2lkdGhcbiAgICB0aGlzLm1lc2guc2NhbGUueSA9IHRoaXMuc2l6ZXMuaGVpZ2h0ICogdGhpcy5oZWlnaHRcbiAgICAvLyDmiJHnjJzmmK/miop3ZWJHbOWbvueJh+WPmOaIkOWNleS9jeWQkemHj+eEtuWQjuWGjeS5mOS7peato+ehrueahOWbvueJh+eahOWuvemrmO+8jOiuqei/meS6m+WbvueJh+WwuuWvuG1hdGNo5Y6f5Zu+XG5cblxuICB9XG5cbiAgdXBhZHRlWCgpIHtcbiAgICB0aGlzLnggPSAodGhpcy5ib3VuZHMubGVmdCkgLyB3aW5kb3cuaW5uZXJXaWR0aFxuICAgIHRoaXMubWVzaC5wb3NpdGlvbi54ID0gKC10aGlzLnNpemVzLndpZHRoIC8gMikgKyAodGhpcy5tZXNoLnNjYWxlLnggLyAyKSArICh0aGlzLnggKiB0aGlzLnNpemVzLndpZHRoKVxuICAgIC8vIHdpZHRo5ZKMaGVpZ2h05piv6KeG56qX55qE5a696auY44CC5Lmf5bCx5pivbWVzaOeahHBvc2l0aW9u55qE5Y6f54K55Zyo6KeG56qX5Y+j55qE5q2j5Lit5b+DXG4gICAgLy8gLXdpZHRoIC8gMiDov5nkuKrpg6jliIblsLHmmK/lsIbmiYDmnIltZXNo55qE5Y6f54K5cG9zaXRpb27np7vliLDop4bnqpfnmoTlt6bkuIrop5JcbiAgfVxuXG4gIHVwYWR0ZVkoKSB7XG4gICAgdGhpcy55ID0gKHRoaXMuYm91bmRzLnRvcCkgLyB3aW5kb3cuaW5uZXJIZWlnaHRcbiAgICB0aGlzLm1lc2gucG9zaXRpb24ueSA9ICh0aGlzLnNpemVzLmhlaWdodCAvIDIpIC0gKHRoaXMubWVzaC5zY2FsZS55IC8gMikgLSAodGhpcy55ICogdGhpcy5zaXplcy5oZWlnaHQpXG4gICAgLy8g6L+Z5LiqeOaYr+S5i+WJjeWcqGluZGV46YeM6K6+572u55qE6byg5qCH5ouW5Yqo55qE5b2T5YmN55qEeCx555qE6Led56a744CC5omA5Lul77yM5oOz56e75Yqo5Yy56YWN5aW955qE5Zu+54mH77yM6ZyA6KaB5Zyo5pW05Liq5a655Zmo5Yqg5LiK6byg5qCHeCx556e75Yqo55qE6Led56a7XG4gIH1cblxuICB1cGRhdGUoKSB7XG4gICAgaWYgKCF0aGlzLmJvdW5kcykgcmV0dXJuXG4gICAgdGhpcy51cGFkdGVYKClcbiAgICB0aGlzLnVwYWR0ZVkoKVxuXG5cbiAgfVxuXG5cblxuXG59IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiMDgwODliNmU2NjJhMDJiMzBhMmJcIikiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJnbCIsInNjZW5lIiwic2l6ZXMiLCJ0aGlzIiwiZWxlbWVudCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImdlb21ldHJ5IiwiUGxhbmUiLCJjcmVhdGVUZXh0dXJlIiwiY3JlYXRlUHJvZ3JhbSIsImNyZWF0ZU1lc2giLCJpbWFnZSIsImdldEF0dHJpYnV0ZSIsInRleHR1cmUiLCJ3aW5kb3ciLCJURVhUVVJFUyIsInByb2dyYW0iLCJQcm9ncmFtIiwiZnJhZ21lbnQiLCJ2ZXJ0ZXgiLCJ1bmlmb3JtcyIsInVBbHBoYSIsInZhbHVlIiwidE1hcCIsIm1lc2giLCJNZXNoIiwic2V0UGFyZW50IiwiY3JlYXRlQm91bmRzIiwiYm91bmRzIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidXBhZHRlU2NhbGUiLCJ1cGFkdGVYIiwidXBhZHRlWSIsInNob3ciLCJoaWRlIiwib25SZXNpemUiLCJvblRvdWNoRG93biIsIm9uVG91Y2hNb3ZlIiwib25Ub3VjaFVwIiwiaGVpZ2h0IiwiaW5uZXJIZWlnaHQiLCJ3aWR0aCIsImlubmVyV2lkdGgiLCJzY2FsZSIsIngiLCJ5IiwibGVmdCIsInBvc2l0aW9uIiwidG9wIiwidXBkYXRlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9