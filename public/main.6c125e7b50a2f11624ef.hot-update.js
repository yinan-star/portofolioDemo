/*! For license information please see main.6c125e7b50a2f11624ef.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/home/Media.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>n});var i=s("./node_modules/ogl/src/core/Texture.js"),h=s("./node_modules/ogl/src/core/Program.js"),a=s("./node_modules/ogl/src/core/Mesh.js"),o=s("./app/shaders/plane-fragment.glsl"),r=s("./app/shaders/plane-vertex.glsl");const n=class{constructor({element:e,geometry:t,gl:s,index:i,scene:h,sizes:a}){this.element=e,this.geometry=t,this.gl=s,this.scene=h,this.sizes=a,this.index=i,this.createTexture(),this.createProgram(),this.createMesh()}createTexture(){this.texture=new i.Texture(this.gl),console.log(this.element),this.image=new window.Image,this.image.crossOrigin="anonymous",this.image.src=this.element.getAttribute("data-src"),this.image.onload=e=>this.texture.image=this.image}createProgram(){this.program=new h.Program(this.gl,{fragment:o.default,vertex:r.default,uniforms:{tMap:{value:this.texture}}})}createMesh(){this.mesh=new a.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene),this.mesh.scale.x=2,this.mesh.position.x+=this.index*this.mesh.scale.x}createBounds(e){this.bounds=this.element.getBoundingClientRect(),this.upadteScale(e),this.upadteX(),this.upadteY(),console.log(this.bounds)}upadteScale({height:e,width:t}){this.height=this.bounds.height/window.innerHeight,this.width=this.bounds.width/window.innerWidth,this.mesh.scale.x=t*this.width,this.mesh.scale.y=e*this.height,console.log(this.height,this.width)}upadteX(){}upadteY(){}onResize(e){this.createBounds(e)}}}},(function(e){e.h=()=>"c8a4a9f0bb2b651f0f8b"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi42YzEyNWU3YjUwYTJmMTE2MjRlZi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7NFZBTUEsY0FDRUEsV0FBQUEsRUFBWSxRQUFFQyxFQUFPLFNBQUVDLEVBQVEsR0FBRUMsRUFBRSxNQUFFQyxFQUFLLE1BQUVDLEVBQUssTUFBRUMsSUFDakRDLEtBQUtOLFFBQVVBLEVBQ2ZNLEtBQUtMLFNBQVdBLEVBQ2hCSyxLQUFLSixHQUFLQSxFQUNWSSxLQUFLRixNQUFRQSxFQUNiRSxLQUFLRCxNQUFPQSxFQUNaQyxLQUFLSCxNQUFRQSxFQUdiRyxLQUFLQyxnQkFDTEQsS0FBS0UsZ0JBQ0xGLEtBQUtHLFlBQ1AsQ0FDQUYsYUFBQUEsR0FDRUQsS0FBS0ksUUFBVSxJQUFJQyxFQUFBQSxRQUFRTCxLQUFLSixJQUVoQ1UsUUFBUUMsSUFBSVAsS0FBS04sU0FFakJNLEtBQUtRLE1BQVEsSUFBSUMsT0FBT0MsTUFDeEJWLEtBQUtRLE1BQU1HLFlBQWMsWUFFekJYLEtBQUtRLE1BQU1JLElBQU1aLEtBQUtOLFFBQVFtQixhQUFhLFlBQzNDYixLQUFLUSxNQUFNTSxPQUFTQyxHQUFNZixLQUFLSSxRQUFRSSxNQUFRUixLQUFLUSxLQUN0RCxDQUdBTixhQUFBQSxHQUNFRixLQUFLZ0IsUUFBVSxJQUFJQyxFQUFBQSxRQUFRakIsS0FBS0osR0FBSSxDQUNsQ3NCLFNBQVEsVUFDUkMsT0FBTSxVQUNOQyxTQUFVLENBQ1JDLEtBQU0sQ0FBRUMsTUFBT3RCLEtBQUtJLFdBRzFCLENBRUFELFVBQUFBLEdBQ0VILEtBQUt1QixLQUFPLElBQUlDLEVBQUFBLEtBQUt4QixLQUFLSixHQUFJLENBQzVCRCxTQUFVSyxLQUFLTCxTQUNmcUIsUUFBU2hCLEtBQUtnQixVQUdoQmhCLEtBQUt1QixLQUFLRSxVQUFVekIsS0FBS0YsT0FHekJFLEtBQUt1QixLQUFLRyxNQUFNQyxFQUFJLEVBRXBCM0IsS0FBS3VCLEtBQUtLLFNBQVNELEdBQUszQixLQUFLSCxNQUFPRyxLQUFLdUIsS0FBS0csTUFBTUMsQ0FLdEQsQ0FFQUUsWUFBQUEsQ0FBYTlCLEdBRVhDLEtBQUs4QixPQUFTOUIsS0FBS04sUUFBUXFDLHdCQUUzQi9CLEtBQUtnQyxZQUFZakMsR0FDakJDLEtBQUtpQyxVQUNMakMsS0FBS2tDLFVBQ0w1QixRQUFRQyxJQUFJUCxLQUFLOEIsT0FDbkIsQ0FFQUUsV0FBQUEsRUFBWSxPQUFDRyxFQUFNLE1BQUVDLElBQ25CcEMsS0FBS21DLE9BQVFuQyxLQUFNOEIsT0FBT0ssT0FBUTFCLE9BQU80QixZQUN6Q3JDLEtBQUtvQyxNQUFPcEMsS0FBTThCLE9BQU9NLE1BQU8zQixPQUFPNkIsV0FFdkN0QyxLQUFLdUIsS0FBS0csTUFBTUMsRUFBR1MsRUFBT3BDLEtBQUtvQyxNQUMvQnBDLEtBQUt1QixLQUFLRyxNQUFNYSxFQUFHSixFQUFRbkMsS0FBS21DLE9BRWhDN0IsUUFBUUMsSUFBSVAsS0FBS21DLE9BQVFuQyxLQUFLb0MsTUFFaEMsQ0FFQUgsT0FBQUEsR0FFQSxDQUVBQyxPQUFBQSxHQUVBLENBRUFNLFFBQUFBLENBQVN6QyxHQUNQQyxLQUFLNkIsYUFBYTlCLEVBQ3BCLGtCQzVGRjBDLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG9lbWEvLi9hcHAvY29tcG9uZW50cy9DYW52YXMvaG9tZS9NZWRpYS5qcyIsIndlYnBhY2s6Ly9mbG9lbWEvd2VicGFjay9ydW50aW1lL2dldEZ1bGxIYXNoIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIC8v5aSE55CG54Wn54mHXG5pbXBvcnQgeyBNZXNoLCBQcm9ncmFtLCBUZXh0dXJlIH0gZnJvbSAnb2dsJztcblxuaW1wb3J0IGZyYWdtZW50IGZyb20gJ3NoYWRlcnMvcGxhbmUtZnJhZ21lbnQuZ2xzbCc7XG5pbXBvcnQgdmVydGV4IGZyb20gJ3NoYWRlcnMvcGxhbmUtdmVydGV4Lmdsc2wnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKHsgZWxlbWVudCwgZ2VvbWV0cnksIGdsLCBpbmRleCwgc2NlbmUsIHNpemVzIH0pIHtcbiAgICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuICAgIHRoaXMuZ2VvbWV0cnkgPSBnZW9tZXRyeTtcbiAgICB0aGlzLmdsID0gZ2w7XG4gICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xuICAgIHRoaXMuc2l6ZXMgPXNpemVzO1xuICAgIHRoaXMuaW5kZXggPSBpbmRleDtcbiAgICAvLyDkuIrpnaLnmoRlbG1lbnTpg73mmK/pnIDopoHlpI3nlKjnmoTmiYDku6XlnKjov5nph4zliJ3lp4vljJZcblxuICAgIHRoaXMuY3JlYXRlVGV4dHVyZSgpO1xuICAgIHRoaXMuY3JlYXRlUHJvZ3JhbSgpO1xuICAgIHRoaXMuY3JlYXRlTWVzaCgpO1xuICB9XG4gIGNyZWF0ZVRleHR1cmUoKSB7XG4gICAgdGhpcy50ZXh0dXJlID0gbmV3IFRleHR1cmUodGhpcy5nbClcblxuICAgIGNvbnNvbGUubG9nKHRoaXMuZWxlbWVudClcblxuICAgIHRoaXMuaW1hZ2UgPSBuZXcgd2luZG93LkltYWdlKClcbiAgICB0aGlzLmltYWdlLmNyb3NzT3JpZ2luID0gJ2Fub255bW91cydcbiAgICAvLyDlm6DkuLrlm77niYfmmK/ku45wcmVzbWlj5p2l55qE77yM5omA5Lul6KaB5Yy/5ZCNXG4gICAgdGhpcy5pbWFnZS5zcmMgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLXNyYycpXG4gICAgdGhpcy5pbWFnZS5vbmxvYWQgPSBfID0+ICh0aGlzLnRleHR1cmUuaW1hZ2UgPSB0aGlzLmltYWdlKVxuICB9XG5cbiAgLy8g54S25ZCO5bCG6YCJ5aW955qE54Wn54mH5Lyg57uZcHJvZ3JhbeWkhOeQhui0tOWbvlxuICBjcmVhdGVQcm9ncmFtKCkge1xuICAgIHRoaXMucHJvZ3JhbSA9IG5ldyBQcm9ncmFtKHRoaXMuZ2wsIHtcbiAgICAgIGZyYWdtZW50LFxuICAgICAgdmVydGV4LFxuICAgICAgdW5pZm9ybXM6IHtcbiAgICAgICAgdE1hcDogeyB2YWx1ZTogdGhpcy50ZXh0dXJlIH1cbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgY3JlYXRlTWVzaCgpIHtcbiAgICB0aGlzLm1lc2ggPSBuZXcgTWVzaCh0aGlzLmdsLCB7XG4gICAgICBnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcbiAgICAgIHByb2dyYW06IHRoaXMucHJvZ3JhbSxcbiAgICB9KTtcblxuICAgIHRoaXMubWVzaC5zZXRQYXJlbnQodGhpcy5zY2VuZSk7XG4gICAgLy8gbWVzaOaYr3NjZW5l55qE5a2Q5YWD57Sg44CCXG5cbiAgICB0aGlzLm1lc2guc2NhbGUueCA9IDJcblxuICAgIHRoaXMubWVzaC5wb3NpdGlvbi54ICs9IHRoaXMuaW5kZXggKnRoaXMubWVzaC5zY2FsZS54XG4gICAgLy8g6K6p5Zu+54mHc2lkZSBieSBzaWRlXG4gICAgLy8gdGhpcy5nZW9tZXRyeSDlj6/og73ku6PooajmqKHlnovnmoTlh6DkvZXkvZPpg6jliIbvvIzkvYblnKjorrjlpJrlnLrmma/kuIvvvIzkv67mlLnmqKHlnovnmoTkvY3nva7jgIHnvKnmlL7miJbml4vovazlj6/og73pnIDopoHnm7TmjqXmk43kvZzmqKHlnovlr7nosaHmnKzouqvvvIzljbMgdGhpcy5tZXNoXG4gICAgLy8g5bCx5piv6K+057yp5pS+5peL6L2s5pe277yM6LS05Zu+6KaB5ZKMZ2VvbWV0cnnkuIDotbfovazogIzkuI3mmK/lkIToh6rovaxcblxuICB9XG5cbiAgY3JlYXRlQm91bmRzKHNpemVzKXtcbiAgICAvLyDlsIZtZXNo5ZKMZ2FsbGVyeeaJgOiuvuWumueahOWwuuWvuOe7keWumlxuICAgIHRoaXMuYm91bmRzID0gdGhpcy5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXG5cbiAgICB0aGlzLnVwYWR0ZVNjYWxlKHNpemVzKVxuICAgIHRoaXMudXBhZHRlWCgpXG4gICAgdGhpcy51cGFkdGVZKClcbiAgICBjb25zb2xlLmxvZyh0aGlzLmJvdW5kcylcbiAgfVxuXG4gIHVwYWR0ZVNjYWxlKHtoZWlnaHQsIHdpZHRofSl7XG4gICAgdGhpcy5oZWlnaHQgPXRoaXMuIGJvdW5kcy5oZWlnaHQgL3dpbmRvdy5pbm5lckhlaWdodFxuICAgIHRoaXMud2lkdGggPXRoaXMuIGJvdW5kcy53aWR0aCAvd2luZG93LmlubmVyV2lkdGhcblxuICAgIHRoaXMubWVzaC5zY2FsZS54ID13aWR0aCogdGhpcy53aWR0aFxuICAgIHRoaXMubWVzaC5zY2FsZS55ID1oZWlnaHQqIHRoaXMuaGVpZ2h0XG5cbiAgICBjb25zb2xlLmxvZyh0aGlzLmhlaWdodCwgdGhpcy53aWR0aClcblxuICB9XG5cbiAgdXBhZHRlWCgpe1xuXG4gIH1cblxuICB1cGFkdGVZKCl7XG5cbiAgfVxuXG4gIG9uUmVzaXplKHNpemVzKXtcbiAgICB0aGlzLmNyZWF0ZUJvdW5kcyhzaXplcylcbiAgfVxuXG5cbn0iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCJjOGE0YTlmMGJiMmI2NTFmMGY4YlwiKSJdLCJuYW1lcyI6WyJjb25zdHJ1Y3RvciIsImVsZW1lbnQiLCJnZW9tZXRyeSIsImdsIiwiaW5kZXgiLCJzY2VuZSIsInNpemVzIiwidGhpcyIsImNyZWF0ZVRleHR1cmUiLCJjcmVhdGVQcm9ncmFtIiwiY3JlYXRlTWVzaCIsInRleHR1cmUiLCJUZXh0dXJlIiwiY29uc29sZSIsImxvZyIsImltYWdlIiwid2luZG93IiwiSW1hZ2UiLCJjcm9zc09yaWdpbiIsInNyYyIsImdldEF0dHJpYnV0ZSIsIm9ubG9hZCIsIl8iLCJwcm9ncmFtIiwiUHJvZ3JhbSIsImZyYWdtZW50IiwidmVydGV4IiwidW5pZm9ybXMiLCJ0TWFwIiwidmFsdWUiLCJtZXNoIiwiTWVzaCIsInNldFBhcmVudCIsInNjYWxlIiwieCIsInBvc2l0aW9uIiwiY3JlYXRlQm91bmRzIiwiYm91bmRzIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidXBhZHRlU2NhbGUiLCJ1cGFkdGVYIiwidXBhZHRlWSIsImhlaWdodCIsIndpZHRoIiwiaW5uZXJIZWlnaHQiLCJpbm5lcldpZHRoIiwieSIsIm9uUmVzaXplIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9