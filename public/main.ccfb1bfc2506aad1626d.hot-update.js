/*! For license information please see main.ccfb1bfc2506aad1626d.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/home/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>a});var i=s("./node_modules/ogl/src/core/Transform.js"),r=s("./node_modules/ogl/src/extras/Plane.js"),l=s("./node_modules/gsap/index.js"),o=s("./node_modules/lodash/map.js"),n=s.n(o),h=s("./app/components/Canvas/home/Media.js");const a=class{constructor({gl:e,scene:t,sizes:s}){this.gl=e,this.sizes=s,this.group=new i.Transform,this.galleryElement=document.querySelector(".home__gallery"),this.mediasElements=document.querySelectorAll(".home__gallery__media__image"),this.createGeometry(),this.createGallery(),this.group.setParent(t),this.x={current:0,target:0,lerp:.1},this.y={current:0,target:0,lerp:.1},this.scrollCurrent={x:0,y:0},this.scroll={x:0,y:0}}createGeometry(){this.geometry=new r.Plane(this.gl)}createGallery(){this.medias=n()(this.mediasElements,((e,t)=>new h.default({element:e,geometry:this.geometry,gl:this.gl,index:t,scene:this.group,sizes:this.sizes})))}onResize(e){n()(this.medias,(t=>t.onResize(e))),this.galleryBounds=this.galleryElement.getBoundingClientRect(),this.sizes=e.sizes}onTouchDown({x:e,y:t}){this.scrollCurrent.x=this.scroll.x,this.scrollCurrent.y=this.scroll.y}onTouchMove({x:e,y:t}){const s=e.start-e.end,i=t.start-t.end;this.x.target=this.scrollCurrent.x-s,this.y.target=this.scrollCurrent.y-i}onTouchUp({x:e,y:t}){}update(){this.galleryBounds&&(this.x.current=l.default.utils.interpolate(this.x.current,this.x.target,this.x.lerp),this.y.current=l.default.utils.interpolate(this.y.current,this.y.target,this.y.lerp),this.scroll.x<this.x.current?this.x.direction="left":this.scroll.x>this.x.current&&(this.x.direction="right"),this.galleryWidth=this.galleryBounds.width/window.innerWidth,console.log(this.galleryWidth),this.scroll.x=this.x.current,this.scroll.y=this.y.current,n()(this.medias,((e,t)=>{if(0===t){e.mesh.position.x+e.mesh.scale.x/2<-this.sizes.width/2&&console.log("out of the screen",e.mesh.position.x)}e.update(this.scroll)})))}}}},(function(e){e.h=()=>"c7ac7ae1b6e012c41367"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,