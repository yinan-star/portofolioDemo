/*! For license information please see main.b56bc38a84842296f4f3.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/about/Gallery.js":(s,t,e)=>{e.r(t),e.d(t,{default:()=>n});var i=e("./node_modules/ogl/src/core/Transform.js"),r=e("./node_modules/gsap/index.js"),o=e("./node_modules/lodash/map.js"),l=e.n(o),h=e("./app/components/Canvas/about/Media.js");class n{constructor({element:s,geometry:t,gl:e,index:r,scene:o,sizes:l}){this.element=s,this.elementWrapper=s.querySelector(".about__gallery__wrapper"),this.geometry=t,this.gl=e,this.index=r,this.scene=o,this.sizes=l,this.group=new i.Transform,this.scroll={current:0,target:0,last:0,lerp:.1,velocity:1},this.createMedias(),this.group.setParent(this.scene)}createMedias(){this.mediaElements=this.element.querySelectorAll(".about__gallery__media"),this.medias=l()(this.mediaElements,((s,t)=>new h.default({element:s,geometry:this.geometry,gl:this.gl,index:t,scene:this.group,sizes:this.sizes})))}show(){l()(this.medias,(s=>s.show()))}hide(){l()(this.medias,(s=>s.hide()))}onResize(s){this.bounds=this.elementWrapper.getBoundingClientRect(),this.sizes=s.sizes,this.width=this.bounds.width/window.innerWidth*this.sizes.width,this.scroll.current=this.scroll.target=0,l()(this.medias,(t=>t.onResize(s,this.scroll.current)))}onTouchDown({x:s,y:t}){this.scroll.start=this.scroll.current}onTouchMove({x:s,y:t}){const e=s.start-s.end;this.scroll.target=this.scroll.start-e}onTouchUp({x:s,y:t}){}update(s){this.bounds&&(this.scroll.current<this.scroll.target?(this.direction="right",this.scroll.velocity=-1):this.scroll.current>this.scroll.target&&(this.direction="left",this.scroll.velocity=1),this.scroll.target-=this.scroll.velocity+10*s,this.scroll.current=r.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),l()(this.medias,((s,t)=>{const e=s.mesh.scale.x/2+.25;if("left"===this.direction){s.mesh.position.x+e<-this.sizes.width/2&&(s.extra+=this.width)}else if("right"===this.direction){s.mesh.position.x-e>this.sizes.width/2&&(s.extra-=this.width)}s.update(this.scroll.current)})),this.group.position.y=s*this.sizes.height)}destroy(){this.scene.removeChild(this.group)}}}},(function(s){s.h=()=>"62034e4f1a2ed363b6bd"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,