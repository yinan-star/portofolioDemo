/*! For license information please see main.56d012cc9279dd656cd8.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Transition.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>h});var i=t("./node_modules/gsap/index.js"),o=t("./node_modules/ogl/src/extras/Plane.js"),a=t("./node_modules/ogl/src/core/Program.js"),n=t("./node_modules/ogl/src/core/Mesh.js"),l=t("./app/shaders/plane-fragment.glsl"),r=t("./app/shaders/plane-vertex.glsl");const h=class{constructor({collections:e,gl:s,scene:t,sizes:i,url:a}){this.collections=e,this.gl=s,this.scene=t,this.sizes=i,this.url=a,this.geometry=new o.Plane(this.gl)}createProgram(e){this.program=new a.Program(this.gl,{fragment:l.default,vertex:r.default,uniforms:{uAlpha:{value:1},tMap:{value:e}}})}createMesh(e){this.mesh=new n.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.scale.x=e.scale.x,this.mesh.scale.y=e.scale.y,this.mesh.scale.z=e.scale.z,this.mesh.position.x=e.position.x,this.mesh.position.y=e.position.y,this.mesh.position.z=e.position.z+.01,this.mesh.setParent(this.scene)}setElement(e){if(console.log(e.id),"collections"===e.id){const{index:s,medias:t}=e,i=t[s];this.createProgram(i.texture),this.createMesh(i.mesh),this.transition="detail"}else this.createProgram(e.texture),this.createMesh(e.mesh),this.transition="collections"}animate(e,s){if("detail"===this.transition){const t=i.default.timeline({delay:.5,onComplete:s});t.to(this.mesh.scale,{duration:1.5,ease:"expo.inOut",x:e.scale.x,y:e.scale.y,z:e.scale.z},0),t.to(this.mesh.position,{duration:1.5,ease:"expo.inOut",x:e.position.x,y:e.position.y,z:e.position.z},0)}}}}},(function(e){e.h=()=>"82bb132f507985f9b442"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi41NmQwMTJjYzkyNzlkZDY1NmNkOC5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7Z1lBT0EsY0FDRUEsV0FBQUEsRUFBWSxZQUFFQyxFQUFXLEdBQUVDLEVBQUUsTUFBRUMsRUFBSyxNQUFFQyxFQUFLLElBQUVDLElBQzNDQyxLQUFLTCxZQUFjQSxFQUNuQkssS0FBS0osR0FBS0EsRUFDVkksS0FBS0gsTUFBUUEsRUFDYkcsS0FBS0YsTUFBUUEsRUFDYkUsS0FBS0QsSUFBTUEsRUFFWEMsS0FBS0MsU0FBVyxJQUFJQyxFQUFBQSxNQUFNRixLQUFLSixHQUdqQyxDQUdBTyxhQUFBQSxDQUFjQyxHQUNaSixLQUFLSyxRQUFVLElBQUlDLEVBQUFBLFFBQVFOLEtBQUtKLEdBQUksQ0FDbENXLFNBQVEsVUFDUkMsT0FBTSxVQUNOQyxTQUFVLENBQ1JDLE9BQVEsQ0FBRUMsTUFBTyxHQUNqQkMsS0FBTSxDQUFFRCxNQUFPUCxLQUdyQixDQUVBUyxVQUFBQSxDQUFXQyxHQUNUZCxLQUFLYyxLQUFPLElBQUlDLEVBQUFBLEtBQUtmLEtBQUtKLEdBQUksQ0FDNUJLLFNBQVVELEtBQUtDLFNBQ2ZJLFFBQVNMLEtBQUtLLFVBR2hCTCxLQUFLYyxLQUFLRSxNQUFNQyxFQUFJSCxFQUFLRSxNQUFNQyxFQUMvQmpCLEtBQUtjLEtBQUtFLE1BQU1FLEVBQUlKLEVBQUtFLE1BQU1FLEVBQy9CbEIsS0FBS2MsS0FBS0UsTUFBTUcsRUFBSUwsRUFBS0UsTUFBTUcsRUFFL0JuQixLQUFLYyxLQUFLTSxTQUFTSCxFQUFJSCxFQUFLTSxTQUFTSCxFQUNyQ2pCLEtBQUtjLEtBQUtNLFNBQVNGLEVBQUlKLEVBQUtNLFNBQVNGLEVBQ3JDbEIsS0FBS2MsS0FBS00sU0FBU0QsRUFBSUwsRUFBS00sU0FBU0QsRUFBSSxJQUd6Q25CLEtBQUtjLEtBQUtPLFVBQVVyQixLQUFLSCxNQUczQixDQUdBeUIsVUFBQUEsQ0FBV0MsR0FHVCxHQUZBQyxRQUFRQyxJQUFJRixFQUFRRyxJQUVELGdCQUFmSCxFQUFRRyxHQUFzQixDQUNoQyxNQUFNLE1BQUVDLEVBQUssT0FBRUMsR0FBV0wsRUFDcEJNLEVBQVFELEVBQU9ELEdBRXJCM0IsS0FBS0csY0FBYzBCLEVBQU16QixTQUN6QkosS0FBS2EsV0FBV2dCLEVBQU1mLE1BRXRCZCxLQUFLOEIsV0FBWSxRQUNuQixNQUNFOUIsS0FBS0csY0FBY29CLEVBQVFuQixTQUMzQkosS0FBS2EsV0FBV1UsRUFBUVQsTUFFeEJkLEtBQUs4QixXQUFZLGFBSXJCLENBRUFDLE9BQUFBLENBQVFSLEVBQVNTLEdBRWYsR0FBd0IsV0FBcEJoQyxLQUFLOEIsV0FBeUIsQ0FDaEMsTUFBTUcsRUFBV0MsRUFBQUEsUUFBS0QsU0FBUyxDQUM3QkUsTUFBTyxHQUNQSCxlQUVGQyxFQUFTRyxHQUFHcEMsS0FBS2MsS0FBS0UsTUFBTyxDQUMzQnFCLFNBQVUsSUFDVkMsS0FBTSxhQUNOckIsRUFBR00sRUFBUVAsTUFBTUMsRUFDakJDLEVBQUdLLEVBQVFQLE1BQU1FLEVBQ2pCQyxFQUFHSSxFQUFRUCxNQUFNRyxHQUVoQixHQUNIYyxFQUFTRyxHQUFHcEMsS0FBS2MsS0FBS00sU0FBVSxDQUM5QmlCLFNBQVUsSUFDVkMsS0FBTSxhQUNOckIsRUFBR00sRUFBUUgsU0FBU0gsRUFDcEJDLEVBQUdLLEVBQVFILFNBQVNGLEVBQ3BCQyxFQUFHSSxFQUFRSCxTQUFTRCxHQUNuQixFQUNMLENBRUYsa0JDbEdGb0IsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb2VtYS8uL2FwcC9jb21wb25lbnRzL0NhbnZhcy9UcmFuc2l0aW9uLmpzIiwid2VicGFjazovL2Zsb2VtYS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gLy/lpITnkIbnhafniYdcbmltcG9ydCBHU0FQIGZyb20gJ2dzYXAnXG5pbXBvcnQgeyBNZXNoLCBQbGFuZSwgUHJvZ3JhbSwgVGV4dHVyZSB9IGZyb20gJ29nbCc7XG5cbmltcG9ydCBmcmFnbWVudCBmcm9tICdzaGFkZXJzL3BsYW5lLWZyYWdtZW50Lmdsc2wnO1xuaW1wb3J0IHZlcnRleCBmcm9tICdzaGFkZXJzL3BsYW5lLXZlcnRleC5nbHNsJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3Mge1xuICBjb25zdHJ1Y3Rvcih7IGNvbGxlY3Rpb25zLCBnbCwgc2NlbmUsIHNpemVzLCB1cmwgfSkge1xuICAgIHRoaXMuY29sbGVjdGlvbnMgPSBjb2xsZWN0aW9ucztcbiAgICB0aGlzLmdsID0gZ2w7XG4gICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xuICAgIHRoaXMuc2l6ZXMgPSBzaXplcztcbiAgICB0aGlzLnVybCA9IHVybDtcblxuICAgIHRoaXMuZ2VvbWV0cnkgPSBuZXcgUGxhbmUodGhpcy5nbClcbiAgICAvLyDkuIrpnaLnmoRlbG1lbnTpg73mmK/pnIDopoHlpI3nlKjnmoTmiYDku6XlnKjov5nph4zliJ3lp4vljJZcblxuICB9XG5cbiAgLy8g54S25ZCO5bCG6YCJ5aW955qE54Wn54mH5Lyg57uZcHJvZ3JhbeWkhOeQhui0tOWbvlxuICBjcmVhdGVQcm9ncmFtKHRleHR1cmUpIHtcbiAgICB0aGlzLnByb2dyYW0gPSBuZXcgUHJvZ3JhbSh0aGlzLmdsLCB7XG4gICAgICBmcmFnbWVudCxcbiAgICAgIHZlcnRleCxcbiAgICAgIHVuaWZvcm1zOiB7XG4gICAgICAgIHVBbHBoYTogeyB2YWx1ZTogMSB9LFxuICAgICAgICB0TWFwOiB7IHZhbHVlOiB0ZXh0dXJlIH1cbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgY3JlYXRlTWVzaChtZXNoKSB7XG4gICAgdGhpcy5tZXNoID0gbmV3IE1lc2godGhpcy5nbCwge1xuICAgICAgZ2VvbWV0cnk6IHRoaXMuZ2VvbWV0cnksXG4gICAgICBwcm9ncmFtOiB0aGlzLnByb2dyYW0sXG4gICAgfSk7XG5cbiAgICB0aGlzLm1lc2guc2NhbGUueCA9IG1lc2guc2NhbGUueDtcbiAgICB0aGlzLm1lc2guc2NhbGUueSA9IG1lc2guc2NhbGUueTtcbiAgICB0aGlzLm1lc2guc2NhbGUueiA9IG1lc2guc2NhbGUuejtcblxuICAgIHRoaXMubWVzaC5wb3NpdGlvbi54ID0gbWVzaC5wb3NpdGlvbi54O1xuICAgIHRoaXMubWVzaC5wb3NpdGlvbi55ID0gbWVzaC5wb3NpdGlvbi55O1xuICAgIHRoaXMubWVzaC5wb3NpdGlvbi56ID0gbWVzaC5wb3NpdGlvbi56ICsgMC4wMTtcblxuXG4gICAgdGhpcy5tZXNoLnNldFBhcmVudCh0aGlzLnNjZW5lKTtcbiAgICAvLyBtZXNo5pivc2NlbmXnmoTlrZDlhYPntKDjgIJcblxuICB9XG5cbiAgLy8gRWxlbWVudFxuICBzZXRFbGVtZW50KGVsZW1lbnQpIHtcbiAgICBjb25zb2xlLmxvZyhlbGVtZW50LmlkKVxuXG4gICAgaWYgKGVsZW1lbnQuaWQgPT09ICdjb2xsZWN0aW9ucycpIHtcbiAgICAgIGNvbnN0IHsgaW5kZXgsIG1lZGlhcyB9ID0gZWxlbWVudFxuICAgICAgY29uc3QgbWVkaWEgPSBtZWRpYXNbaW5kZXhdXG5cbiAgICAgIHRoaXMuY3JlYXRlUHJvZ3JhbShtZWRpYS50ZXh0dXJlKVxuICAgICAgdGhpcy5jcmVhdGVNZXNoKG1lZGlhLm1lc2gpXG5cbiAgICAgIHRoaXMudHJhbnNpdGlvbiA9J2RldGFpbCdcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jcmVhdGVQcm9ncmFtKGVsZW1lbnQudGV4dHVyZSlcbiAgICAgIHRoaXMuY3JlYXRlTWVzaChlbGVtZW50Lm1lc2gpXG5cbiAgICAgIHRoaXMudHJhbnNpdGlvbiA9J2NvbGxlY3Rpb25zJ1xuICAgIH1cblxuXG4gIH1cbiAgLy8gQW5pbWF0aW9ucy5cbiAgYW5pbWF0ZShlbGVtZW50LCBvbkNvbXBsZXRlKSB7XG4gICAgLy8g6K6pZmFraW5nIGltYWdl5Yqo6LW35p2lbWF0Y2jljp/mnInnmoRpbWFnZSzkvYbmmK/ov5nkuKrov4fnqIvpnIDopoHnrYnlh6Dnp5Is5Zug5Li65ZyoY29sbGVjdGlvbnPnmoRpbmRleOmHjOiuvue9ruS6hmJvdW5kc+mcgOimgeetieWHoOenki7ov5nkuKrnrYnlh6Dnp5LlnKhDYW52YXPnmoRpbmRleOaWh+S7tumHjOiuvue9rkdTQVAuZGVsYXllZENhbGxcbiAgICBpZiAodGhpcy50cmFuc2l0aW9uID09PSAnZGV0YWlsJykge1xuICAgICAgY29uc3QgdGltZWxpbmUgPSBHU0FQLnRpbWVsaW5lKHtcbiAgICAgICAgZGVsYXk6IDAuNSxcbiAgICAgICAgb25Db21wbGV0ZVxuICAgICAgfSlcbiAgICAgIHRpbWVsaW5lLnRvKHRoaXMubWVzaC5zY2FsZSwge1xuICAgICAgICBkdXJhdGlvbjogMS41LFxuICAgICAgICBlYXNlOiAnZXhwby5pbk91dCcsXG4gICAgICAgIHg6IGVsZW1lbnQuc2NhbGUueCxcbiAgICAgICAgeTogZWxlbWVudC5zY2FsZS55LFxuICAgICAgICB6OiBlbGVtZW50LnNjYWxlLnosXG5cbiAgICAgIH0sIDApXG4gICAgICB0aW1lbGluZS50byh0aGlzLm1lc2gucG9zaXRpb24sIHtcbiAgICAgICAgZHVyYXRpb246IDEuNSxcbiAgICAgICAgZWFzZTogJ2V4cG8uaW5PdXQnLFxuICAgICAgICB4OiBlbGVtZW50LnBvc2l0aW9uLngsXG4gICAgICAgIHk6IGVsZW1lbnQucG9zaXRpb24ueSxcbiAgICAgICAgejogZWxlbWVudC5wb3NpdGlvbi56LFxuICAgICAgfSwgMClcbiAgICB9XG5cbiAgfVxuXG5cblxuXG5cbn0iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCI4MmJiMTMyZjUwNzk4NWY5YjQ0MlwiKSJdLCJuYW1lcyI6WyJjb25zdHJ1Y3RvciIsImNvbGxlY3Rpb25zIiwiZ2wiLCJzY2VuZSIsInNpemVzIiwidXJsIiwidGhpcyIsImdlb21ldHJ5IiwiUGxhbmUiLCJjcmVhdGVQcm9ncmFtIiwidGV4dHVyZSIsInByb2dyYW0iLCJQcm9ncmFtIiwiZnJhZ21lbnQiLCJ2ZXJ0ZXgiLCJ1bmlmb3JtcyIsInVBbHBoYSIsInZhbHVlIiwidE1hcCIsImNyZWF0ZU1lc2giLCJtZXNoIiwiTWVzaCIsInNjYWxlIiwieCIsInkiLCJ6IiwicG9zaXRpb24iLCJzZXRQYXJlbnQiLCJzZXRFbGVtZW50IiwiZWxlbWVudCIsImNvbnNvbGUiLCJsb2ciLCJpZCIsImluZGV4IiwibWVkaWFzIiwibWVkaWEiLCJ0cmFuc2l0aW9uIiwiYW5pbWF0ZSIsIm9uQ29tcGxldGUiLCJ0aW1lbGluZSIsIkdTQVAiLCJkZWxheSIsInRvIiwiZHVyYXRpb24iLCJlYXNlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9