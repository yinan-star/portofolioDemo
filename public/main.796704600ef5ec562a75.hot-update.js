/*! For license information please see main.796704600ef5ec562a75.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Media.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>n});var i=t("./node_modules/ogl/src/core/Texture.js"),h=t("./node_modules/ogl/src/core/Program.js"),a=t("./node_modules/ogl/src/core/Mesh.js"),r=t("./app/shaders/plane-fragment.glsl"),o=t("./app/shaders/plane-vertex.glsl");class n{constructor({element:e,geometry:s,gl:t,index:i,scene:h,sizes:a}){this.element=e,this.geometry=s,this.gl=t,this.index=i,this.scene=h,this.sizes=a,this.createTexture(),this.createProgram(),this.createMesh()}createTexture(){this.texture=new i.Texture(this.gl),this.image=new window.Image,this.image.crossOrigin="anonymous",this.image.src=this.element.getAttribute("data-src"),this.image.onload=e=>this.texture.image=this.image}createProgram(){this.program=new h.Program(this.gl,{fragment:r.default,vertex:o.default,uniforms:{tMap:{value:this.texture}}})}createMesh(){this.mesh=new a.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene),this.mesh.scale.x=2}createBounds(e){this.bounds=this.element.getBoundingClientRect(),this.sizes=e,this.updateScale(),this.updateX(),this.updateY(),console.log(this.bounds)}updateScale(e,s){this.height=this.bounds.height/window.innerHeight,this.width=this.bounds.width/window.innerWidth,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height,this.mesh.position.x=-s/2+this.mesh.scale.x/2,this.mesh.position.y=e/2-this.mesh.scale.y/2,console.log(this.height,this.width)}updateX(){}updateY(){}onResize(e){this.createBounds(e)}}}},(function(e){e.h=()=>"cd088bc467b8962c83e3"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi43OTY3MDQ2MDBlZjVlYzU2MmE3NS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7dVZBTWUsTUFBTUEsRUFDbkJDLFdBQUFBLEVBQVksUUFBRUMsRUFBTyxTQUFFQyxFQUFRLEdBQUVDLEVBQUUsTUFBRUMsRUFBSyxNQUFFQyxFQUFLLE1BQUVDLElBQ2pEQyxLQUFLTixRQUFVQSxFQUNmTSxLQUFLTCxTQUFXQSxFQUNoQkssS0FBS0osR0FBS0EsRUFDVkksS0FBS0gsTUFBUUEsRUFDYkcsS0FBS0YsTUFBUUEsRUFDYkUsS0FBS0QsTUFBUUEsRUFHYkMsS0FBS0MsZ0JBQ0xELEtBQUtFLGdCQUNMRixLQUFLRyxZQUNQLENBQ0FGLGFBQUFBLEdBQ0VELEtBQUtJLFFBQVUsSUFBSUMsRUFBQUEsUUFBUUwsS0FBS0osSUFFaENJLEtBQUtNLE1BQVEsSUFBSUMsT0FBT0MsTUFDeEJSLEtBQUtNLE1BQU1HLFlBQWMsWUFDekJULEtBQUtNLE1BQU1JLElBQU1WLEtBQUtOLFFBQVFpQixhQUFhLFlBQzNDWCxLQUFLTSxNQUFNTSxPQUFTQyxHQUFNYixLQUFLSSxRQUFRRSxNQUFRTixLQUFLTSxLQUN0RCxDQUVBSixhQUFBQSxHQUNFRixLQUFLYyxRQUFVLElBQUlDLEVBQUFBLFFBQVFmLEtBQUtKLEdBQUksQ0FDbENvQixTQUFRLFVBQ1JDLE9BQU0sVUFDTkMsU0FBVSxDQUNSQyxLQUFNLENBQUVDLE1BQU9wQixLQUFLSSxXQUcxQixDQUVBRCxVQUFBQSxHQUNFSCxLQUFLcUIsS0FBTyxJQUFJQyxFQUFBQSxLQUFLdEIsS0FBS0osR0FBSSxDQUM1QkQsU0FBVUssS0FBS0wsU0FDZm1CLFFBQVNkLEtBQUtjLFVBR2hCZCxLQUFLcUIsS0FBS0UsVUFBVXZCLEtBQUtGLE9BR3pCRSxLQUFLcUIsS0FBS0csTUFBTUMsRUFBSSxDQUN0QixDQUVBQyxZQUFBQSxDQUFhM0IsR0FDWEMsS0FBSzJCLE9BQVMzQixLQUFLTixRQUFRa0Msd0JBQzNCNUIsS0FBS0QsTUFBUUEsRUFFYkMsS0FBSzZCLGNBQ0w3QixLQUFLOEIsVUFDTDlCLEtBQUsrQixVQUVMQyxRQUFRQyxJQUFJakMsS0FBSzJCLE9BQ25CLENBRUFFLFdBQUFBLENBQVlLLEVBQVFDLEdBQ2xCbkMsS0FBS2tDLE9BQVNsQyxLQUFLMkIsT0FBT08sT0FBUzNCLE9BQU82QixZQUMxQ3BDLEtBQUttQyxNQUFRbkMsS0FBSzJCLE9BQU9RLE1BQVE1QixPQUFPOEIsV0FFeENyQyxLQUFLcUIsS0FBS0csTUFBTUMsRUFBSXpCLEtBQUtELE1BQU1vQyxNQUFRbkMsS0FBS21DLE1BQzVDbkMsS0FBS3FCLEtBQUtHLE1BQU1jLEVBQUl0QyxLQUFLRCxNQUFNbUMsT0FBU2xDLEtBQUtrQyxPQUU3Q2xDLEtBQUtxQixLQUFLa0IsU0FBU2QsR0FBTVUsRUFBUSxFQUFNbkMsS0FBS3FCLEtBQUtHLE1BQU1DLEVBQUUsRUFDekR6QixLQUFLcUIsS0FBS2tCLFNBQVNELEVBQUtKLEVBQVMsRUFBT2xDLEtBQUtxQixLQUFLRyxNQUFNYyxFQUFFLEVBRTFETixRQUFRQyxJQUFJakMsS0FBS2tDLE9BQVFsQyxLQUFLbUMsTUFDaEMsQ0FFQUwsT0FBQUEsR0FFQSxDQUVBQyxPQUFBQSxHQUVBLENBRUFTLFFBQUFBLENBQVN6QyxHQUNQQyxLQUFLMEIsYUFBYTNCLEVBQ3BCLGtCQ3JGRjBDLEVBQW9CQyxFQUFJLElBQU0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mbG9lbWEvLi9hcHAvY29tcG9uZW50cy9DYW52YXMvTWVkaWEuanMiLCJ3ZWJwYWNrOi8vZmxvZW1hL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyIvL+WkhOeQhueFp+eJh1xuaW1wb3J0IHsgTWVzaCwgUHJvZ3JhbSwgVGV4dHVyZSB9IGZyb20gJ29nbCc7XG5cbmltcG9ydCBmcmFnbWVudCBmcm9tICdzaGFkZXJzL3BsYW5lLWZyYWdtZW50Lmdsc2wnO1xuaW1wb3J0IHZlcnRleCBmcm9tICdzaGFkZXJzL3BsYW5lLXZlcnRleC5nbHNsJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWVkaWEge1xuICBjb25zdHJ1Y3Rvcih7IGVsZW1lbnQsIGdlb21ldHJ5LCBnbCwgaW5kZXgsIHNjZW5lLCBzaXplcyB9KSB7XG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICB0aGlzLmdlb21ldHJ5ID0gZ2VvbWV0cnk7XG4gICAgdGhpcy5nbCA9IGdsO1xuICAgIHRoaXMuaW5kZXggPSBpbmRleDtcbiAgICB0aGlzLnNjZW5lID0gc2NlbmU7XG4gICAgdGhpcy5zaXplcyA9IHNpemVzO1xuICAgIC8vIOS4iumdoueahGVsbWVudOmDveaYr+mcgOimgeWkjeeUqOeahOaJgOS7peWcqOi/memHjOWIneWni+WMllxuXG4gICAgdGhpcy5jcmVhdGVUZXh0dXJlKCk7XG4gICAgdGhpcy5jcmVhdGVQcm9ncmFtKCk7XG4gICAgdGhpcy5jcmVhdGVNZXNoKCk7XG4gIH1cbiAgY3JlYXRlVGV4dHVyZSgpIHtcbiAgICB0aGlzLnRleHR1cmUgPSBuZXcgVGV4dHVyZSh0aGlzLmdsKVxuXG4gICAgdGhpcy5pbWFnZSA9IG5ldyB3aW5kb3cuSW1hZ2UoKVxuICAgIHRoaXMuaW1hZ2UuY3Jvc3NPcmlnaW4gPSAnYW5vbnltb3VzJ1xuICAgIHRoaXMuaW1hZ2Uuc3JjID0gdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1zcmMnKVxuICAgIHRoaXMuaW1hZ2Uub25sb2FkID0gXyA9PiAodGhpcy50ZXh0dXJlLmltYWdlID0gdGhpcy5pbWFnZSlcbiAgfVxuICAvLyDnhLblkI7lsIbpgInlpb3nmoTnhafniYfkvKDnu5lwcm9ncmFt5aSE55CG6LS05Zu+XG4gIGNyZWF0ZVByb2dyYW0oKSB7XG4gICAgdGhpcy5wcm9ncmFtID0gbmV3IFByb2dyYW0odGhpcy5nbCwge1xuICAgICAgZnJhZ21lbnQsXG4gICAgICB2ZXJ0ZXgsXG4gICAgICB1bmlmb3Jtczoge1xuICAgICAgICB0TWFwOiB7IHZhbHVlOiB0aGlzLnRleHR1cmUgfVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBjcmVhdGVNZXNoKCkge1xuICAgIHRoaXMubWVzaCA9IG5ldyBNZXNoKHRoaXMuZ2wsIHtcbiAgICAgIGdlb21ldHJ5OiB0aGlzLmdlb21ldHJ5LFxuICAgICAgcHJvZ3JhbTogdGhpcy5wcm9ncmFtLFxuICAgIH0pO1xuXG4gICAgdGhpcy5tZXNoLnNldFBhcmVudCh0aGlzLnNjZW5lKTtcbiAgICAvLyBtZXNo5pivc2NlbmXnmoTlrZDlhYPntKDjgIJcblxuICAgIHRoaXMubWVzaC5zY2FsZS54ID0gMlxuICB9XG5cbiAgY3JlYXRlQm91bmRzKHNpemVzKSB7XG4gICAgdGhpcy5ib3VuZHMgPSB0aGlzLmVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgICB0aGlzLnNpemVzID0gc2l6ZXM7XG5cbiAgICB0aGlzLnVwZGF0ZVNjYWxlKCk7XG4gICAgdGhpcy51cGRhdGVYKCk7XG4gICAgdGhpcy51cGRhdGVZKCk7XG5cbiAgICBjb25zb2xlLmxvZyh0aGlzLmJvdW5kcyk7XG4gIH1cblxuICB1cGRhdGVTY2FsZShoZWlnaHQsIHdpZHRoKSB7XG4gICAgdGhpcy5oZWlnaHQgPSB0aGlzLmJvdW5kcy5oZWlnaHQgLyB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgdGhpcy53aWR0aCA9IHRoaXMuYm91bmRzLndpZHRoIC8gd2luZG93LmlubmVyV2lkdGg7XG5cbiAgICB0aGlzLm1lc2guc2NhbGUueCA9IHRoaXMuc2l6ZXMud2lkdGggKiB0aGlzLndpZHRoO1xuICAgIHRoaXMubWVzaC5zY2FsZS55ID0gdGhpcy5zaXplcy5oZWlnaHQgKiB0aGlzLmhlaWdodDtcbi8vIOWboOS4uuWbvueJh+WOn+eCueenu+WIsOinhueql+W3puS4iuinklxuICAgIHRoaXMubWVzaC5wb3NpdGlvbi54ID0gKC13aWR0aCAvIDIgKSsoIHRoaXMubWVzaC5zY2FsZS54LzIpXG4gICAgdGhpcy5tZXNoLnBvc2l0aW9uLnkgPSAoaGVpZ2h0IC8gMikgLSAoIHRoaXMubWVzaC5zY2FsZS55LzIpXG5cbiAgICBjb25zb2xlLmxvZyh0aGlzLmhlaWdodCwgdGhpcy53aWR0aClcbiAgfVxuXG4gIHVwZGF0ZVgoKSB7XG5cbiAgfVxuXG4gIHVwZGF0ZVkoKSB7XG5cbiAgfVxuXG4gIG9uUmVzaXplKHNpemVzKSB7XG4gICAgdGhpcy5jcmVhdGVCb3VuZHMoc2l6ZXMpXG4gIH1cbn0iLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCJjZDA4OGJjNDY3Yjg5NjJjODNlM1wiKSJdLCJuYW1lcyI6WyJNZWRpYSIsImNvbnN0cnVjdG9yIiwiZWxlbWVudCIsImdlb21ldHJ5IiwiZ2wiLCJpbmRleCIsInNjZW5lIiwic2l6ZXMiLCJ0aGlzIiwiY3JlYXRlVGV4dHVyZSIsImNyZWF0ZVByb2dyYW0iLCJjcmVhdGVNZXNoIiwidGV4dHVyZSIsIlRleHR1cmUiLCJpbWFnZSIsIndpbmRvdyIsIkltYWdlIiwiY3Jvc3NPcmlnaW4iLCJzcmMiLCJnZXRBdHRyaWJ1dGUiLCJvbmxvYWQiLCJfIiwicHJvZ3JhbSIsIlByb2dyYW0iLCJmcmFnbWVudCIsInZlcnRleCIsInVuaWZvcm1zIiwidE1hcCIsInZhbHVlIiwibWVzaCIsIk1lc2giLCJzZXRQYXJlbnQiLCJzY2FsZSIsIngiLCJjcmVhdGVCb3VuZHMiLCJib3VuZHMiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ1cGRhdGVTY2FsZSIsInVwZGF0ZVgiLCJ1cGRhdGVZIiwiY29uc29sZSIsImxvZyIsImhlaWdodCIsIndpZHRoIiwiaW5uZXJIZWlnaHQiLCJpbm5lcldpZHRoIiwieSIsInBvc2l0aW9uIiwib25SZXNpemUiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=