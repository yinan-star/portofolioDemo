/*! For license information please see main.b79e7acc6a93f753daad.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Transition.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>l});var o=t("./node_modules/gsap/index.js"),i=t("./node_modules/ogl/src/extras/Plane.js"),a=t("./node_modules/ogl/src/core/Program.js"),n=t("./node_modules/ogl/src/core/Mesh.js"),r=t("./app/shaders/plane-fragment.glsl"),h=t("./app/shaders/plane-vertex.glsl");const l=class{constructor({collections:e,gl:s,scene:t,sizes:o,url:a}){this.collections=e,this.gl=s,this.scene=t,this.sizes=o,this.url=a,this.geometry=new i.Plane(this.gl)}createProgram(e){this.program=new a.Program(this.gl,{fragment:r.default,vertex:h.default,uniforms:{uAlpha:{value:1},tMap:{value:e}}})}createMesh(e){this.mesh=new n.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.scale.x=e.scale.x,this.mesh.scale.y=e.scale.y,this.mesh.scale.z=e.scale.z,this.mesh.position.x=e.position.x,this.mesh.position.y=e.position.y,this.mesh.position.z=e.position.z+.01,this.mesh.rotation.x=e.rotation.x,this.mesh.rotation.y=e.rotation.y,this.mesh.rotation.z=e.rotation.z,this.mesh.setParent(this.scene)}setElement(e){if(console.log(e.id),"collections"===e.id){const{index:s,medias:t}=e,o=t[s];this.createProgram(o.texture),this.createMesh(o.mesh),this.transition="detail"}else this.createProgram(e.texture),this.createMesh(e.mesh),this.transition="collections"}animate(e,s){const t=o.default.timeline({onComplete:s});t.to(this.mesh.scale,{duration:1.5,ease:"expo.inOut",x:e.scale.x,y:e.scale.y,z:e.scale.z},0),t.to(this.mesh.position,{duration:1.5,ease:"expo.inOut",x:e.position.x,y:e.position.y,z:e.position.z},0),t.to(this.mesh.rotation,{duration:1.5,ease:"expo.inOut",x:e.rotation.x,y:e.rotation.y,z:e.rotation.z},0),t.call((e=>{this.scene.removeChild(this.mesh)}))}}}},(function(e){e.h=()=>"61e0d1d260b867cd702b"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5iNzllN2FjYzZhOTNmNzUzZGFhZC5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7Z1lBT0EsY0FDRUEsV0FBQUEsRUFBWSxZQUFFQyxFQUFXLEdBQUVDLEVBQUUsTUFBRUMsRUFBSyxNQUFFQyxFQUFLLElBQUVDLElBQzNDQyxLQUFLTCxZQUFjQSxFQUNuQkssS0FBS0osR0FBS0EsRUFDVkksS0FBS0gsTUFBUUEsRUFDYkcsS0FBS0YsTUFBUUEsRUFDYkUsS0FBS0QsSUFBTUEsRUFFWEMsS0FBS0MsU0FBVyxJQUFJQyxFQUFBQSxNQUFNRixLQUFLSixHQUdqQyxDQUdBTyxhQUFBQSxDQUFjQyxHQUNaSixLQUFLSyxRQUFVLElBQUlDLEVBQUFBLFFBQVFOLEtBQUtKLEdBQUksQ0FDbENXLFNBQVEsVUFDUkMsT0FBTSxVQUNOQyxTQUFVLENBQ1JDLE9BQVEsQ0FBRUMsTUFBTyxHQUNqQkMsS0FBTSxDQUFFRCxNQUFPUCxLQUdyQixDQUVBUyxVQUFBQSxDQUFXQyxHQUNUZCxLQUFLYyxLQUFPLElBQUlDLEVBQUFBLEtBQUtmLEtBQUtKLEdBQUksQ0FDNUJLLFNBQVVELEtBQUtDLFNBQ2ZJLFFBQVNMLEtBQUtLLFVBR2hCTCxLQUFLYyxLQUFLRSxNQUFNQyxFQUFJSCxFQUFLRSxNQUFNQyxFQUMvQmpCLEtBQUtjLEtBQUtFLE1BQU1FLEVBQUlKLEVBQUtFLE1BQU1FLEVBQy9CbEIsS0FBS2MsS0FBS0UsTUFBTUcsRUFBSUwsRUFBS0UsTUFBTUcsRUFFL0JuQixLQUFLYyxLQUFLTSxTQUFTSCxFQUFJSCxFQUFLTSxTQUFTSCxFQUNyQ2pCLEtBQUtjLEtBQUtNLFNBQVNGLEVBQUlKLEVBQUtNLFNBQVNGLEVBQ3JDbEIsS0FBS2MsS0FBS00sU0FBU0QsRUFBSUwsRUFBS00sU0FBU0QsRUFBSSxJQUV6Q25CLEtBQUtjLEtBQUtPLFNBQVNKLEVBQUlILEVBQUtPLFNBQVNKLEVBQ3JDakIsS0FBS2MsS0FBS08sU0FBU0gsRUFBSUosRUFBS08sU0FBU0gsRUFDckNsQixLQUFLYyxLQUFLTyxTQUFTRixFQUFJTCxFQUFLTyxTQUFTRixFQUdyQ25CLEtBQUtjLEtBQUtRLFVBQVV0QixLQUFLSCxNQUczQixDQUdBMEIsVUFBQUEsQ0FBV0MsR0FHVCxHQUZBQyxRQUFRQyxJQUFJRixFQUFRRyxJQUVELGdCQUFmSCxFQUFRRyxHQUFzQixDQUNoQyxNQUFNLE1BQUVDLEVBQUssT0FBRUMsR0FBV0wsRUFDcEJNLEVBQVFELEVBQU9ELEdBRXJCNUIsS0FBS0csY0FBYzJCLEVBQU0xQixTQUN6QkosS0FBS2EsV0FBV2lCLEVBQU1oQixNQUV0QmQsS0FBSytCLFdBQWEsUUFDcEIsTUFDRS9CLEtBQUtHLGNBQWNxQixFQUFRcEIsU0FDM0JKLEtBQUthLFdBQVdXLEVBQVFWLE1BRXhCZCxLQUFLK0IsV0FBYSxhQUl0QixDQUVBQyxPQUFBQSxDQUFRUixFQUFTUyxHQUVmLE1BQU1DLEVBQVdDLEVBQUFBLFFBQUtELFNBQVMsQ0FDN0JELGVBRUZDLEVBQVNFLEdBQUdwQyxLQUFLYyxLQUFLRSxNQUFPLENBQzNCcUIsU0FBVSxJQUNWQyxLQUFNLGFBQ05yQixFQUFHTyxFQUFRUixNQUFNQyxFQUNqQkMsRUFBR00sRUFBUVIsTUFBTUUsRUFDakJDLEVBQUdLLEVBQVFSLE1BQU1HLEdBRWhCLEdBQ0hlLEVBQVNFLEdBQUdwQyxLQUFLYyxLQUFLTSxTQUFVLENBQzlCaUIsU0FBVSxJQUNWQyxLQUFNLGFBQ05yQixFQUFHTyxFQUFRSixTQUFTSCxFQUNwQkMsRUFBR00sRUFBUUosU0FBU0YsRUFDcEJDLEVBQUdLLEVBQVFKLFNBQVNELEdBQ25CLEdBRUhlLEVBQVNFLEdBQUdwQyxLQUFLYyxLQUFLTyxTQUFVLENBQzlCZ0IsU0FBVSxJQUNWQyxLQUFNLGFBQ05yQixFQUFHTyxFQUFRSCxTQUFTSixFQUNwQkMsRUFBR00sRUFBUUgsU0FBU0gsRUFDcEJDLEVBQUdLLEVBQVFILFNBQVNGLEdBQ25CLEdBR0hlLEVBQVNLLE1BQUtDLElBQ1p4QyxLQUFLSCxNQUFNNEMsWUFBWXpDLEtBQUtjLEtBQUssR0FJckMsa0JDakhGNEIsRUFBb0JDLEVBQUksSUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovL2Zsb2VtYS8uL2FwcC9jb21wb25lbnRzL0NhbnZhcy9UcmFuc2l0aW9uLmpzIiwid2VicGFjazovL2Zsb2VtYS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiLy8gLy/lpITnkIbnhafniYdcbmltcG9ydCBHU0FQIGZyb20gJ2dzYXAnXG5pbXBvcnQgeyBNZXNoLCBQbGFuZSwgUHJvZ3JhbSwgVGV4dHVyZSB9IGZyb20gJ29nbCc7XG5cbmltcG9ydCBmcmFnbWVudCBmcm9tICdzaGFkZXJzL3BsYW5lLWZyYWdtZW50Lmdsc2wnO1xuaW1wb3J0IHZlcnRleCBmcm9tICdzaGFkZXJzL3BsYW5lLXZlcnRleC5nbHNsJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3Mge1xuICBjb25zdHJ1Y3Rvcih7IGNvbGxlY3Rpb25zLCBnbCwgc2NlbmUsIHNpemVzLCB1cmwgfSkge1xuICAgIHRoaXMuY29sbGVjdGlvbnMgPSBjb2xsZWN0aW9ucztcbiAgICB0aGlzLmdsID0gZ2w7XG4gICAgdGhpcy5zY2VuZSA9IHNjZW5lO1xuICAgIHRoaXMuc2l6ZXMgPSBzaXplcztcbiAgICB0aGlzLnVybCA9IHVybDtcblxuICAgIHRoaXMuZ2VvbWV0cnkgPSBuZXcgUGxhbmUodGhpcy5nbClcbiAgICAvLyDkuIrpnaLnmoRlbG1lbnTpg73mmK/pnIDopoHlpI3nlKjnmoTmiYDku6XlnKjov5nph4zliJ3lp4vljJZcblxuICB9XG5cbiAgLy8g54S25ZCO5bCG6YCJ5aW955qE54Wn54mH5Lyg57uZcHJvZ3JhbeWkhOeQhui0tOWbvlxuICBjcmVhdGVQcm9ncmFtKHRleHR1cmUpIHtcbiAgICB0aGlzLnByb2dyYW0gPSBuZXcgUHJvZ3JhbSh0aGlzLmdsLCB7XG4gICAgICBmcmFnbWVudCxcbiAgICAgIHZlcnRleCxcbiAgICAgIHVuaWZvcm1zOiB7XG4gICAgICAgIHVBbHBoYTogeyB2YWx1ZTogMSB9LFxuICAgICAgICB0TWFwOiB7IHZhbHVlOiB0ZXh0dXJlIH1cbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgY3JlYXRlTWVzaChtZXNoKSB7XG4gICAgdGhpcy5tZXNoID0gbmV3IE1lc2godGhpcy5nbCwge1xuICAgICAgZ2VvbWV0cnk6IHRoaXMuZ2VvbWV0cnksXG4gICAgICBwcm9ncmFtOiB0aGlzLnByb2dyYW0sXG4gICAgfSk7XG5cbiAgICB0aGlzLm1lc2guc2NhbGUueCA9IG1lc2guc2NhbGUueDtcbiAgICB0aGlzLm1lc2guc2NhbGUueSA9IG1lc2guc2NhbGUueTtcbiAgICB0aGlzLm1lc2guc2NhbGUueiA9IG1lc2guc2NhbGUuejtcblxuICAgIHRoaXMubWVzaC5wb3NpdGlvbi54ID0gbWVzaC5wb3NpdGlvbi54O1xuICAgIHRoaXMubWVzaC5wb3NpdGlvbi55ID0gbWVzaC5wb3NpdGlvbi55O1xuICAgIHRoaXMubWVzaC5wb3NpdGlvbi56ID0gbWVzaC5wb3NpdGlvbi56ICsgMC4wMTtcblxuICAgIHRoaXMubWVzaC5yb3RhdGlvbi54ID0gbWVzaC5yb3RhdGlvbi54O1xuICAgIHRoaXMubWVzaC5yb3RhdGlvbi55ID0gbWVzaC5yb3RhdGlvbi55O1xuICAgIHRoaXMubWVzaC5yb3RhdGlvbi56ID0gbWVzaC5yb3RhdGlvbi56O1xuXG5cbiAgICB0aGlzLm1lc2guc2V0UGFyZW50KHRoaXMuc2NlbmUpO1xuICAgIC8vIG1lc2jmmK9zY2VuZeeahOWtkOWFg+e0oOOAglxuXG4gIH1cblxuICAvLyBFbGVtZW50XG4gIHNldEVsZW1lbnQoZWxlbWVudCkge1xuICAgIGNvbnNvbGUubG9nKGVsZW1lbnQuaWQpXG5cbiAgICBpZiAoZWxlbWVudC5pZCA9PT0gJ2NvbGxlY3Rpb25zJykge1xuICAgICAgY29uc3QgeyBpbmRleCwgbWVkaWFzIH0gPSBlbGVtZW50XG4gICAgICBjb25zdCBtZWRpYSA9IG1lZGlhc1tpbmRleF1cblxuICAgICAgdGhpcy5jcmVhdGVQcm9ncmFtKG1lZGlhLnRleHR1cmUpXG4gICAgICB0aGlzLmNyZWF0ZU1lc2gobWVkaWEubWVzaClcblxuICAgICAgdGhpcy50cmFuc2l0aW9uID0gJ2RldGFpbCdcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jcmVhdGVQcm9ncmFtKGVsZW1lbnQudGV4dHVyZSlcbiAgICAgIHRoaXMuY3JlYXRlTWVzaChlbGVtZW50Lm1lc2gpXG5cbiAgICAgIHRoaXMudHJhbnNpdGlvbiA9ICdjb2xsZWN0aW9ucydcbiAgICB9XG5cblxuICB9XG4gIC8vIEFuaW1hdGlvbnMuXG4gIGFuaW1hdGUoZWxlbWVudCwgb25Db21wbGV0ZSkge1xuICAgIC8vIOiuqWZha2luZyBpbWFnZeWKqOi1t+adpW1hdGNo5Y6f5pyJ55qEaW1hZ2Us5L2G5piv6L+Z5Liq6L+H56iL6ZyA6KaB562J5Yeg56eSLOWboOS4uuWcqGNvbGxlY3Rpb25z55qEaW5kZXjph4zorr7nva7kuoZib3VuZHPpnIDopoHnrYnlh6Dnp5Iu6L+Z5Liq562J5Yeg56eS5ZyoQ2FudmFz55qEaW5kZXjmlofku7bph4zorr7nva5HU0FQLmRlbGF5ZWRDYWxsXG4gICAgY29uc3QgdGltZWxpbmUgPSBHU0FQLnRpbWVsaW5lKHtcbiAgICAgIG9uQ29tcGxldGVcbiAgICB9KVxuICAgIHRpbWVsaW5lLnRvKHRoaXMubWVzaC5zY2FsZSwge1xuICAgICAgZHVyYXRpb246IDEuNSxcbiAgICAgIGVhc2U6ICdleHBvLmluT3V0JyxcbiAgICAgIHg6IGVsZW1lbnQuc2NhbGUueCxcbiAgICAgIHk6IGVsZW1lbnQuc2NhbGUueSxcbiAgICAgIHo6IGVsZW1lbnQuc2NhbGUueixcblxuICAgIH0sIDApXG4gICAgdGltZWxpbmUudG8odGhpcy5tZXNoLnBvc2l0aW9uLCB7XG4gICAgICBkdXJhdGlvbjogMS41LFxuICAgICAgZWFzZTogJ2V4cG8uaW5PdXQnLFxuICAgICAgeDogZWxlbWVudC5wb3NpdGlvbi54LFxuICAgICAgeTogZWxlbWVudC5wb3NpdGlvbi55LFxuICAgICAgejogZWxlbWVudC5wb3NpdGlvbi56LFxuICAgIH0sIDApXG5cbiAgICB0aW1lbGluZS50byh0aGlzLm1lc2gucm90YXRpb24sIHtcbiAgICAgIGR1cmF0aW9uOiAxLjUsXG4gICAgICBlYXNlOiAnZXhwby5pbk91dCcsXG4gICAgICB4OiBlbGVtZW50LnJvdGF0aW9uLngsXG4gICAgICB5OiBlbGVtZW50LnJvdGF0aW9uLnksXG4gICAgICB6OiBlbGVtZW50LnJvdGF0aW9uLnosXG4gICAgfSwgMClcblxuXG4gICAgdGltZWxpbmUuY2FsbChfID0+e1xuICAgICAgdGhpcy5zY2VuZS5yZW1vdmVDaGlsZCh0aGlzLm1lc2gpXG4gICAgfSlcbiAgICAvLyDlrozmiJDliqjnlLvlkI4s5bCx6ZSA5q+B5Zu+54mHXG5cbiAgfVxuXG59XG5cblxuXG5cblxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiNjFlMGQxZDI2MGI4NjdjZDcwMmJcIikiXSwibmFtZXMiOlsiY29uc3RydWN0b3IiLCJjb2xsZWN0aW9ucyIsImdsIiwic2NlbmUiLCJzaXplcyIsInVybCIsInRoaXMiLCJnZW9tZXRyeSIsIlBsYW5lIiwiY3JlYXRlUHJvZ3JhbSIsInRleHR1cmUiLCJwcm9ncmFtIiwiUHJvZ3JhbSIsImZyYWdtZW50IiwidmVydGV4IiwidW5pZm9ybXMiLCJ1QWxwaGEiLCJ2YWx1ZSIsInRNYXAiLCJjcmVhdGVNZXNoIiwibWVzaCIsIk1lc2giLCJzY2FsZSIsIngiLCJ5IiwieiIsInBvc2l0aW9uIiwicm90YXRpb24iLCJzZXRQYXJlbnQiLCJzZXRFbGVtZW50IiwiZWxlbWVudCIsImNvbnNvbGUiLCJsb2ciLCJpZCIsImluZGV4IiwibWVkaWFzIiwibWVkaWEiLCJ0cmFuc2l0aW9uIiwiYW5pbWF0ZSIsIm9uQ29tcGxldGUiLCJ0aW1lbGluZSIsIkdTQVAiLCJ0byIsImR1cmF0aW9uIiwiZWFzZSIsImNhbGwiLCJfIiwicmVtb3ZlQ2hpbGQiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=