/*! For license information please see main.a23f5418034ccb8611b7.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/about/Gallery.js":(t,e,s)=>{s.r(e),s.d(e,{default:()=>n});var i=s("./node_modules/ogl/src/core/Transform.js"),r=s("./node_modules/gsap/index.js"),l=s("./node_modules/lodash/map.js"),o=s.n(l),h=s("./app/components/Canvas/about/Media.js");class n{constructor({element:t,geometry:e,gl:s,index:r,scene:l,sizes:o}){this.element=t,this.elementWrapper=t.querySelector(".about__gallery__wrapper"),this.geometry=e,this.gl=s,this.index=r,this.scene=l,this.sizes=o,this.group=new i.Transform,this.scroll={current:0,target:0,last:0,lerp:.1},this.createMedias(),this.group.setParent(this.scene)}createMedias(){this.mediaElements=this.element.querySelectorAll(".about__gallery__media"),this.medias=o()(this.mediaElements,((t,e)=>new h.default({element:t,geometry:this.geometry,gl:this.gl,index:e,scene:this.group,sizes:this.sizes})))}onResize(t){this.bounds=this.elementWrapper.getBoundingClientRect(),this.sizes=t.sizes,this.width=this.bounds.width/window.innerWidth*this.sizes.width,this.scroll.current=this.scroll.target=0,o()(this.medias,(e=>e.onResize(t,this.scroll.current)))}onTouchDown({x:t,y:e}){this.scroll.start=this.scroll.current}onTouchMove({x:t,y:e}){const s=t.start-t.end;this.scroll.target=this.scroll.start-s}onTouchUp({x:t,y:e}){}update(){this.bounds&&(this.scroll.current<this.scroll.target?this.direction="right":this.scroll.current>this.scroll.target&&(this.direction="left"),this.scroll.current=r.default.utils.interpolate(this.scroll.current,this.scroll.target,this.scroll.lerp),o()(this.medias,((t,e)=>{const s=t.mesh.scale.x/2;if("left"===this.direction){t.mesh.position.x+s<-this.sizes.width/2&&(t.extra+=this.width)}else if("right"===this.direction){t.mesh.position.x-s>this.sizes.width/2&&(t.extra-=this.width)}t.update(this.scroll.current)})))}destroy(){}}}},(function(t){t.h=()=>"2b5ad3abca17a7230fb3"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmxvZW1hLy4vYXBwL2NvbXBvbmVudHMvQ2FudmFzL2Fib3V0L0dhbGxlcnkuanMiLCJ3ZWJwYWNrOi8vZmxvZW1hL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUcmFuc2Zvcm0gfSBmcm9tICdvZ2wnXG5pbXBvcnQgR1NBUCBmcm9tICdnc2FwJ1xuXG5pbXBvcnQgbWFwIGZyb20gJ2xvZGFzaC9tYXAnO1xuXG5pbXBvcnQgTWVkaWEgZnJvbSAnLi9NZWRpYSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbGxlcnkge1xuICBjb25zdHJ1Y3Rvcih7ZWxlbWVudCwgZ2VvbWV0cnksIGdsLCBpbmRleCwgc2NlbmUsIHNpemVzfSkge1xuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnRcbiAgICB0aGlzLmVsZW1lbnRXcmFwcGVyID0gZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuYWJvdXRfX2dhbGxlcnlfX3dyYXBwZXInKVxuICAgIHRoaXMuZ2VvbWV0cnkgPSBnZW9tZXRyeVxuICAgIHRoaXMuZ2wgPSBnbFxuICAgIHRoaXMuaW5kZXggPSBpbmRleFxuICAgIHRoaXMuc2NlbmUgPSBzY2VuZVxuICAgIHRoaXMuc2l6ZXMgPSBzaXplc1xuXG4gICAgdGhpcy5ncm91cCA9bmV3IFRyYW5zZm9ybSgpXG5cbiAgICB0aGlzLnNjcm9sbCA9IHtcbiAgICAgIGN1cnJlbnQgOjAsXG4gICAgICB0YXJnZXQgOjAsXG4gICAgICBsYXN0IDowLFxuICAgICAgbGVycDogMC4xXG4gICAgfVxuXG4gICAgdGhpcy5jcmVhdGVNZWRpYXMoKVxuICAgIHRoaXMuZ3JvdXAuc2V0UGFyZW50KHRoaXMuc2NlbmUpXG4gIH1cblxuICBjcmVhdGVNZWRpYXMoKXtcbiAgICB0aGlzLm1lZGlhRWxlbWVudHMgPXRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYWJvdXRfX2dhbGxlcnlfX21lZGlhJylcbiAgICAvLyDms6jmhI/vvIzlm77niYfpgInmi6nmmK/pgInmi6nkuIDkuKrnsbvlkI3vvIguKSDmiJbogIVJROWQje+8iCPvvInmiYDku6XvvIzopoHms6jmhI/kuI3mmK/pgInmi6nlrZfnrKbkuLJcblxuICAgIHRoaXMubWVkaWFzID0gbWFwKHRoaXMubWVkaWFFbGVtZW50cywgKGVsZW1lbnQsIGluZGV4KSA9PiB7XG5cbiAgICAgIHJldHVybiBuZXcgTWVkaWEoe1xuICAgICAgICBlbGVtZW50LFxuICAgICAgICBnZW9tZXRyeTogdGhpcy5nZW9tZXRyeSxcbiAgICAgICAgZ2w6IHRoaXMuZ2wsXG4gICAgICAgIGluZGV4LFxuICAgICAgICBzY2VuZTogdGhpcy5ncm91cCxcbiAgICAgICAgc2l6ZXM6IHRoaXMuc2l6ZXNcbiAgICAgIH0pO1xuXG4gICAgfSlcbiAgfVxuLyoqXG4gKiBFdmVudHMuXG4gKi9cbiAgb25SZXNpemUoZXZlbnQpIHtcbiAgICB0aGlzLmJvdW5kcyA9IHRoaXMuZWxlbWVudFdyYXBwZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgICAvLyDojrflj5blhYPntKDnmoTkvY3nva7lkozlsLrlr7hcblxuICAgIHRoaXMuc2l6ZXMgPSBldmVudC5zaXplc1xuICAgIC8vIOWxj+W5leeahOWwuuWvuO+8jOe7mXVwZGF0ZeiAjOS4jeaYr+eUu+W4g+eahFxuXG4gICAgdGhpcy53aWR0aCA9IHRoaXMuYm91bmRzLndpZHRoIC8gd2luZG93LmlubmVyV2lkdGggKiB0aGlzLnNpemVzLndpZHRoXG4gICAgLy8g6K6h566X5b2T5YmN55S75buK55qE5a695bqm5Y2g6KeG56qX5Y+j55qE5a695bqm55qE5aSa5bCR54S25ZCO5LmY5Lul5YW35L2T55qE5a695bqmLS0+5bCG5YWD57Sg5Zyo6KeG5Y+j5Lit55qE5q+U5L6L6L2s5o2i5Li65YW35L2T55qE5a6e6ZmF5a695bqm44CC5ZON5bqU5byP5biD5bGAXG5cbiAgICB0aGlzLnNjcm9sbC5jdXJyZW50ID0gdGhpcy5zY3JvbGwudGFyZ2V0ID0gMFxuXG4gICAgbWFwKHRoaXMubWVkaWFzLCBtZWRpYSA9PiBtZWRpYS5vblJlc2l6ZShldmVudCwgdGhpcy5zY3JvbGwuY3VycmVudCkpXG5cbiAgfVxuXG4gIG9uVG91Y2hEb3duKHsgeCwgeSB9KSB7XG4gICAgdGhpcy5zY3JvbGwuc3RhcnQ9IHRoaXMuc2Nyb2xsLmN1cnJlbnRcbiAgfVxuXG4gIG9uVG91Y2hNb3ZlKHsgeCwgeSB9KSB7XG4gICAgY29uc3QgZGlzdGFuY2UgPSB4LnN0YXJ0IC0geC5lbmRcblxuICAgIHRoaXMuc2Nyb2xsLnRhcmdldCA9dGhpcy5zY3JvbGwuc3RhcnQgLWRpc3RhbmNlXG5cbiAgICAvLyDlpoLmnpzpvKDmoIflkozlm77niYfnmoTnp7vliqjnm7jlj43mlrnlkJHvvIzopoHnlKjlh4/lj7dcblxuXG4gIH1cblxuICBvblRvdWNoVXAoeyB4LCB5IH0pIHtcblxuICB9XG5cblxuXG4gIC8vIFVwZGF0ZVxuICB1cGRhdGUoKSB7XG4gICAgaWYgKCF0aGlzLmJvdW5kcykgcmV0dXJuXG5cbiAgICBpZiAodGhpcy5zY3JvbGwuY3VycmVudCA8IHRoaXMuc2Nyb2xsLnRhcmdldCkge1xuICAgICAgdGhpcy5kaXJlY3Rpb24gPSAncmlnaHQnXG4gICAgfSBlbHNlIGlmICh0aGlzLnNjcm9sbC5jdXJyZW50ID4gdGhpcy5zY3JvbGwudGFyZ2V0KSB7XG4gICAgICB0aGlzLmRpcmVjdGlvbiA9ICdsZWZ0J1xuICAgIH1cbiAgICAvLyDmo4DmtYvpvKDmoIfmu5rliqjmlrnlkJHvvIzlvZPliY3kvY3nva7lkozlhYjliY3kvY3nva7lgZrmr5TovoPjgIJcblxuICAgIHRoaXMuc2Nyb2xsLmN1cnJlbnQgPSBHU0FQLnV0aWxzLmludGVycG9sYXRlKHRoaXMuc2Nyb2xsLmN1cnJlbnQsIHRoaXMuc2Nyb2xsLnRhcmdldCwgdGhpcy5zY3JvbGwubGVycClcbiAgICBcblxuICAgIG1hcCh0aGlzLm1lZGlhcywgKG1lZGlhLCBpbmRleCkgPT4ge1xuICAgIC8vIEZvciBYIGF4aXNcbiAgICAgIGNvbnN0IHNjYWxlWCA9IG1lZGlhLm1lc2guc2NhbGUueCAvIDJcblxuICAgICAgaWYgKHRoaXMuZGlyZWN0aW9uID09PSAnbGVmdCcpe1xuICAgICAgICBjb25zdCB4ID0gbWVkaWEubWVzaC5wb3NpdGlvbi54ICsgc2NhbGVYXG5cbiAgICAgICAgaWYgKHggPCAtdGhpcy5zaXplcy53aWR0aCAvIDIpIHtcbiAgICAgICAgICBtZWRpYS5leHRyYSArPSB0aGlzLndpZHRoXG4gXG4gICAgICAgIH1cbiAgICAgIH1lbHNlIGlmKHRoaXMuZGlyZWN0aW9uID09PSAncmlnaHQnKXtcbiAgICAgICAgY29uc3QgeCA9IG1lZGlhLm1lc2gucG9zaXRpb24ueCAtIHNjYWxlWFxuICAgICAgICBcbiAgICAgICAgaWYoeCA+IHRoaXMuc2l6ZXMud2lkdGggLyAyKXtcbiAgICAgICAgICBtZWRpYS5leHRyYSAtPSB0aGlzLndpZHRoXG4gICAgICAgIH1cbiAgICAgICAgIC8vIOi/meS4quWFg+e0oOeahOW3pui+uei+ueeVjOWkp+S6juWxj+W5leacgOWPs+i+uSzlsLHnp7vliLDliY3pnaLmnaVcbiAgICAgIH1cblxuICAgIFxuICAgICAgbWVkaWEudXBkYXRlKHRoaXMuc2Nyb2xsLmN1cnJlbnQpXG4gICAgICAvLyDmoLnmja7mu5rliqjnmoTkvY3nva7mnaXmm7TmlrDlqpLkvZPlhYPntKDnmoTnirbmgIHjgIJcbiAgICAgIC8vIOWmguaenOWbvueJh+WKoOi9veS6hu+8jOS9huaYr+ayoeacieaMieeFp+WOn+adpeeahOS9jee9ruaUvu+8jOiusOW+l+abtOaWsOi/meS4qlxuICAgICAgLy8gbWVkaWEubWVzaC5wb3NpdGlvbi55ID0gTWF0aC5jb3MoKG1lZGlhLm1lc2gucG9zaXRpb24ueCAvIHRoaXMud2lkdGgpICogTWF0aC5QSSkgKiAxIC0gMVxuICAgICAgLy8gLy8gZ2FsbGVyeeeahOa7muWKqOWKqOeUu1xuICAgICBcblxuICAgIH0pXG4gICAgLy8g5Lyg57uZbWVkaWHmlofku7ZcblxuICB9XG4gIC8qKlxuICAqIERlc3Ryb3lcbiAgKi9cbiAgZGVzdHJveSgpe1xuICBcbiAgfVxuXG59IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiMmI1YWQzYWJjYTE3YTcyMzBmYjNcIikiXSwibmFtZXMiOlsiR2FsbGVyeSIsImNvbnN0cnVjdG9yIiwiZWxlbWVudCIsImdlb21ldHJ5IiwiZ2wiLCJpbmRleCIsInNjZW5lIiwic2l6ZXMiLCJ0aGlzIiwiZWxlbWVudFdyYXBwZXIiLCJxdWVyeVNlbGVjdG9yIiwiZ3JvdXAiLCJUcmFuc2Zvcm0iLCJzY3JvbGwiLCJjdXJyZW50IiwidGFyZ2V0IiwibGFzdCIsImxlcnAiLCJjcmVhdGVNZWRpYXMiLCJzZXRQYXJlbnQiLCJtZWRpYUVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsIm1lZGlhcyIsIm1hcCIsIk1lZGlhIiwib25SZXNpemUiLCJldmVudCIsImJvdW5kcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIndpZHRoIiwid2luZG93IiwiaW5uZXJXaWR0aCIsIm1lZGlhIiwib25Ub3VjaERvd24iLCJ4IiwieSIsInN0YXJ0Iiwib25Ub3VjaE1vdmUiLCJkaXN0YW5jZSIsImVuZCIsIm9uVG91Y2hVcCIsInVwZGF0ZSIsImRpcmVjdGlvbiIsIkdTQVAiLCJ1dGlscyIsImludGVycG9sYXRlIiwic2NhbGVYIiwibWVzaCIsInNjYWxlIiwicG9zaXRpb24iLCJleHRyYSIsImRlc3Ryb3kiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=