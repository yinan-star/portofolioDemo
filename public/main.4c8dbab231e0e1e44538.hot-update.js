/*! For license information please see main.4c8dbab231e0e1e44538.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatefloema("main",{"./app/components/Canvas/Detail/index.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>d});var i=t("./node_modules/gsap/index.js"),h=t("./node_modules/ogl/src/extras/Plane.js"),a=t("./node_modules/ogl/src/core/Program.js"),n=t("./node_modules/ogl/src/core/Mesh.js"),o=t("./app/shaders/plane-fragment.glsl"),r=t("./app/shaders/plane-vertex.glsl");const d=class{constructor({gl:e,scene:s,sizes:t,transition:i}){this.id="detail",this.element=document.querySelector(".detail__media__image"),this.gl=e,this.scene=s,this.sizes=t,this.transition=i,this.geometry=new h.Plane(this.gl),this.createTexture(),this.createProgram(),this.createMesh(),this.createBounds({sizes:this.sizes}),this.show()}createTexture(){const e=this.element.getAttribute("data-src");this.texture=window.TEXTURES[e]}createProgram(){this.program=new a.Program(this.gl,{fragment:o.default,vertex:r.default,uniforms:{uAlpha:{value:1},tMap:{value:this.texture}}})}createMesh(){this.mesh=new n.Mesh(this.gl,{geometry:this.geometry,program:this.program}),this.mesh.setParent(this.scene)}createBounds({sizes:e}){this.sizes=e,this.bounds=this.element.getBoundingClientRect(),this.upadteScale(),this.upadteX(),this.upadteY()}show(){this.transition?this.transition.animate(this.mesh,(e=>{this.program.uniforms.uAlpha.value=1})):i.default.to(this.program.uniforms.uAlpha,{value:1})}hide(){}onResize(e){this.createBounds(e),this.upadteX(),this.upadteY()}onTouchDown(){}onTouchMove(){}onTouchUp(){}upadteScale(){this.height=this.bounds.height/window.innerHeight,this.width=this.bounds.width/window.innerWidth,this.mesh.scale.x=this.sizes.width*this.width,this.mesh.scale.y=this.sizes.height*this.height}upadteX(){this.x=this.bounds.left/window.innerWidth,this.mesh.position.x=-this.sizes.width/2+this.mesh.scale.x/2+this.x*this.sizes.width}upadteY(){this.y=this.bounds.top/window.innerHeight,this.mesh.position.y=this.sizes.height/2-this.mesh.scale.y/2-this.y*this.sizes.height}update(){this.bounds&&(this.upadteX(),this.upadteY())}destroy(){this.scene.removeChild(this.mesh)}}}},(function(e){e.h=()=>"cb753022a8e1d5969320"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,