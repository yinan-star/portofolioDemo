.about__content{
    display: flex;
    justify-content: center;
    // 因为content是纵着排子元素的，所以，想让子元素纵向对齐，也就是主轴居中对齐
    position: relative;
    margin: 20rem auto;
    &:first-child {
        margin-top: 0;
    }
    
    &:last-child {
        margin-bottom: 0;
    }

    &:nth-child(5){
        justify-content: flex-end;
    }
    // 对齐网页最右边

    &:nth-child(8){
        justify-content: flex-start;
    }
    // 第八个子元素对齐最左边
    
}

.about__content__wrapper{
    display: flex;
    .about__content--right & {
        flex-direction: row-reverse
        // 类似于从左向右的元素，变成从右向左,但是想反转的是图片和box（label 和description)
    }

    @include media('<phone'){
        .about__content:nth-child(3) & {
            flex-direction: column-reverse;
        }
        .about__content:nth-child(5) & {
            flex-direction: column;
        }
        .about__content:nth-child(8) & {
            flex-direction: column-reverse;
        }
        .about__content:nth-child(9) & {
            flex-direction: column-reverse;
        }
    }


}

.about__content__box{
    display: flex;

    @include media('<phone'){
        margin: auto;
        // 使整个子元素居中于父元素的容器
        width: 60.9rem;
    
        .about__content:nth-child(3) & {
          margin-top: 10rem;
        }

        .about__content:nth-child(5) & {
            margin-bottom: 10rem;
          }

        .about__content:nth-child(8) & {
            margin-top: 10rem;
        }

        .about__content:nth-child(9) & {
            margin-top: 10rem;
        }
      
    
    }  
}

.about__content__label{
    @extend %description-12;
    width: 18rem;
    text-transform: uppercase;

    @include media('<=phone') {
        // width:15rem;
        padding-right: 2.5rem;
        // font-size: 2.4rem;

        .about__content:nth-child(9) & {
            word-break: break-all;
            // 如果一个单词超出了容器的宽度，它会强制性地被断开，不考虑单词边界，直接在字符间断开
        }
    }    
}

.about__content__description{
    width: 36.2rem;
    p:not(:first-child) {
        margin-top: 2.5rem;
      }
    
    @include media('<=phone') {
        width: calc(100% - 15rem);
        // 表示该描述内容所占宽度为父容器宽度减去标签固定宽度后剩余的空间,占父容器的100%并减去label的固定空间
        // 注意在+和-号周围要添加空格
    }

}

.about__content__media{
    position: relative;

    .about__content:nth-child(3) & {
      width: 53.8rem;
      margin-left: 18rem;
      height: 88.8rem;
    }
    // 因为about__content里面的子元素有gallery、title、and then才是media。
    // 第三个子元素的蒙版，要数的话，去figma看看这是第几个section
    .about__content:nth-child(5) & {
        width: 96rem;
        margin-left: 18rem;
        height: 60rem;
    }
    .about__content:nth-child(8) & {
        width: 84.2rem;
        margin-right: 12rem;
        height: 52rem;
    }
    .about__content:nth-child(9) & {
        width: 60.8rem;
        margin-left: 22rem;
        height: 85.8rem;
    }

    @include media('<phone'){
        .about__content:nth-child(3) & {
            height: 91.4rem;
            margin-left: 0;
            width: 60.9rem;
        }

        .about__content:nth-child(5) & {
            width: 100vw;
            // 和100%的区别是他可以打破之前的容器，按照整个视窗了占比。因为它以视窗的宽度为准，而不是父容器的宽度
            margin-left: 0;
            height: 50rem;
        }

        .about__content:nth-child(8) & {
            width: 100vw;
            margin-right: 0;
            // 不把图像的右边距搞zero会使得content内容有左边距因为他们是纵向排列的关系
            height: 52rem;
        }

        .about__content:nth-child(9) & {
            width: 60.8rem;
            margin-left:0;
            height: 85.8rem;
        }
    }

}

.about__content__media__image{  
    @extend %cover;
    object-fit: cover;

}